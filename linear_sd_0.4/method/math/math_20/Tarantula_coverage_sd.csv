line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#730	1.0	1.0	1.0	negcovMax<=negalphaold	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1014	0.9994201217744274	1.0	0.9996520730646564	isMinimize ? penalty : -penalty>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#994	0.9997099767981439	0.9997099767981439	0.9995360637839139	x[i] > 1.0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#934	0.9994201217744274	0.9994201217744274	0.9994201217744274	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#909	0.9994201217744274	0.9994201217744274	0.9994201217744274	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#523	0.9991304347826088	1.0	0.9987831124993704	!(hasInfiniteBounds)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.9976845151953692	0.9979733642154025	0.997453736776702	upper[i]>v	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1220	0.9956672443674176	1.0	0.9974003466204505	mat.getColumnDimension()==m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#806	0.9956672443674176	1.0	0.9974003466204505	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#591	1.0	1.0	0.9974003466204505	sumw * sumw / sumwq>=sumwq	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#851	0.9956672443674176	1.0	0.9974003466204505	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#947	0.9994201217744274	0.9994201217744274	0.9971683953302215	boundaries != null && isRepairMode	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.9945181765724178	0.9997099767981439	0.9965948966627083	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.9945181765724178	0.9988409156766155	0.9962472722140969	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.993371757925072	1.0	0.9960230547550433	lambda==diagonalOnly	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#787	0.9959549263218722	0.9959549263218722	0.9959549263218722	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1315	0.9959549263218722	0.9959549263218722	0.9959549263218722	!(i < indices.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1327	0.9959549263218722	0.9959549263218722	0.9959549263218722	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1086	0.9959549263218722	0.9959549263218722	0.9959549263218722	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1130	0.9959549263218722	0.9959549263218722	0.9959549263218722	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1117	0.9959549263218722	0.9959549263218722	0.9959549263218722	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.9956672443674176	0.9956672443674176	0.9956672443674175	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1353	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(c < popSize)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.9956672443674176	0.9956672443674176	0.9956672443674175	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1288	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1239	0.9956672443674176	0.9956672443674176	0.9956672443674175	start==step	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1071	0.9956672443674176	0.9956672443674176	0.9956672443674175	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1056	0.9956672443674176	0.9956672443674176	0.9956672443674175	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.9956672443674176	0.9956672443674176	0.9956672443674175	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.9956672443674176	0.9956672443674176	0.9956672443674175	hsig	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1253	0.9956672443674176	0.9956672443674176	0.9956672443674175	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1302	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1041	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#819	0.9956672443674176	0.9956672443674176	0.9956672443674175	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1278	0.9956672443674176	0.9956672443674176	0.9956672443674175	min>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1101	0.9956672443674176	0.9956672443674176	0.9956672443674175	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.9953797285590528	0.9953797285590528	0.9953797285590527	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.9950923787528868	0.9956672443674176	0.9953223249986991	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.9948051948051948	0.9948051948051948	0.9948051948051948	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.9945181765724178	0.9948051948051948	0.9946329838655286	getColumnDimension()>=rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.9939446366782007	0.9939446366782007	0.9939446366782007	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.9936581147304699	0.9936581147304699	0.9936581147304699	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.993371757925072	0.993371757925072	0.993371757925072	getRowDimension()>=column	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#106	0.992799539170507	0.993371757925072	0.993028426672333	r * FastMath.sin(alpha)>alpha	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.9890961262553801	0.9988409156766155	0.9929940420238743	getRowDimension()<column	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.9879621668099742	0.9997099767981439	0.992491440575991	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.9919424460431655	0.9919424460431655	0.9919424460431655	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.9905172413793103	0.9913718723037102	0.9908590937490702	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.9902326917552426	0.9905172413793103	0.9903465116048698	maximalCount!=0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#245	0.9896640826873384	0.9896640826873384	0.9896640826873384	mt[k + (M - N)] ^ (y >>> 1) ^ MAG01[y & 0x1]<=k	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.9888123924268503	0.9888123924268503	0.9886422497725755	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.9888123924268503	0.9888123924268503	0.9886422497725755	!(i < rows)	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.9848571428571428	0.9925136769363663	0.9879197564888321	FastMath.abs(p - c)>p	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.9873961615582928	0.9873961615582928	0.9873961615582927	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.9871134020618557	0.9871134020618557	0.9871134020618557	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.9868308044660751	0.9868308044660751	0.9868308044660751	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.9865483686319405	0.9865483686319405	0.9863790041051368	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.985983981693364	0.985983981693364	0.985983981693364	!(i < nCols)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.9762107051826678	0.9982623805386621	0.9850313753250655	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.9764872521246459	0.9973958333333335	0.984850684608121	m.getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.9759343148357871	0.9950923787528868	0.9831006007232199	d[0].length>nRows	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.9795396419437339	0.9795396419437339	0.9795396419437339	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.9792613636363635	0.9795396419437339	0.9793726749593117	function.value(point)>0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.9775950085082246	0.9775950085082246	0.9775950085082246	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.9764872521246459	0.9789832433967622	0.9774856486334924	relativeThreshold>=0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.9767639557948428	0.9767639557948428	0.9767639557948427	absoluteThreshold>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.96016713091922	0.9953797285590528	0.9742521699751532	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#407	0.9598997493734336	0.9953797285590528	0.9740917410476813	getColumnDimension()>rows	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.9596325167037862	0.9945181765724178	0.9735867806512388	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.9734538266026546	0.9731789949181253	0.9733438939288428	sinQ(xa,xb)!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.9709859154929578	0.9709859154929578	0.9709859154929578	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.969620253164557	0.969620253164557	0.969620253164557	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.9598997493734336	0.9596325167037862	0.9597928563055746	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.9585650723025585	0.9585650723025585	0.9585650723025585	0>=0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.9511589403973509	0.9511589403973509	0.9511589403973508	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.9488026424442609	0.9488026424442609	0.9488026424442608	i < nRows	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1799	0.9278600269179005	0.9751060820367752	0.9467584489654504	c<sinEpsA	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.938981204031599	0.946978021978022	0.9421799312101683	finalRemB>0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.9281098546042004	0.96016713091922	0.9409327651302082	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#304	0.929361013750337	0.9535269709543569	0.939027396631945	data[row][column]<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.938981204031599	0.938981204031599	0.938981204031599	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.938981204031599	0.938981204031599	0.938981204031599	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.938981204031599	0.938981204031599	0.938981204031599	finalRemA>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#283	0.9313699000270198	0.9472382522671065	0.9377172409230545	subMatrix[0].length==nRows	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.9167553191489363	0.9628491620111731	0.935192856293831	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.933387489845654	0.9374490073429427	0.9350120968445694	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.9221508828250402	0.9454196379594075	0.9314583848787872	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.9221508828250402	0.9374490073429427	0.9282701326322012	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.9116635810632109	0.9464579901153212	0.9255813446840551	log(x,null)<0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.9201815269620929	0.9204272363150867	0.9202798107032903	data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.9097387173396674	0.9097387173396674	0.9097387173396674	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.9094986807387863	0.9094986807387863	0.9094986807387861	((data == null) || (data[0] == null)) ? 0 : data[0].length>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.8955572876071707	0.8955572876071707	0.8955572876071707	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.8939315352697096	0.8939315352697096	0.8939315352697096	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.8936997666580244	0.8936997666580244	0.8936997666580244	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3508	0.890467579436838	0.9109408033826638	0.8908360170181927	a>0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.8684807256235827	0.9145661979304855	0.8869149145463439	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.8634769539078155	0.9107001321003962	0.8823662251848479	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.8708943911066195	0.8711144806671721	0.8709824269308406	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.8693568726355613	0.8695761856710394	0.8694445978497525	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.8606741573033708	0.8606741573033708	0.8606741573033709	!(cb == null)	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.7979166666666666	0.9219042524739236	0.8475117009895694	Math.sqrt(a)<=0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.8356363636363636	0.8360417171962163	0.8357985050603047	!(o == null)	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.7469122426868906	0.8034965034965036	0.7695459470107358	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#240	1.0	0.0	0.6		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#247	1.0	0.0	0.6		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#921	0.9956672443674176	0.0	0.5974003466204505		GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#360	0.9956672443674176	0.0	0.5974003466204505		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#896	0.9956672443674176	0.0	0.5974003466204505		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#982	0.9956672443674176	0.0	0.5974003466204505		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1209	0.9956672443674176	0.0	0.5974003466204505		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#846	0.9956672443674176	0.0	0.5974003466204505		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.9953797285590528	0.0	0.5972278371354316		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.993371757925072	0.0	0.5960230547550432		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#282	0.993371757925072	0.0	0.5960230547550432		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.9925136769363663	0.0	0.5955082061618198		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.9899483055715106	0.0	0.5939689833429064		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.9899483055715106	0.0	0.5939689833429064		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.9888123924268503	0.0	0.5932874354561102		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.9885288213363923	0.0	0.5931172928018353		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.9885288213363923	0.0	0.5931172928018353		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.9885288213363923	0.0	0.5931172928018353		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.9865483686319405	0.0	0.5919290211791642		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.9831717056474615	0.0	0.5899030233884769		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.9812126387702819	0.0	0.5887275832621691		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.9792613636363635	0.0	0.587556818181818		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.9781498297389329	0.0	0.5868898978433598		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.9775950085082246	0.0	0.5865570051049347		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.9762107051826678	0.0	0.5857264231096007		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.9709859154929578	0.0	0.5825915492957746		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.9709859154929578	0.0	0.5825915492957746		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.9701660568533634	0.0	0.582099634112018		_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.9639261744966444	0.0	0.5783557046979866		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.9596325167037862	0.0	0.5757795100222717		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.9527363184079602	0.0	0.5716417910447761		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.9516841524019878	0.0	0.5710104914411926		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#252	0.9506343077771648	0.0	0.5703805846662989		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.9495867768595041	0.0	0.5697520661157024		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.9485415520088057	0.0	0.5691249312052834		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.9384699156003268	0.0	0.5630819493601961		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.9318734793187349	0.0	0.5591240875912409		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#543	0.9313699000270198	0.0	0.5588219400162119		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#310	0.9313699000270198	0.0	0.5588219400162119		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.929361013750337	0.0	0.5576166082502022		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.9016479204812975	0.0	0.5409887522887785		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.8764302059496567	0.0	0.525858123569794		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.8731003039513677	0.0	0.5238601823708207		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.8676063428139944	0.0	0.5205638056883967		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.8608891108891109	0.0	0.5165334665334665		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#107	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
