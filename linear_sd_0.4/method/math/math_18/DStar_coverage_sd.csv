line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.0625	Infinity	Infinity	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#87	Infinity	0.0	Infinity		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#751	1.0	1.0	1.0	negcovMax<negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#583	1.0	1.0	0.6		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1243	0.0625	1.0	0.4375	mat.getRowDimension()==n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.0625	1.0	0.4375	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#559	0.2	1.0	0.43157894736842106	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.3333333333333333	0.5	0.4	isMinimize ? penalty : -penalty>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.3333333333333333	0.3333333333333333	0.3333333333333333	!(i < x.length)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1015	0.5	0.3333333333333333	0.3333333333333333	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#930	0.3333333333333333	0.3333333333333333	0.3333333333333333	i < x.length	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#246	0.5	0.0	0.3		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#253	0.5	0.0	0.3		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#320	0.04	0.5	0.224	checkFeasableCount==lambda	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.023255813953488372	0.5	0.21363636363636365	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#970	0.3333333333333333	0.3333333333333333	0.19999999999999998		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.047619047619047616	0.3333333333333333	0.16190476190476188	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.05	0.2	0.11000000000000001	getRowDimension()==column	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.02564102564102564	0.2	0.0953846153846154	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.1	0.1111111111111111	0.09444444444444444	upper[i]>v	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#798	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(min(diagD) <= 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1339	0.06666666666666667	0.06666666666666667	0.06666666666666667	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.06666666666666667	0.06666666666666667	0.06666666666666667	indices[indices.length - i - 1]<i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1111	0.06666666666666667	0.06666666666666667	0.06666666666666667	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1154	0.06666666666666667	0.06666666666666667	0.06666666666666667	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1140	0.06666666666666667	0.06666666666666667	0.06666666666666667	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.0625	0.06666666666666667	0.06416666666666666	!(hsig)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.011363636363636364	0.14285714285714285	0.06396103896103895	getColumnDimension()>rowCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1219	0.0625	0.0625	0.0625	!(r < n)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1377	0.0625	0.0625	0.0625	c < popSize	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1172	0.0625	0.0625	0.0625	!(i < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1316	0.0625	0.0625	0.0625	max!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.0625	0.0625	0.0625	step!=end	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1096	0.0625	0.0625	0.0625	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1079	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.0625	0.0625	0.0625	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.0625	0.0625	0.0625	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1280	0.0625	0.0625	0.0625	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1326	0.0625	0.0625	0.0625	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.0625	0.0625	0.0625	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.0625	0.0625	0.0625	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1302	0.0625	0.0625	0.0625	min!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1125	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.058823529411764705	0.058823529411764705	0.058823529411764705	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.05555555555555555	0.0625	0.058333333333333334	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.05	0.05263157894736842	0.05105263157894736	getColumnDimension()==rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.05	0.05	0.05	cachedD == null	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.043478260869565216	0.043478260869565216	0.043478260869565216	i < diagonal.length	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.011494252873563218	0.09090909090909091	0.0432601880877743	m.getColumnDimension()>nRows	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.041666666666666664	0.041666666666666664	0.041666666666666664	cachedV == null	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#103	0.038461538461538464	0.043478260869565216	0.04046822742474916	2 * FastMath.PI * x<y	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#527	0.04	0.04	0.04	i < nRows	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#942	0.0625	0.0	0.0375		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#369	0.0625	0.0	0.0375		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#917	0.0625	0.0	0.0375		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.0625	0.0	0.0375		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1233	0.0625	0.0	0.0375		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#866	0.0625	0.0	0.0375		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.058823529411764705	0.0	0.03529411764705882		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.034482758620689655	0.034482758620689655	0.034482758620689655	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.029411764705882353	0.03225806451612903	0.030550284629981023	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.02857142857142857	0.029411764705882353	0.02890756302521008	maximalCount!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.011363636363636364	0.05555555555555555	0.028815628815628817	d[0].length>nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.00684931506849315	0.058823529411764705	0.027639000805801773	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#411	0.006802721088435374	0.058823529411764705	0.027611044417767107	getColumnDimension()>rows	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#247	0.02702702702702703	0.027777777777777776	0.02732732732732733	(mtNext & 0x80000000) | (mt[0] & 0x7fffffff)>=mtNext	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.018518518518518517	0.038461538461538464	0.026495726495726495	FastMath.abs(p - c)>p	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.041666666666666664	0.0	0.024999999999999998		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.025	0.025	0.024285714285714285	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.025	0.025	0.024285714285714285	!(i < rows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.006756756756756757	0.05	0.024054054054054058	walkInRowOrder(visitor)>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#288	0.04	0.0	0.024		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.022222222222222223	0.022222222222222223	0.022222222222222223	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.021739130434782608	0.021739130434782608	0.021739130434782608	cachedQt == null	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.03571428571428571	0.0	0.021428571428571425		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.020833333333333332	0.020833333333333332	0.020833333333333332	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.020833333333333332	0.020833333333333332	0.020578231292517006	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#535	0.02	0.02	0.02	getColumnDimension()>row	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.02702702702702703	0.0	0.016216216216216217		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.02702702702702703	0.0	0.016216216216216217		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.025	0.0	0.015		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.024390243902439025	0.0	0.014634146341463414		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.024390243902439025	0.0	0.014634146341463414		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.023809523809523808	0.0	0.014285714285714284		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.0136986301369863	0.0136986301369863	0.0136986301369863	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.013513513513513514	0.0136986301369863	0.01358756016290263	function.value(point)>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#252	0.020833333333333332	0.0	0.012499999999999999		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.011904761904761904	0.013333333333333334	0.012476190476190476	relativeThreshold>=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.012345679012345678	0.012345679012345678	0.012345679012345678	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.012048192771084338	0.012048192771084338	0.012048192771084338	absoluteThreshold>0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.010526315789473684	0.010526315789473684	0.010526315789473684	sinQ(xa,xb)!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.016666666666666666	0.0	0.01		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.009345794392523364	0.009345794392523364	0.009345794392523364	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.008928571428571428	0.008928571428571428	0.008928571428571428	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.014705882352941176	0.0	0.008823529411764706		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.013513513513513514	0.0	0.008108108108108109		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.0037174721189591076	0.0136986301369863	0.0077099353261699845	b + d<=cosEpsB	_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.01282051282051282	0.0	0.007692307692307692		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.012345679012345678	0.0	0.007407407407407407		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.011627906976744186	0.0	0.0069767441860465115		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.006896551724137931	0.006896551724137931	0.006896551724137931	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.006578947368421052	0.006578947368421052	0.006578947368421052	0>=0	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.009615384615384616	0.0	0.0057692307692307696		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.009615384615384616	0.0	0.0057692307692307696		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.009259259259259259	0.0	0.005555555555555555		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0055248618784530384	0.0055248618784530384	0.0055248618784530384	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.005263157894736842	0.005263157894736842	0.005263157894736842	!(i < nRows)	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.0037313432835820895	0.006993006993006993	0.005036008767352051	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.0031847133757961785	0.007352941176470588	0.004852004496065942	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.0044444444444444444	0.005128205128205128	0.004717948717948717	finalRemB>0	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.007692307692307693	0.0	0.004615384615384616		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0037593984962406013	0.005813953488372093	0.004581220493093198	data[row][column]<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.0044444444444444444	0.0044444444444444444	0.0044444444444444444	finalRemA>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.003875968992248062	0.00510204081632653	0.00436639772187945	subMatrix[0].length==nRows	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.004032258064516129	0.004310344827586207	0.004143492769744159	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.003424657534246575	0.005050505050505051	0.004074996540749966	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.006756756756756757	0.0	0.004054054054054054		_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0029850746268656717	0.005076142131979695	0.0038215016289112813	log(x,null)<0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.003424657534246575	0.004347826086956522	0.003793924955330554	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.002976190476190476	0.004366812227074236	0.00353243917654398	a!=0	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.005813953488372093	0.0	0.0034883720930232558		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.00558659217877095	0.0	0.0033519553072625698		_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0033222591362126247	0.0033333333333333335	0.003326688815060908	data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.00546448087431694	0.0	0.003278688524590164		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.005376344086021506	0.0	0.0032258064516129032		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.005291005291005291	0.0	0.003174603174603174		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.002890173410404624	0.002890173410404624	0.002890173410404624	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.002881844380403458	0.002881844380403458	0.002881844380403458	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.004405286343612335	0.0	0.002643171806167401		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.0024630541871921183	0.0024630541871921183	0.0024630541871921183	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.002421307506053269	0.002421307506053269	0.002421307506053269	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0024154589371980675	0.0024154589371980675	0.0024154589371980675	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.0019047619047619048	0.0030959752321981426	0.0023812472357363995	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.00390625	0.0	0.00234375		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.003875968992248062	0.0	0.002325581395348837		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.003875968992248062	0.0	0.002325581395348837		_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.0018248175182481751	0.0029498525073746312	0.0022748315138987575	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.0037593984962406013	0.0	0.0022556390977443606		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0011389521640091116	0.003401360544217687	0.002043915516092542	Math.sqrt(a)<=0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.001953125	0.0019569471624266144	0.0019546538649706457	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.0019120458891013384	0.0019157088122605363	0.0019135110583650174	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0017857142857142857	0.0017857142857142857	0.0017857142857142854	!(cb == null)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.002631578947368421	0.0	0.0015789473684210526		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.001466275659824047	0.0014705882352941176	0.0014680006900120754	!(o == null)	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.0020491803278688526	0.0	0.0012295081967213116		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.0019880715705765406	0.0	0.0011928429423459243		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.001893939393939394	0.0	0.0011363636363636363		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.0017889087656529517	0.0	0.001073345259391771		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	8.547008547008547E-4	0.0011806375442739079	9.85075530530076E-4	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#110	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
