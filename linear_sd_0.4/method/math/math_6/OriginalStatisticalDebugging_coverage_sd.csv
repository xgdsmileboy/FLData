line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.5770068518149909	0.23080274072599638	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	0.5762131355428883	0.23048525421715535	visitor.end()>0	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#116	0.0	0.5511196223185605	0.2204478489274242	function.value(params)<0	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#658	0.0	0.5490571919989263	0.21962287679957054	s * t>maxAbsoluteValue	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#145	0.0	0.5351432317117114	0.21405729268468457	getColumnDimension()<nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.0	0.5309807581926518	0.2123923032770607	d[0].length>nRows	_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#123	0.0	0.5203506653791243	0.20814026615164974	FastMath.abs(p - c)>p	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.0	0.47883165219486723	0.1915326608779469	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1303	0.0	0.42589859042496975	0.17035943616998792	lnza * epsilon>x	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#142	0.0	0.39233854681720776	0.1569354187268831	upperBound != null	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	0.0	0.3911835873103484	0.15647343492413937	data instanceof SimpleBounds	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	0.0	0.36635388127688095	0.14654155251075238	beta * hK[i]<=inv	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#247	0.0	0.33031801861443	0.132127207445772	hK[i] * z[j] + z[i] * hK[j]>xNormSqr	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.0	0.31387970957845823	0.1255518838313833	getColumnDimension()<nRows	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	0.0	0.3066903460589344	0.12267613842357378	count<=0	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2490	0.0	0.30039018298583986	0.12015607319433595	xb * TANGENT_TABLE_B[idx]==yb	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1730	0.0	0.2972489773328255	0.11889959093313021	polyCosine(epsilon)>=costB	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.0	0.2904884063458212	0.11619536253832848	getColumnDimension()==rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.0	0.28495844597895725	0.1139833783915829	getColumnDimension()!=rowCount	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.0	0.24389262793070957	0.09755705117228383	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.0	0.2019451873175441	0.08077807492701765	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#256	0.0	0.20142083493266602	0.08056833397306641	y >>> 11<=bits	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#710	0.0	0.17128974860690466	0.06851589944276186	hsig ? 0 : ccov1 * cc * (2 - cc)>negccov	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#250	0.0	0.1660228493723701	0.06640913974894805	!(Double.isNaN(vertex.getValue()))	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	0.0	0.16512117114461444	0.06604846845784577	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#609	0.0	0.16512117114461444	0.06604846845784577	(1 + 2 * Math.max(0,Math.sqrt((mueff - 1) / (dimension + 1)) - 1)) * Math.max(0.3,1 - dimension / (1e-6 + maxIterations)) + cs<=sumwq	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	0.0	0.16512117114461444	0.06604846845784577	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1102	0.0	0.16485743600995376	0.0659429744039815	!(m.getColumnDimension() == 1)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#214	0.0	0.1625044546668221	0.06500178186672884	centroid[j] + rho * (centroid[j] - xWorst[j])==scaling	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1230	0.0	0.15552415483332568	0.062209661933330274	m.getEntry(r,c)>=min	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	0.0	0.15123834447413717	0.06049533778965487	data instanceof ObjectiveFunction	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1250	0.0	0.1425201513500947	0.057008060540037875	max<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#971	0.0	0.1425201513500947	0.057008060540037875	isMinimize ? penalty : -penalty<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1264	0.0	0.1425201513500947	0.057008060540037875	min<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#910	0.0	0.1425201513500947	0.057008060540037875	isMinimize ? value : -value<=0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#108	0.0	0.13184384899233445	0.05273753959693378	2 * FastMath.PI * x<y	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1845	0.0	0.11690990676517372	0.046763962706069494	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	0.0	0.11519835335933974	0.0460793413437359	matrix.getEntry(j,i)<=relativeTolerance	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	0.0	0.08848597629116796	0.035394390516467186	atan(x,0.0,false)<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	0.0	0.08693122022466639	0.034772488089866556	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#561	0.0	0.07572224676349382	0.030288898705397527	!(inputSigma[i] > uB[i] - lB[i])	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.0	0.07494196533954124	0.0299767861358165	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	0.0733904461794258	0.029356178471770324	Math.sqrt(a)<=0	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#183	0.0	0.06328622926916039	0.025314491707664158	mt[N - 1]>=k	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2316	0.0	0.06065573778471368	0.024262295113885474	xa > 1.5707963267948966	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3548	0.0	0.0576938011971897	0.02307752047887588	a!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.055418733334895415	0.022167493333958167	data[row][column]==0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#206	0.0	0.05258576946829818	0.021034307787319274	xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j])>coeff	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.0	0.05218294167341662	0.02087317666936665	data[index]<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	0.0	0.0513976073472388	0.02055904293889552	!(s[i] < 0)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.0	0.05040609957323038	0.020162439829292153	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	0.0	0.04965368558013178	0.019861474232052714	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.0	0.049640508793444255	0.019856203517377703	log(x,null)<0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	0.0	0.04877685507848443	0.019510742031393774	p * x2 + 0.041666666666621166<=x	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.04863043694809427	0.019452174779237708	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.0	0.048321769254808626	0.01932870770192345	subMatrix[0].length==nRows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	0.0	0.0395726536150848	0.01582906144603392	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2261	0.0	0.03907257386881548	0.01562902954752619	xa > 1.5707963267948966	_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	0.0	0.03686558224975559	0.014746232899902238	data instanceof MaxEval	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	0.0	0.03543136749045015	0.014172546996180061	relativeThreshold>=0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	0.0	0.03500000845484554	0.014000003381938218	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	0.0	0.03319367005888747	0.01327746802355499	evaluations.getCount()>0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	0.0	0.03103200321684301	0.012412801286737205	finalRemB>0	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.026998181797668108	0.010799272719067244	isSymmetric	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	0.0	0.02238326943778365	0.00895330777511346	converged	GT
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	0.02069595648040657	0.008278382592162629	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x<=0	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.0	0.017811090226307176	0.007124436090522871	equals(x,y,eps)	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	0.0	0.007598016226015263	0.0030392064904061055	(a <= b) ? b : a>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.0074023539087473365	0.002960941563498935	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0	3.6528801711185844E-4	1.461152068447434E-4	data.length>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	1.9632683309566855E-4	7.853073323826742E-5	!(rowDimension < 1)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	1.9295730700543543E-4	7.718292280217417E-5	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.0	1.754168645391717E-4	7.016674581566868E-5	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	1.2915464402868688E-4	5.1661857611474755E-5	!(o == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#131	0.0	0.0	0.0	abs<lineAbs	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.0	0.0	0.0	!(lower >= upper)	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#94	0.0	0.0	0.0	FastMath.sin(scaledX) / scaledX>=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#47	0.0	0.0	0.0	value<=point	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#336	0.0	0.0	0.0	b>0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.0	0.0	0.0	function.value(x)!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#997	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#137	0.0	0.0	0.0	x>=lo	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	0.0	0.0	0.0	rows>=columns	_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.0	0.0	0.0	evaluations.getMaximalCount()>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	0.0	0.0	0.0	e * e==e	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#117	0.0	0.0	0.0	!(maxIterationCount != ITERATION_CHECK_DISABLED)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.0	0.0	0.0	sigma!=rho	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.0	0.0	0.0	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.0	0.0	0.0	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.0	0.0	0.0	min<0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#151	0.0	0.0	0.0	columns>=rows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#225	0.0	0.0	0.0	!stop	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#539	0.0	0.0	0.0	!(data instanceof PopulationSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	0.0	0.0	0.0	!(i < m1.getRowDimension())	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.0	0.0	0.0	searchMax!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1027	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#108	0.0	0.0	0.0	!(yInitial * yMin < 0)	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.0	0.0	0.0	columns!=0	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#147	0.0	0.0	0.0	mti < N	_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1270	0.0	0.0	0.0	!(iBlock < blockRows)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	0.0	0.0	0.0	maxEval>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#307	0.0	0.0	0.0	!(b == null)	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0>=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.0	0.0	0.0	point<0	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#57	0.0	0.0	0.0	lo<init	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1073	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.0	0.0	0.0	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	0.0	0.0	0.0	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#227	0.0	0.0	0.0	!(i < imagEigenvalues.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	0.0	0.0	0.0	!(c < popSize)	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.0	0.0	0.0	function.value(point)!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#117	0.0	0.0	0.0	khi>=gamma	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.0	0.0	0.0	data instanceof GoalType	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.0	0.0	0.0	(high | low) * 0x1.0p-52d>0	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#201	0.0	0.0	0.0	e>=lo	_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1234	0.0	0.0	0.0	!(q < qEnd)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	0.0	0.0	0.0	i < indices.length	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	0.0	0.0	0.0	remA > 0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#286	0.0	0.0	0.0	!(i < n)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#767	0.0	0.0	0.0	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.0	0.0	0.0	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#823	0.0	0.0	0.0	!(i < doubles.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#202	0.0	0.0	0.0	!(k < m)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.0	0.0	0.0	max!=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.0	0.0	0.0	getRowDimension()>=column	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	0.0	0.0	!(++count > maximalCount)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	0.0	0.0	0.0	data instanceof AbstractSimplex	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#90	0.0	0.0	0.0	rel!=abs	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	0.0	0.0	0.0	absoluteThreshold>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.0	0.0	0.0	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE>0	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.0	0.0	0.0	maximalCount>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1200	0.0	0.0	0.0	step>=start	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	0.0	0.0	0.0	hsig	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1088	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.0	0.0	0.0	lo!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1058	0.0	0.0	0.0	!(c < cols.length)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.0	0.0	0.0	start<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	0.0	0.0	0.0	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.0	0.0	0.0	!(points.length != simplex.length)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.0	0.0	0.0	i < nCols	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.0	0.0	0.0	start!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	0.0	0.0	0.0	dimension!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.0	0.0	0.0	mid!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#804	0.0	0.0	0.0	i > 0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	0.0	0.0	0.0	simplex.length!=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.0	0.0	0.0	functionValueAccuracy>=0	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.0	0.0	0.0	!(max <= 0)	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.0	0.0	0.0	searchStart>0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.0	0.0	0.0	!(i < diagonal.length)	_
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	0.0	0.0	0.0	iterations.getCount()>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	0.0	0.0	0.0	lambda>0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#270	0.0	0.0	0.0	qEnd - qStart>=jBlock	_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#206	0.0	0.0	0.0	tmp>fC	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#226	0.0	0.0	0.0	!(i < dimension)	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.0	0.0	0.0	lower!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#393	0.0	0.0	0.0	dotProduct!=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	0.0	0.0	0.0	finalK!=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.0	0.0	0.0	value!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.0	0.0	0.0	f.value(x)>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.0	0.0	0.0	searchMin<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	0.0	0.0	0.0	indices[indices.length - i - 1]!=i	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.0	0.0	0.0	evaluations.getCount()!=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.0	0.0	0.0	absoluteAccuracy>=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#196	0.0	0.0	0.0	doSolve()>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#984	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	0.0	0.0	0.0	!(steps == null)	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#95	0.0	0.0	0.0	absoluteAccuracy!=relativeAccuracy	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.0	0.0	0.0	!(data instanceof BracketingStep)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	0.0	0.0	0.0	!(size <= 0)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#343	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	0.0	0.0	0.0	finalRemA>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	0.0	0.0	0.0	Double.compare(value,o.value)<0	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#94	0.0	0.0	0.0	!(maxEvaluations <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.0	0.0	0.0	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#210	0.0	0.0	0.0	rawData[i].length<=rows	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#182	0.0	0.0	0.0	startValue!=max	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.0	0.0	0.0	relativeAccuracy>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#268	0.0	0.0	0.0	i < dimension	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#251	0.0	0.0	0.0	delta<=step	GT
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.0	0.0	0.0	upper<=0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.0	0.0	0.0	rows>0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.0	0.0	0.0	hi>0	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.0	0.0	0.0	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
