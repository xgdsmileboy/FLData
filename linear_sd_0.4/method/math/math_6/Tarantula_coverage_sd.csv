line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#117	1.0	1.0	1.0	khi>=gamma	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#787	1.0	1.0	1.0	max(diagD) / 1e14 - min(diagD)<negccov	_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#181	1.0	1.0	1.0	eval(func,w)<=val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1110	1.0	1.0	1.0	i < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1250	0.9993251060547628	1.0	0.9995950636328577	max<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	0.9993251060547628	1.0	0.9995950636328577	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#609	0.9993251060547628	1.0	0.9995950636328577	(1 + 2 * Math.max(0,Math.sqrt((mueff - 1) / (dimension + 1)) - 1)) * Math.max(0.3,1 - dimension / (1e-6 + maxIterations)) + cs<=sumwq	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#971	0.9993251060547628	1.0	0.9995950636328577	isMinimize ? penalty : -penalty<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1264	0.9993251060547628	1.0	0.9995950636328577	min<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	0.9993251060547628	1.0	0.9995950636328577	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1231	0.9993251060547628	1.0	0.9995950636328577	!(min > e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#910	0.9993251060547628	1.0	0.9995950636328577	isMinimize ? value : -value<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	0.9993251060547628	1.0	0.9995950636328577	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#733	0.9992896105543574	1.0	0.9995737663326144	(1 - negminresidualvariance) / square(arnormsInv).multiply(weights).getEntry(0,0)>=oldFac	_
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	0.9995499694622135	0.9995499694622135	0.9995499694622134	iterations.getCount()>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#998	0.9993251060547628	0.9993251060547628	0.9993251060547628	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	0.9993251060547628	0.9993251060547628	0.9993251060547628	e * e==e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1028	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	0.9993251060547628	0.9993251060547628	0.9993251060547628	r < n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(c < popSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#818	0.9993251060547628	0.9993251060547628	0.9993251060547628	i < doubles.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1200	0.9993251060547628	0.9993251060547628	0.9993251060547628	step>=start	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	0.9993251060547628	0.9993251060547628	0.9993251060547628	hsig	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(r < n)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1057	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#805	0.9993251060547628	0.9993251060547628	0.9993251060547628	vals[i - 1]<=val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#983	0.9993251060547628	0.9993251060547628	0.9993251060547628	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1072	0.9992896105543574	0.9992896105543574	0.9992896105543574	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	0.9992896105543574	0.9992896105543574	0.9992896105543574	i < indices.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1088	0.9992896105543574	0.9992896105543574	0.9992896105543574	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	0.9992896105543574	0.9992896105543574	0.9992896105543574	indices[indices.length - i - 1]!=i	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	0.9992896105543574	0.9992896105543574	0.9992896105543574	r < m.getRowDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#560	0.9989880005782854	0.9993251060547628	0.9991228427688763	!(i < init.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#535	0.998651122458811	0.998651122458811	0.998651122458811	data instanceof Sigma	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	0.998651122458811	0.998651122458811	0.998651122458811	lambda>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	0.9976418499446557	0.9976418499446557	0.9976418499446557	!(size <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	0.9973058789569903	0.9978718552861594	0.9975322694886579	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	0.9976418499446557	0.9976418499446557	0.9974402673520565	!(s[i] < 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.9966346153846154	0.9983144714664098	0.9973065578173332	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.9966346153846154	0.9966346153846154	0.9966346153846155	!(points.length != simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#255	0.9932918064206996	1.0	0.9959750838524197	!(t < 0.0)	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#206	0.9949604031677466	0.9955178485673123	0.9951833813275728	xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j])>coeff	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.9919609532012633	0.9976418499446557	0.9942333118986203	getColumnDimension()!=rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#338	0.9929587584423049	0.9959642548284808	0.9941609569967752	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.9926259337291706	0.9962993223434421	0.9940952891748792	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.9919609532012633	0.9952947954676397	0.9932944901078139	getRowDimension()!=column	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#116	0.9888694546032755	0.998651122458811	0.9927821217454897	function.value(params)<0	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#228	0.9915414243637188	0.9943450051753301	0.9926628566883633	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) > 0)	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#183	0.989309916960962	0.9941254046277425	0.9912361120276743	mt[N - 1]>=k	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#148	0.9906336614737647	0.9916287969385315	0.9910317156596714	upperBound[i]>v	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#202	0.989797200512653	0.9925909125274059	0.9909146853185542	!(k < m)	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.989309916960962	0.9932918064206996	0.9909026727448571	(int)longMT==seed	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#256	0.9863443878764809	0.9973805196193735	0.9907588405736379	y >>> 11<=bits	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.9894490918682644	0.9922408363773775	0.9905657896719096	getRowDimension()>=column	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#645	0.9907356347193117	0.9975938402309914	0.9902427013870301	p / q>maxAbsoluteValue	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.9899713467048712	0.9899713467048712	0.9899713467048712	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	0.9856359950952178	0.9957207108859875	0.9896698814115257	beta * hK[i]<=inv	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#110	0.9863443878764809	0.9929587584423049	0.9889901361028105	r * FastMath.cos(alpha)>alpha	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	0.987001856877589	0.9909651512978632	0.9885871746456987	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.9873655711814694	0.9901455541868825	0.9884775643836347	!(i < diagonal.length)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#224	0.9849458601115307	0.9936426246878074	0.9884245659420414	hIJ * hK[j]>xNormSqr	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.9883194278903458	0.9883194278903458	0.9883194278903458	sigma!=rho	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	0.9883194278903458	0.9883194278903458	0.9883194278903458	!(steps == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#288	0.9801418439716312	1.0	0.9880851063829788	p[i] + nD[i]==optimum	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.9866730128510233	0.9866730128510233	0.9866730128510233	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#250	0.9842136498516321	0.9899713467048712	0.9865167285929277	!(Double.isNaN(vertex.getValue()))	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.9847045411362342	0.9886493704692866	0.9862824728694551	!(i < nRows)	_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#123	0.9779839597420978	0.9971139971139971	0.9856359746908576	FastMath.abs(p - c)>p	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	0.9850320741268709	0.9850320741268709	0.9845410195617276	converged	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#131	0.973696571160169	1.0	0.9842179426961014	abs>=lineAbs	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	0.9842136498516321	0.9842136498516321	0.9842136498516321	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	0.9842136498516321	0.9842136498516321	0.9842136498516321	dimension!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	0.9842136498516321	0.9842136498516321	0.9842136498516321	simplex.length!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#229	0.9842136498516321	0.9842136498516321	0.9842136498516321	!(k < dimension)	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	0.9815096314386105	0.9880591024258084	0.9841294198334897	matrix.getEntry(j,i)<=relativeTolerance	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	0.9873309201752715	0.9873309201752715	0.9837970589137788	data instanceof ObjectiveFunction	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	0.982580874511198	0.9842136498516321	0.9832339846473717	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	0.982580874511198	0.982580874511198	0.982580874511198	data instanceof AbstractSimplex	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.9818521749968839	0.9846011549133814	0.9823356184760481	isSymmetric	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	0.9769085768143261	0.9891446976022903	0.9818030251295118	atan(x,0.0,false)<0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.9801418439716313	0.9828812417338357	0.9812376030765131	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.979118502498322	0.9818521749968839	0.9800075880226595	!(!matrix.isSquare())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#257	0.9769085768143261	0.9866730128510233	0.9795037798646866	centroid[j] - gamma * (centroid[j] - xWorst[j])<scaling	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.9689179714886657	0.9939585730724971	0.9789342121221982	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.9720145109942991	0.9842566909063648	0.9769113829591254	0>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.973696571160169	0.9801418439716312	0.976274680284754	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#145	0.9632452023604852	0.9949604031677466	0.9759312826833898	getColumnDimension()<nRows	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.9673355109659356	0.9866730128510233	0.9750705117199707	mid<0	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#242	0.973696571160169	1.0	0.973696571160169	checker.converged(iter,previous,current)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#269	0.973696571160169	0.973696571160169	0.973696571160169	!(comparator.compare(simplex[i],pointValuePair) > 0)	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.9548595117457392	1.0	0.9729157070474436	hi<=0	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	0.9896405213157016	0.9896405213157016	0.972365694960988	data instanceof SimpleBounds	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#125	0.9673355109659356	0.973696571160169	0.969879935043629	FastMath.abs(p - c)>c	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.9548595117457392	0.9866730128510233	0.9675849121878528	f.value(x)<0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.952402830101994	0.9891012279952789	0.967082189259308	getColumnDimension()==rowCount	_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	0.9649714884208076	0.9689179714886657	0.9665500816479509	evaluations.getCount()>0	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	0.952607070645181	0.9862348948587015	0.9660582003305892	count<=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	0.9619935959905332	0.9695524063420794	0.9650171201311517	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.9451080514270083	0.9946262354860379	0.9649153250506202	visitor.end()>0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.958878764050141	0.9736965711601692	0.9648058868941523	(high | low) * 0x1.0p-52d>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.9448065265940477	0.9946262354860379	0.9647344101508438	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2334	0.9604336545589325	0.9692350850944454	0.9639542267731376	sinQ(xa,xb)>0	_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	0.9635586129961886	0.9635586129961886	0.9635586129961886	maxEval>0	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.9633496499163517	0.9633496499163517	0.9633496499163517	!(max <= 0)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1220	0.9463160777869076	0.9886493704692866	0.9629855288568744	aa + tmp - tmp<aa	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.9548595117457394	0.9743710263958637	0.9626641176057891	i < nCols	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.9454097687782186	0.9860159817351598	0.9616522539609951	getColumnDimension()<nRows	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2477	0.9487414187643021	0.9833965844402276	0.9613015888472338	1d / (1d + (xa + xb) * (TANGENT_TABLE_A[idx] + TANGENT_TABLE_B[idx]))>temp	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.9469212497716061	0.9808632564008202	0.9604980524232917	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	0.9579482439926063	0.9635586129961885	0.9601923915940391	relativeThreshold>=0	_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	0.9635586129961886	0.9635586129961886	0.960068469376872	data instanceof MaxEval	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	0.9585683899010451	0.9585683899010451	0.9585683899010451	absoluteThreshold>0	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#90	0.925033467202142	1.0	0.9550200803212852	scaledX * scaledX>scaledX	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#236	0.9308486753480018	1.0	0.9550200803212852	solver.getEvaluations()==n	GT
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.9548595117457392	0.9548595117457392	0.9548595117457392	lo!=0	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2280	0.945280437756498	0.9572110204709866	0.9500526708422934	-cosQ(xa,xb)!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#91	0.9487414187643021	0.9487414187643021	0.9487414187643022	!(growLimit <= 0)	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.943001410180594	0.9551674883656638	0.9478678414546219	0>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.9190051868599547	0.9932918064206996	0.946674083108892	d[0].length>nRows	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.9080157687253614	0.9801418439716312	0.9368661988238693	point==0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1825	0.9048450458315147	0.9798175544736967	0.9339284365340876	b + d<cosEpsB	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.9024814976055725	0.9801418439716312	0.933545636151996	max<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	0.9214698473847978	0.9458555133079847	0.9312241137540724	finalRemB>0	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.8970142795326699	0.9801418439716312	0.9302653053082544	upper<=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.9024814976055725	0.9673355109659356	0.9284231029497177	start<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	0.9214698473847978	0.9358916478555305	0.9272385675730908	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	0.9214698473847978	0.9358916478555305	0.9272385675730908	finalK!=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	0.9214698473847978	0.9358916478555305	0.9272385675730908	finalRemA>=0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1845	0.9051084267210013	0.9583911234396671	0.9264215054084677	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.8970142795326699	0.9673355109659356	0.9251427721059762	start<0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#336	0.925033467202142	0.925033467202142	0.925033467202142	b>0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#389	0.925033467202142	0.925033467202142	0.925033467202142	!(i < gradient.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.919290465631929	0.925033467202142	0.9215876662600142	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#46	0.9024814976055725	0.9487414187643021	0.9209854660690644	point<value	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.919290465631929	0.919290465631929	0.919290465631929	!(data instanceof BracketingStep)	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.919290465631929	0.919290465631929	0.919290465631929	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	0.9066258473649683	0.9373304395008139	0.9189076842193066	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.9024814976055725	0.9427012278308322	0.9185693896956764	min<0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3548	0.8990802362970164	0.9464412223114343	0.9180246307027835	a!=0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	0.9110886476508593	0.9238791336126214	0.9162048420355642	(a <= b) ? b : a>0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.8987335995436394	0.939866848020617	0.9151868989344305	data[index]<0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.9024814976055725	0.9308486753480018	0.9138283687025441	function.value(x)<=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.9024814976055725	0.9308486753480018	0.9138283687025441	value<0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	0.8972731207617949	0.937924169758393	0.9135335403604341	p * x2 + 0.041666666666621166<=x	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.8970142795326699	0.9367374604609128	0.912903551903967	lower<0	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#311	0.919290465631929	0.919290465631929	0.9125256474879884	isMinim	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	0.8972731207617949	0.9325236167341431	0.9113733191507343	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.8791721447050341	0.9490454607883533	0.9071214711383618	log(x,null)<0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.8933115601823501	0.9235152055147835	0.9053930183153235	i < nRows	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#49	0.8970142795326699	0.8970142795326699	0.8970142795326699	!(lo >= hi)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.8823845688554338	0.9118416483389282	0.8941674006488316	!(data == null || data[0] == null)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.8970142795326699	0.8970142795326699	0.8937734537485518	!(data instanceof GoalType)	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.8807271751526128	0.9027710926218799	0.8895447421403198	data.length>0	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#90	0.8862761864044464	0.8916129032258064	0.8884108731329905	rel>=abs	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.8535781931977271	0.9302638664512655	0.8842524624991425	data[row][column]==0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.8558112248223715	0.9265567291632361	0.8841094265587173	subMatrix[0].length==nRows	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.8640380126708902	0.8919709704254037	0.8752111957726956	!(++count > maximalCount)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.8339814938983505	0.9273508096984879	0.8713292202184055	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.8288684526189525	0.9244559400642168	0.8671034475970583	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.8555509698720594	0.881002974925627	0.8657317718934864	evaluations.getMaximalCount()>0	_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1237	0.8177514792899409	0.9367374604609128	0.8653458717583296	lInc==nRows	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.8527588854760859	0.8815274706582752	0.8642663195489617	!(cb == null)	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#98	0.836224283985478	0.919290465631929	0.8605402822043547	initial>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.8336349378694655	0.8757921419518377	0.8504978195024144	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.8334003377020182	0.8755332178907801	0.8502534897775229	((data == null) || (data[0] == null)) ? 0 : data[0].length!=0	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.8315282791817088	0.8774434354317378	0.8498943416817204	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.8308617234468938	0.8757921419518377	0.8488338908488713	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.8204701971028259	0.8665663406069726	0.8389086545044846	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.8202429470185574	0.8663128421580509	0.8386709050743548	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#222	0.7590626144269499	0.9080157687253614	0.8186438761463145	tol>c	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.7709185570844179	0.8655532359081419	0.8087724286139075	maximalCount!=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.7362377175328518	0.9099688336771872	0.805730163990586	Math.sqrt(a)<=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.7590626144269499	0.8088177916504096	0.7789646853163338	evaluations.getCount()!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	0.6520918527838943	0.9673355109659356	0.7781893160567108	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.731644090693344	0.84080896236311	0.7753100393612504	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x<=0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.7486997977463161	0.7944963973631765	0.7670184375930602	!(o == null)	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#265	0.6066725197541702	0.9673355109659356	0.7509377162388764	FastMath.min(pStart + BLOCK_SIZE,rows)==blockColumns	_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1276	0.6852892561983471	0.8506360279031596	0.7315095228316004	FastMath.min(qStart + BLOCK_SIZE,columns)==pEnd	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#205	0.4583241211585231	0.9136183340678713	0.6395932450223436	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.49843712430872805	0.8222927409758032	0.6279793709755581	searchMin==0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#155	0.4316052467207995	0.9136183340678713	0.6244104816596282	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[]#101	1.0	0.0	0.6		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#893	0.9993251060547628	0.0	0.5995950636328576		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#zeros#?,int,int#1167	0.9993251060547628	0.0	0.5995950636328576		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#936	0.9993251060547628	0.0	0.5995950636328576		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#844	0.9993251060547628	0.0	0.5995950636328576		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#doOptimize#?#514	0.9993251060547628	0.0	0.5995950636328576		GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#double[]#getSigma#?#304	0.998651122458811	0.0	0.5991906734752867		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#optimize#?,OptimizationData#363	0.9976418499446557	0.0	0.5985851099667934		_
org.apache.commons.math3.optim.SimpleBounds#SimpleBounds#unbounded#?,int#73	0.9940327135169695	0.0	0.5964196281101817		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.5805096611593391	0.6193606214520466	0.5960500452764221	searchStart>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double#168	0.9932918064206996	0.0	0.5959750838524197		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.9926259337291706	0.0	0.5955755602375024		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#763	0.9906336614737647	0.0	0.5943801968842588		_
org.apache.commons.math3.optim.SimpleBounds#double[]#getLower#?#53	0.9896405213157016	0.0	0.5937843127894209		_
org.apache.commons.math3.optim.SimpleBounds#double[]#getUpper#?#61	0.9896405213157016	0.0	0.5937843127894209		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#107	0.989309916960962	0.0	0.5935859501765772		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.989309916960962	0.0	0.5935859501765772		_
org.apache.commons.math3.optim.SimpleBounds#?#SimpleBounds#?,double[],double[]#44	0.989309916960962	0.0	0.5935859501765772		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[]#121	0.9883194278903458	0.0	0.5929916567342074		_
org.apache.commons.math3.optim.PointValuePair#double[]#getPoint#?#70	0.9879897054618244	0.0	0.5927938232770946		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#MultivariateFunction#getObjectiveFunction#?#45	0.9873309201752715	0.0	0.5923985521051629		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#?#ObjectiveFunction#?,MultivariateFunction#36	0.9860159817351598	0.0	0.5916095890410958		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair[]#getPoints#?#286	0.9842136498516321	0.0	0.5905281899109792		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#GoalType#getGoalType#?#101	0.9829613706771195	0.0	0.5897768224062717		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,double,double#105	0.9829302987197723	0.0	0.5897581792318634		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,ConvergenceChecker<PointValuePair>#97	0.982580874511198	0.0	0.5895485247067188		_
org.apache.commons.math3.optim.PointValuePair#double[]#getPointRef#?#80	0.982580874511198	0.0	0.5895485247067188		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#optimize#?,OptimizationData#122	0.982580874511198	0.0	0.5895485247067188		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double#44	0.9820920977828312	0.0	0.5892552586696987		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double,boolean#58	0.9820920977828312	0.0	0.5892552586696987		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#561	0.9818521749968839	0.0	0.5891113049981304		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.9815096314386105	0.0	0.5889057788631663		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.9815096314386105	0.0	0.5889057788631663		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#64	0.9803581562519705	0.0	0.5882148937511823		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double#151	0.9801418439716312	0.0	0.5880851063829787		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,ConvergenceChecker<PointValuePair>#101	0.9801418439716312	0.0	0.5880851063829787		_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetric#?,RealMatrix,double#439	0.9801418439716313	0.0	0.5880851063829787		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#UnivariatePointValuePair#search#?,double[],double[]#358	0.9801418439716312	0.0	0.5880851063829787		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#?#MultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#43	0.9801418439716312	0.0	0.5880851063829787		_
org.apache.commons.math3.optim.SimpleValueChecker#?#SimpleValueChecker#?,double,double#66	0.975835556252942	0.0	0.5855013337517652		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#?#LineSearch#?,double,double#330	0.973696571160169	0.0	0.5842179426961014		_
org.apache.commons.math3.optim.BaseOptimizer#ConvergenceChecker<PAIR>#getConvergenceChecker#?#102	0.9690236529651906	0.0	0.5814141917791144		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getStartPoint#?#109	0.9688123130608175	0.0	0.5812873878364905		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getUpperBound#?#121	0.9688123130608175	0.0	0.5812873878364905		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getLowerBound#?#115	0.9675462069823885	0.0	0.5805277241894331		_
org.apache.commons.math3.optim.BaseOptimizer#void#incrementEvaluationCount#?#162	0.9667039731393396	0.0	0.5800223838836037		_
org.apache.commons.math3.optim.InitialGuess#double[]#getInitialGuess#?#45	0.9664936437385384	0.0	0.579896186243123		_
org.apache.commons.math3.optim.InitialGuess#?#InitialGuess#?,double[]#36	0.966283405842138	0.0	0.5797700435052828		_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#?#SimpleUnivariateValueChecker#?,double,double#69	0.9610570236439498	0.0	0.5766342141863698		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#PAIR#optimize#?,OptimizationData#66	0.9608491440578456	0.0	0.5765094864347073		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#?#BaseMultivariateOptimizer#?,ConvergenceChecker<PAIR>#48	0.9598110936197796	0.0	0.5758866561718677		_
org.apache.commons.math3.optim.BaseOptimizer#PAIR#optimize#?,OptimizationData#143	0.9593965011878683	0.0	0.575637900712721		_
org.apache.commons.math3.optim.BaseOptimizer#?#BaseOptimizer#?,ConvergenceChecker<PAIR>#51	0.9567103562857671	0.0	0.5740262137714602		GT
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.956710356285767	0.0	0.5740262137714601		_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?#79	0.9487414187643021	0.0	0.5692448512585813		_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.9477293508076806	0.0	0.5686376104846084		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.9373616697208406	0.0	0.5624170018325043		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>#71	0.9367374604609128	0.0	0.5620424762765477		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner#double[]#precondition#?,double[],double[]#346	0.9308486753480018	0.0	0.558509205208801		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.9300690934107019	0.0	0.5580414560464211		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#?#LineSearchFunction#?,double[],double[]#373	0.925033467202142	0.0	0.5550200803212851		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#double[]#computeObjectiveGradient#?,double[]#54	0.925033467202142	0.0	0.5550200803212851		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.922001919520588	0.0	0.5532011517123527		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#74	0.919290465631929	0.0	0.5515742793791574		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#optimize#?,OptimizationData#187	0.919290465631929	0.0	0.5515742793791574		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#?#ObjectiveFunctionGradient#?,MultivariateVectorFunction#36	0.919290465631929	0.0	0.5515742793791574		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#MultivariateVectorFunction#getObjectiveFunctionGradient#?#45	0.919290465631929	0.0	0.5515742793791574		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>,UnivariateSolver,Preconditioner#164	0.919290465631929	0.0	0.5515742793791574		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#?#GradientMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#44	0.919290465631929	0.0	0.5515742793791574		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.915312610385023	0.0	0.5491875662310137		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.915312610385023	0.0	0.5491875662310137		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.9134304682451089	0.0	0.5480582809470653		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.5305861274635271	0.5628563670920446	0.543494223314934	relativeAccuracy>=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#GoalType#getGoalType#?#77	0.9024814976055725	0.0	0.5414888985633435		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.9022065543804674	0.0	0.5413239326282804		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.8955865299347415	0.0	0.5373519179608449		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#UnivariatePointValuePair#optimize#?,OptimizationData#70	0.8916129032258064	0.0	0.5349677419354838		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#UnivariateFunction#getObjectiveFunction#?#45	0.8916129032258064	0.0	0.5349677419354838		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#?#UnivariateObjectiveFunction#?,UnivariateFunction#36	0.8916129032258064	0.0	0.5349677419354838		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.521247171234599	0.5523581135091926	0.5336915481444364	functionValueAccuracy>=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#?#UnivariateOptimizer#?,ConvergenceChecker<UnivariatePointValuePair>#49	0.8862761864044464	0.0	0.5317657118426679		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.5157999502363771	0.5462450592885375	0.5279779938572413	absoluteAccuracy>=0	_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.8741593980957454	0.0	0.5244956388574472		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#196	0.49181494661921704	0.5671682626538987	0.5219562730330898	doSolve()>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.8693646466764521	0.0	0.5216187880058712		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#62	0.8670737828341978	0.0	0.5202442697005186		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.8650475713570356	0.0	0.5190285428142213		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.8595240069657517	0.0	0.515714404179451		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.8563322100228286	0.0	0.5137993260136972		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.8558112248223715	0.0	0.5134867348934229		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.49676491732566497	0.5383017398078421	0.5133796463185358	function.value(point)<0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.49843712430872805	0.5286916602907422	0.5105389387015338	searchMax>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#182	0.4901868053913454	0.5268106734434561	0.5048363526121897	startValue>=min	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#455	0.8285040565924623	0.0	0.4971024339554774		_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?#47	0.8268847227762266	0.0	0.49613083366573596		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#96	0.4775397373876987	0.521247171234599	0.49502271092645883	relativeAccuracy<absoluteAccuracy	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.4241866175567833	0.534416086620263	0.4682784051821751	columns!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.4229749030810039	0.5324942203955818	0.46678263000683506	rows>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.4229749030810039	0.5286916602907422	0.46526160596489924	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE>0	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.4472491909385113	0.4775397373876987	0.4593654095181863	!(lower >= upper)	_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.7590626144269499	0.0	0.4554375686561699		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.7590626144269499	0.0	0.4554375686561699		_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.4135248354278875	0.5176029962546815	0.4551560997586051	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE!=0	_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.7513591881116346	0.0	0.45081551286698074		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[]#749	0.7475658131987017	0.0	0.44853948791922105		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double#244	0.7273684210526316	0.0	0.43642105263157893		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#108	0.7220480668756531	0.0	0.43322884012539187		_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?,double#55	0.7082336863682952	0.0	0.42494021182097713		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.6728334956183056	0.0	0.4037000973709834		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.6728334956183056	0.0	0.4037000973709834		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.6637848222862632	0.0	0.3982708933717579		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[],int#779	0.657886385274516	0.0	0.3947318311647096		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.6463985032740879	0.0	0.3878391019644527		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.6435889475318224	0.0	0.38615336851909343		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#142	0.6408037094281298	0.0	0.3844822256568779		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.6142222222222222	0.0	0.3685333333333333		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#verifySequence#?,double,double,double#277	0.5897581792318634	0.0	0.353854907539118		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.5897581792318634	0.0	0.353854907539118		_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifySequence#?,double,double,double#373	0.5850973751058425	0.0	0.3510584250635055		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#56	0.5462450592885375	0.0	0.3277470355731225		_
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver#?#AbstractUnivariateSolver#?,double#37	0.514009422266303	0.0	0.30840565335978176		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double#67	0.49676491732566497	0.0	0.298058950395399		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#incrementEvaluationCount#?#310	0.49181494661921704	0.0	0.2950889679715302		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,double[][]#127	0.4583241211585231	0.0	0.27499447269511385		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.36020851433536055	0.0	0.21612510860121634		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.33723767691556855	0.0	0.20234260614934113		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#computeWeightedJacobian#?,double[]#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#?#Solver#?,double[][],int[],boolean#282	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1662	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#?#Weight#?,double[]#42	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#?#MultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#double[]#getTarget#?#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#MultivariateVectorFunction#getModelFunction#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#copy#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#min#?,double,double#3480	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#multiply#?,RealMatrix#184	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double#computeCost#?,double[]#77	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#703	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#operate#?,double[]#289	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double#getEntry#?,int,int#226	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#765	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#?#JacobianMultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#50	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#277	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#RealMatrix#getWeight#?#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#getData#?#611	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,int#53	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#void#setEntry#?,int,int,double#237	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,ConvergenceChecker<PointVectorValuePair>#63	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#MultivariateMatrixFunction#getModelFunctionJacobian#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#getDataRef#?#219	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#checkParameters#?#161	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#setCost#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#?#Target#?,double[]#39	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#void#checkVectorDimensions#?,int#758	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[]#44	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double#dotProduct#?,RealVector#459	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[],boolean#84	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#DiagonalMatrix#multiply#?,DiagonalMatrix#171	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#getWeightSquareRoot#?#111	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#RealVector#solve#?,RealVector#300	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#getTarget#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#PointVectorValuePair#optimize#?,OptimizationData#197	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#?#ModelFunctionJacobian#?,MultivariateMatrixFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double[]#getDataRef#?#450	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#squareRoot#?,RealMatrix#271	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?,boolean#82	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#RealMatrix#getWeight#?#96	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#?#ModelFunction#?,MultivariateVectorFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#151	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[]#64	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qrDecomposition#?,RealMatrix#867	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#83	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealVector#operate#?,RealVector#683	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#?#AbstractLeastSquaresOptimizer#?,ConvergenceChecker<PointVectorValuePair>#53	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double[]#computeResiduals#?,double[]#218	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#ulp#?,double#3029	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#parseOptimizationData#?,OptimizationData#249	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix#76	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#DecompositionSolver#getSolver#?#258	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#?#SimpleVectorValueChecker#?,double,double#68	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qTy#?,double[]#938	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getColumnDimension#?#282	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#checkParameters#?#953	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#double[]#getValueRef#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#double[][]#computeJacobian#?,double[]#60	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[],boolean#58	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?#72	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#PointVectorValuePair#doOptimize#?#83	0.0	0.0	0.0		GT
org.apache.commons.math3.linear.ArrayRealVector#double[]#toArray#?#726	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#void#checkParameters#?#178	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#87	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix,double#88	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#PointVectorValuePair#doOptimize#?#498	0.0	0.0	0.0		GT
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#computeObjectiveValue#?,double[]#62	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#boolean#converged#?,int,PointVectorValuePair,PointVectorValuePair#135	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,boolean,ConvergenceChecker<PointVectorValuePair>#74	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getRowDimension#?#276	0.0	0.0	0.0		_
