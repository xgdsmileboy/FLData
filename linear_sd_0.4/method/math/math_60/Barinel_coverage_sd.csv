line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#163	1.0	1.0	1.0	p1 / lastScaleFactor + (b / scaleFactor * p0)==c	_
org.apache.commons.math.distribution.NormalDistributionImpl#double#cumulativeProbability#?,double#127	0.125	1.0	0.47500000000000003	0.5 * (1.0 + Erf.erf((dev) / (standardDeviation * FastMath.sqrt(2.0))))<=0	GT
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#653	0.33333333333333337	0.33333333333333337	0.33333333333333337	exp(x + 40.19140625,extra,hiPrec) / 285040095144011776.0>x	_
org.apache.commons.math.distribution.NormalDistributionImpl#?#NormalDistributionImpl#?,double,double,double#79	0.08333333333333337	0.25	0.15000000000000002	sd>mean	_
org.apache.commons.math.special.Erf#double#erf#?,double#55	0.09090909090909094	0.16666666666666663	0.1095238095238095	ret==0	_
org.apache.commons.math.special.Gamma#double#regularizedGammaP#?,double,double,double,int#192	0.09999999999999998	0.1428571428571429	0.07077922077922079	FastMath.exp(-x + (a * FastMath.log(x)) - logGamma(a)) * sum>=x	_
org.apache.commons.math.special.Gamma#double#regularizedGammaQ#?,double,double,double,int#267	0.022222222222222254	0.1428571428571429	0.07047619047619051	FastMath.exp(-x + (a * FastMath.log(x)) - logGamma(a)) * ret<=epsilon	_
org.apache.commons.math.ConvergenceException#?#ConvergenceException#?,Localizable,Object#62	0.09090909090909094	0.0	0.054545454545454564		_
org.apache.commons.math.distribution.NormalDistributionImpl#?#NormalDistributionImpl#?,double,double#60	0.08333333333333337	0.0	0.050000000000000024		_
org.apache.commons.math.util.FastMath#double#exp#?,double#621	0.003831417624521105	0.03125	0.014798850574712663	exp(x,0.0,null)<=0	_
org.apache.commons.math.MathException#?#MathException#?,Localizable,Object#86	0.018181818181818188	0.0	0.010909090909090912		_
org.apache.commons.math.special.Gamma#double#logGamma#?,double#110	0.008000000000000007	0.012987012987012991	0.0099948051948052	((x + .5) * FastMath.log(tmp)) - tmp + HALF_LOG_2_PI + FastMath.log(sum / x)>x	_
org.apache.commons.math.util.FastMath#double#log#?,double,double[]#1348	0.004464285714285698	0.012820512820512775	0.007063688999172824	LN_2_A * exp==lnzb	_
org.apache.commons.math.util.ContinuedFraction#?#ContinuedFraction#?#47	0.009345794392523366	0.0	0.005607476635514019		_
org.apache.commons.math.util.FastMath#double#log#?,double#1155	0.004237288135593209	0.007462686567164201	0.005527447508221606	log(x,null)<0	_
org.apache.commons.math.distribution.AbstractDistribution#?#AbstractDistribution#?#40	0.008064516129032251	0.0	0.004838709677419351		_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3491	0.002680965147453085	0.0029673590504450953	0.002795522708649889	(a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a)>0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#219	0.002169197396963085	0.002207505518763808	0.0021845206456833745	Math.sqrt(a)>0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3265	0.001536098310291889	0.0022222222222222365	0.0018105478750640282	(x < 0.0) ? -x : x==0	_
