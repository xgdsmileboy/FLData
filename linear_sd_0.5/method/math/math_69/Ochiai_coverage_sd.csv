line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#208	0.1421338109037403	1.0	1.1421338109037402	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE>columns	_
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	0.14002800840280097	1.0	1.140028008402801	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE>columns	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#170	0.5345224838248488	0.5345224838248488	1.0690449676496976	Math.abs(r * Math.sqrt((nObs - 2) / (1 - r * r)))>=r	GT
org.apache.commons.math.linear.BlockRealMatrix#double[]#getColumn#?,int#1194	0.3333333333333333	0.7071067811865475	1.0404401145198807	blockHeight(iBlock)<=outIndex	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#?#PearsonsCorrelation#?,double[][]#68	1.0	0.0	1.0		_
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	0.282842712474619	0.7071067811865475	0.984456879299162	dy * dy * (double)n / (n + 1d)==dx	_
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#433	0.3651483716701107	0.5	0.8651483716701107	Math.sqrt(getRSquare())<b1	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#computeCorrelationMatrix#?,RealMatrix#190	0.42640143271122083	0.42640143271122083	0.8528028654224417	j < i	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#void#checkSufficientData#?,RealMatrix#275	0.3922322702763681	0.42640143271122083	0.818633702987589	!(nRows < 2 || nCols < 2)	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#double#correlation#?,double[],double[]#227	0.3922322702763681	0.3922322702763681	0.7844645405527362	!(i < xArray.length)	_
org.apache.commons.math.stat.regression.SimpleRegression#double#getRSquare#?#456	0.34299717028501764	0.34299717028501764	0.6859943405700353	(ssto - getSumSquaredErrors()) / ssto>0	_
org.apache.commons.math.stat.regression.SimpleRegression#double#getTotalSumSquares#?#354	0.34299717028501764	0.34299717028501764	0.6859943405700353	sumYY>0	_
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#139	0.3244428422615251	0.34299717028501764	0.6674400125465427	1.0 - 0.5 * t<x	_
org.apache.commons.math.stat.regression.SimpleRegression#double#getSlope#?#304	0.3086066999241838	0.3333333333333333	0.6419400332575171	sumXY / sumXX>=0	_
org.apache.commons.math.stat.regression.SimpleRegression#double#getSumSquaredErrors#?#337	0.282842712474619	0.30151134457776363	0.5843540570523826	Math.max(0d,sumYY - sumXY * sumXY / sumXX)!=0	_
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1256	0.282842712474619	0.282842712474619	0.565685424949238	column / BLOCK_SIZE==iBlock	_
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#151	0.18569533817705186	0.3779644730092272	0.5636598111862791	Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) - Math.log(a) - logBeta(a,b,epsilon,maxIterations)) * 1.0 / fraction.evaluate(x,epsilon,maxIterations)<epsilon	_
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1242	0.2182178902359924	0.31622776601683794	0.5344456562528304	blocks[iBlock * blockColumns + jBlock][k]==0	_
org.apache.commons.math.stat.regression.SimpleRegression#void#setDistribution#?,TDistribution#617	0.2581988897471611	0.2581988897471611	0.5163977794943222	!(n > 2)	_
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	0.24618298195866545	0.24618298195866545	0.4923659639173309	inverseCumAccuracy!=degreesOfFreedom	_
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	0.13245323570650439	0.3086066999241838	0.44105993563068824	((x + .5) * Math.log(tmp)) - tmp + HALF_LOG_2_PI + Math.log(sum / x)>tmp	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#?#PearsonsCorrelation#?,RealMatrix#79	0.42640143271122083	0.0	0.42640143271122083		_
org.apache.commons.math.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#275	0.17407765595569785	0.24253562503633297	0.4166132809920308	pEnd - pStart==columns	_
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#140	0.13934660285832354	0.2626128657194451	0.40195946857776865	a * q1 + b * q0<p0	_
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedomInternal#?,double#88	0.19802950859533489	0.19802950859533489	0.39605901719066977	!(newDegreesOfFreedom <= 0.0)	_
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	0.18257418583505536	0.20412414523193154	0.3866983310669869	Gamma.logGamma(a) + Gamma.logGamma(b) - Gamma.logGamma(a + b)<=epsilon	_
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	0.17407765595569785	0.21081851067789195	0.38489616663358983	columns==rows	_
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#54	0.17407765595569785	0.18107149208503706	0.35514914804073494	regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE)>0	_
org.apache.commons.math.linear.BlockRealMatrix#int#blockHeight#?,int#1675	0.13483997249264842	0.13483997249264842	0.26967994498529685	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE>=0	_
org.apache.commons.math.linear.BlockRealMatrix#int#getColumnDimension#?#1351	0.13303802104754786	0.13303802104754786	0.2660760420950957	columns!=0	_
org.apache.commons.math.linear.BlockRealMatrix#int#getRowDimension#?#1345	0.13245323570650439	0.13245323570650439	0.26490647141300877	rows!=0	_
org.apache.commons.math.linear.BlockRealMatrix#int#blockWidth#?,int#1684	0.12909944487358055	0.12909944487358055	0.2581988897471611	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE>0	_
org.apache.commons.math.stat.regression.SimpleRegression#?#SimpleRegression#?,TDistribution#105	0.2581988897471611	0.0	0.2581988897471611		_
org.apache.commons.math.stat.regression.SimpleRegression#?#SimpleRegression#?#94	0.2581988897471611	0.0	0.2581988897471611		_
org.apache.commons.math.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#544	0.12803687993289598	0.12803687993289598	0.25607375986579195	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double#71	0.24618298195866545	0.0	0.24618298195866545		_
org.apache.commons.math.distribution.TDistributionImpl#void#setDegreesOfFreedom#?,double#81	0.21320071635561041	0.0	0.21320071635561041		_
org.apache.commons.math.distribution.AbstractContinuousDistribution#?#AbstractContinuousDistribution#?#53	0.18569533817705186	0.0	0.18569533817705186		_
org.apache.commons.math.distribution.AbstractDistribution#?#AbstractDistribution#?#39	0.17149858514250882	0.0	0.17149858514250882		_
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#61	0.08192319205190406	0.08192319205190406	0.1638463841038081	!(columnDimension <= 0)	_
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,double[][]#126	0.1421338109037403	0.0	0.1421338109037403		_
org.apache.commons.math.util.ContinuedFraction#?#ContinuedFraction#?#46	0.13934660285832354	0.0	0.13934660285832354		_
