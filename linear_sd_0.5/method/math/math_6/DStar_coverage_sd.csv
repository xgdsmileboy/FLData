line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	Infinity	Infinity	Infinity	iterations.getCount()>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	40.0	50.0	90.0	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#609	40.0	50.0	90.0	(1 + 2 * Math.max(0,Math.sqrt((mueff - 1) / (dimension + 1)) - 1)) * Math.max(0.3,1 - dimension / (1e-6 + maxIterations)) + cs<=sumwq	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	40.0	50.0	90.0	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1110	40.111111111111114	40.111111111111114	80.22222222222223	i < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1250	40.0	40.0	80.0	max>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#998	40.0	40.0	80.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	40.0	40.0	80.0	e * e==e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	40.0	40.0	80.0	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1028	40.0	40.0	80.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	40.0	40.0	80.0	r < n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	40.0	40.0	80.0	!(c < popSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#967	40.0	40.0	80.0	!(i < x.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1259	40.0	40.0	80.0	r < m.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#818	40.0	40.0	80.0	i < doubles.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1200	40.0	40.0	80.0	step>=start	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	40.0	40.0	80.0	hsig	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	40.0	40.0	80.0	!(r < n)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1057	40.0	40.0	80.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	40.0	40.0	80.0	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1231	40.0	40.0	80.0	min > e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#805	40.0	40.0	80.0	vals[i - 1]<=val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#910	40.0	40.0	80.0	isMinimize ? value : -value!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#983	40.0	40.0	80.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	40.0	40.0	80.0	Double.compare(value,o.value)<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#560	36.36363636363637	40.0	76.36363636363637	!(i < init.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#535	33.333333333333336	33.333333333333336	66.66666666666667	data instanceof Sigma	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	33.333333333333336	33.333333333333336	66.66666666666667	lambda>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1072	32.81818181818182	32.81818181818182	65.63636363636364	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	32.81818181818182	32.81818181818182	65.63636363636364	i < indices.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#786	32.81818181818182	32.81818181818182	65.63636363636364	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1088	32.81818181818182	32.81818181818182	65.63636363636364	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#741	32.81818181818182	32.81818181818182	65.63636363636364	negalphaold * negccov!=negminresidualvariance	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	32.81818181818182	32.81818181818182	65.63636363636364	indices[indices.length - i - 1]!=i	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	32.81818181818182	32.81818181818182	65.63636363636364	r < m.getRowDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	26.666666666666668	26.666666666666668	53.333333333333336	!(size <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	26.666666666666668	26.666666666666668	51.66666666666667	!(s[i] < 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	25.0	25.0	50.0	diagonalOnly<=maxIterations	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#893	40.0	0.0	40.0		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#zeros#?,int,int#1167	40.0	0.0	40.0		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#936	40.0	0.0	40.0		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#844	40.0	0.0	40.0		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#doOptimize#?#514	40.0	0.0	40.0		GT
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	12.5	26.666666666666668	39.16666666666667	getColumnDimension()!=rowCount	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#116	18.75	18.75	37.5	function.value(params)>=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	13.333333333333334	21.05263157894737	34.385964912280706	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#338	13.793103448275861	20.0	33.79310344827586	!(columnData == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#double[]#getSigma#?#304	33.333333333333336	0.0	33.333333333333336		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#259	8.16326530612245	23.529411764705884	31.69267707082833	y >>> 18==bits	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	12.5	18.181818181818183	30.681818181818183	getRowDimension()!=column	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	16.363636363636363	16.363636363636363	27.339246119733925	data instanceof ObjectiveFunction	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#640	7.36734693877551	20.055555555555557	26.99786324786325	FastMath.sqrt(c * c + 1.0)>=maxAbsoluteValue	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#optimize#?,OptimizationData#363	26.666666666666668	0.0	26.666666666666668		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#228	10.93939393939394	14.44	25.37939393939394	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) > 0)	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	10.0	14.285714285714286	24.285714285714285	(int)longMT==seed	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#176	10.0	14.285714285714286	24.285714285714285	k != 0	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#148	11.11111111111111	12.121212121212121	23.232323232323232	upperBound[i]>v	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#110	8.16326530612245	13.793103448275861	21.956368754398312	r * FastMath.cos(alpha)>alpha	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#202	9.5	12.033333333333333	21.53333333333333	!(k < m)	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	9.256410256410257	11.64516129032258	20.90157154673284	getRowDimension()>=column	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#145	3.3057851239669422	17.391304347826086	20.697089471793028	getColumnDimension()<nRows	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#224	6.9423076923076925	13.37037037037037	20.312678062678064	hIJ * hK[j]>xNormSqr	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	7.22	12.892857142857142	20.11285714285714	beta * hK[i]<beta	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	8.51063829787234	11.428571428571429	19.93920972644377	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	3.883495145631068	15.384615384615385	19.268110530246453	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	4.109589041095891	15.0	19.10958904109589	count<=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	2.2222222222222223	16.666666666666668	18.88888888888889	visitor.end()>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	2.2099447513812156	16.666666666666668	18.876611418047883	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	8.022222222222222	9.756756756756756	17.778978978978976	!(i < diagonal.length)	_
org.apache.commons.math3.optim.PointValuePair#double[]#getPoint#?#70	17.307692307692307	0.0	17.307692307692307		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	7.407407407407407	9.523809523809524	16.93121693121693	!(i < nRows)	_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#MultivariateFunction#getObjectiveFunction#?#45	16.363636363636363	0.0	16.363636363636363		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	10.256410256410257	10.256410256410257	15.284343217304112	data instanceof SimpleBounds	_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#?#ObjectiveFunction#?,MultivariateFunction#36	14.754098360655737	0.0	14.754098360655737		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	1.486988847583643	12.892857142857142	14.316344687341129	d[0].length>nRows	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	5.82258064516129	8.395348837209303	14.217929482370593	matrix.getEntry(j,i)<=relativeTolerance	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	13.333333333333334	0.0	13.333333333333334		_
org.apache.commons.math3.optim.SimpleBounds#SimpleBounds#unbounded#?,int#73	12.461538461538462	0.0	12.461538461538462		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	5.918032786885246	6.811320754716981	12.45194575471698	isSymmetric	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#GoalType#getGoalType#?#101	12.0	0.0	12.0		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	5.46969696969697	6.224137931034483	11.693834900731453	cachedQ == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	2.5641025641025643	9.025	11.589102564102564	getColumnDimension()==rowCount	_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double#44	11.39240506329114	0.0	11.39240506329114		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double,boolean#58	11.39240506329114	0.0	11.39240506329114		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1220	2.272727272727273	9.523809523809524	11.363636363636365	aa + tmp - tmp<aa	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#763	11.11111111111111	0.0	11.11111111111111		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	5.231884057971015	5.918032786885246	11.075175644028104	!(!matrix.isSquare())	_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	5.421686746987952	5.421686746987952	10.843373493975903	maxEval>0	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	5.389221556886228	5.389221556886228	10.778443113772456	!(max <= 0)	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	4.011111111111111	6.685185185185185	10.696296296296296	0>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#64	10.344827586206897	0.0	10.344827586206897		_
org.apache.commons.math3.optim.SimpleBounds#double[]#getLower#?#53	10.256410256410257	0.0	10.256410256410257		_
org.apache.commons.math3.optim.SimpleBounds#double[]#getUpper#?#61	10.256410256410257	0.0	10.256410256410257		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	2.2346368715083798	8.0	10.23463687150838	getColumnDimension()<nRows	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#?#MultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#43	10.227272727272727	0.0	10.227272727272727		_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	5.421686746987952	5.421686746987952	10.060862004719912	data instanceof MaxEval	_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#107	10.0	0.0	10.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	10.0	0.0	10.0		_
org.apache.commons.math3.optim.SimpleBounds#?#SimpleBounds#?,double[],double[]#44	10.0	0.0	10.0		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	2.962962962962963	4.545454545454546	7.508417508417509	(high | low) * 0x1.0p-52d>0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	3.2	3.9603960396039604	7.1603960396039605	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1730	1.3203592814371257	5.797101449275362	7.042864161139769	polyCosine(epsilon)>=costB	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2334	3.076923076923077	3.9215686274509802	6.998491704374057	sinQ(xa,xb)>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	2.5422535211267605	4.349397590361446	6.891651111488207	i < nCols	_
org.apache.commons.math3.optim.BaseOptimizer#ConvergenceChecker<PAIR>#getConvergenceChecker#?#102	6.428571428571429	0.0	6.428571428571429		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getStartPoint#?#109	6.382978723404255	0.0	6.382978723404255		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getUpperBound#?#121	6.382978723404255	0.0	6.382978723404255		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getLowerBound#?#115	6.122448979591836	0.0	6.122448979591836		_
org.apache.commons.math3.optim.BaseOptimizer#void#incrementEvaluationCount#?#162	5.960264900662252	0.0	5.960264900662252		_
org.apache.commons.math3.optim.InitialGuess#double[]#getInitialGuess#?#45	5.921052631578948	0.0	5.921052631578948		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#561	5.918032786885246	0.0	5.918032786885246		_
org.apache.commons.math3.optim.InitialGuess#?#InitialGuess#?,double[]#36	5.882352941176471	0.0	5.882352941176471		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	5.82258064516129	0.0	5.82258064516129		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	5.82258064516129	0.0	5.82258064516129		_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetric#?,RealMatrix,double#439	5.46969696969697	0.0	5.46969696969697		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2280	2.358288770053476	3.0205479452054793	5.378836715258956	-cosQ(xa,xb)!=0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3548	1.7484407484407485	3.475206611570248	5.223647360010997	a!=0	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#PAIR#optimize#?,OptimizationData#66	5.027932960893855	0.0	5.027932960893855		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#?#BaseMultivariateOptimizer#?,ConvergenceChecker<PAIR>#48	4.891304347826087	0.0	4.891304347826087		_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	2.1390374331550803	2.7210884353741496	4.86012586852923	0>=0	_
org.apache.commons.math3.optim.BaseOptimizer#PAIR#optimize#?,OptimizationData#143	4.838709677419355	0.0	4.838709677419355		_
org.apache.commons.math3.optim.BaseOptimizer#?#BaseOptimizer#?,ConvergenceChecker<PAIR>#51	4.522613065326633	0.0	4.522613065326633		GT
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1845	1.3243243243243243	3.1056338028169015	4.429958127141226	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#124	1.653061224489796	2.4615384615384617	4.114599686028257	FastMath.max(FastMath.abs(p),FastMath.abs(c))!=p	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	1.6213235294117647	2.383783783783784	4.005107313195548	finalRemB>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	1.8823529411764706	1.8823529411764706	3.764705882352941	!(steps == null)	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	3.7037037037037037	0.0	3.7037037037037037		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	1.6213235294117647	2.0045454545454544	3.6258689839572193	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	1.6213235294117647	2.0045454545454544	3.6258689839572193	finalK!=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	1.6213235294117647	2.0045454545454544	3.6258689839572193	finalRemA>=0	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.963855421686747	2.395209580838323	3.35906500252507	log(x,null)<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	1.6842105263157894	1.6842105263157894	3.3252361673414303	converged	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	1.641025641025641	1.641025641025641	3.282051282051282	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	1.641025641025641	1.641025641025641	3.282051282051282	dimension!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	1.641025641025641	1.641025641025641	3.282051282051282	simplex.length!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#229	1.641025641025641	1.641025641025641	3.282051282051282	!(k < dimension)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#247	1.641025641025641	1.641025641025641	3.282051282051282	i < simplex.length	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	1.3333333333333333	1.9393939393939394	3.2727272727272725	atan(x,0.0,false)<0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	1.2779552715654952	1.941747572815534	3.219702844381029	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	1.5609756097560976	1.641025641025641	3.2020012507817386	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	1.2148760330578512	1.9607843137254901	3.1756603467833413	p * x2 + 0.041666666666621166<=x	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	1.5609756097560976	1.5609756097560976	3.1219512195121952	data instanceof AbstractSimplex	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	1.2148760330578512	1.9008620689655173	3.1157381020233688	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	1.107361963190184	1.91005291005291	3.0174148732430943	data[index]<0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	1.291248206599713	1.6791044776119404	2.9703526842116537	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	1.3468013468013469	1.5873015873015872	2.934102934102934	(a <= b) ? b : a>0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	2.816901408450704	0.0	2.816901408450704		_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.9900990099009901	1.8	2.79009900990099	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	2.710843373493976	0.0	2.710843373493976		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	1.1764705882352942	1.5126050420168067	2.689075630252101	!(cb == null)	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	1.2048192771084338	1.3513513513513513	2.5561706284597854	relativeThreshold>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	1.046376811594203	1.4917355371900827	2.538112348784286	i < nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.7751937984496124	1.7391304347826086	2.5143242332322213	data[row][column]==0	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	1.2195121951219512	1.2195121951219512	2.4390243902439024	absoluteThreshold>0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.7044728434504792	1.6666666666666667	2.371139510117146	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.7474120082815735	1.5560344827586208	2.3034464910401944	subMatrix[0].length==nRows	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.6795069337442219	1.6	2.279506933744222	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.9401041666666666	1.2846975088967971	2.2248016755634636	!(data == null || data[0] == null)	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	2.1479713603818618	0.0	2.1479713603818618		_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	1.0158730158730158	1.103448275862069	2.1193212917350848	evaluations.getCount()>0	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2490	0.7441860465116279	1.6	2.107936507936508	xb * TANGENT_TABLE_B[idx]==yb	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.9256410256410257	1.1570512820512822	2.082692307692308	data.length>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	1.83248730964467	0.0	1.83248730964467		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.7267267267267268	1.0498915401301518	1.7766182668568786	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.39339875111507583	1.3289036544850499	1.7223024056001257	Math.sqrt(a)<=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.6890625	0.984375	1.6734375	!(columnDimension < 1)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair[]#getPoints#?#286	1.641025641025641	0.0	1.641025641025641		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.667779632721202	0.9345794392523364	1.6023590719735386	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.6666666666666666	0.9324009324009324	1.5990675990675989	((data == null) || (data[0] == null)) ? 0 : data[0].length!=0	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.53430749682338	1.0357142857142858	1.5700217825376659	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,ConvergenceChecker<PointValuePair>#97	1.5609756097560976	0.0	1.5609756097560976		_
org.apache.commons.math3.optim.PointValuePair#double[]#getPointRef#?#80	1.5609756097560976	0.0	1.5609756097560976		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#optimize#?,OptimizationData#122	1.5609756097560976	0.0	1.5609756097560976		_
org.apache.commons.math3.optim.SimpleValueChecker#?#SimpleValueChecker#?,double,double#66	1.5576923076923077	0.0	1.5576923076923077		_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.6097560975609756	0.8620689655172413	1.4718250630782168	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.60882800608828	0.8602150537634409	1.469043059851721	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	1.4615384615384615	0.0	1.4615384615384615		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	1.4184397163120568	0.0	1.4184397163120568		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	1.4184397163120568	0.0	1.4184397163120568		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#117	0.6666666666666666	0.6666666666666666	1.3333333333333333	khi>=gamma	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	1.3024602026049203	0.0	1.3024602026049203		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,double,double#105	1.2564102564102564	0.0	1.2564102564102564		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.6153846153846154	0.64	1.2553846153846155	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	1.2430939226519337	0.0	1.2430939226519337		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.6153846153846154	0.6153846153846154	1.2307692307692308	!(points.length != simplex.length)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	1.21580547112462	0.0	1.21580547112462		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#202	0.5925925925925926	0.5925925925925926	1.1851851851851851	!(i < getSize())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	1.0712166172106825	0.0	1.0712166172106825		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.5333333333333333	0.5333333333333333	1.0666666666666667	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.5161290322580645	0.5161290322580645	1.032258064516129	sigma!=rho	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.3992015968063872	0.5167958656330749	0.9159974624394621	!(o == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#257	0.42105263157894735	0.47058823529411764	0.891640866873065	centroid[j] - gamma * (centroid[j] - xWorst[j])<scaling	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.8830022075055187	0.0	0.8830022075055187		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.8719806763285024	0.0	0.8719806763285024		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#62	0.8658008658008658	0.0	0.8658008658008658		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#269	0.4	0.4	0.8	!(comparator.compare(simplex[i],pointValuePair) > 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.7505197505197505	0.0	0.7505197505197505		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.7474120082815735	0.0	0.7474120082815735		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[]#101	0.6666666666666666	0.0	0.6666666666666666		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#455	0.644122383252818	0.0	0.644122383252818		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[]#121	0.5161290322580645	0.0	0.5161290322580645		_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#181	0.037037037037037035	0.037037037037037035	0.07407407407407407	eval(func,w)<=val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#255	0.03571428571428571	0.037037037037037035	0.07275132275132275	!(t < 0.0)	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#288	0.03333333333333333	0.037037037037037035	0.07037037037037036	p[i] + nD[i]==optimum	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#131	0.03225806451612903	0.037037037037037035	0.06929510155316607	abs>=lineAbs	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.034482758620689655	0.034482758620689655	0.06896551724137931	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.029411764705882353	0.037037037037037035	0.0664488017429194	hi<=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.03125	0.034482758620689655	0.06573275862068965	mid<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.03225806451612903	0.03333333333333333	0.06559139784946236	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#242	0.03225806451612903	0.037037037037037035	0.06451612903225806	checker.converged(iter,previous,current)	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.029411764705882353	0.034482758620689655	0.063894523326572	f.value(x)<0	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#125	0.03125	0.03225806451612903	0.06350806451612903	FastMath.abs(p - c)>c	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#90	0.02564102564102564	0.037037037037037035	0.06267806267806267	scaledX * scaledX>scaledX	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#236	0.02631578947368421	0.037037037037037035	0.06267806267806267	solver.getEvaluations()==n	GT
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.029411764705882353	0.029411764705882353	0.058823529411764705	lo!=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.023809523809523808	0.03333333333333333	0.05714285714285714	point==0	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#91	0.02857142857142857	0.02857142857142857	0.05714285714285714	!(growLimit <= 0)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.023255813953488372	0.03333333333333333	0.056589147286821705	max<0	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.022727272727272728	0.03333333333333333	0.05606060606060606	upper<=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.023255813953488372	0.03125	0.05450581395348837	start<0	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.022727272727272728	0.03125	0.05397727272727273	start<0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#46	0.023255813953488372	0.02857142857142857	0.05182724252491694	point<value	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#336	0.02564102564102564	0.02564102564102564	0.05128205128205128	b>0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#389	0.02564102564102564	0.02564102564102564	0.05128205128205128	!(i < gradient.length)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.023255813953488372	0.027777777777777776	0.05103359173126615	min<0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.025	0.02564102564102564	0.05064102564102564	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.025	0.025	0.05	!(data instanceof BracketingStep)	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.025	0.025	0.05	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.022727272727272728	0.02702702702702703	0.049754299754299756	lower<0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.023255813953488372	0.02631578947368421	0.04957160342717258	function.value(x)<=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.023255813953488372	0.02631578947368421	0.04957160342717258	value<0	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#311	0.025	0.025	0.04880952380952381	isMinim	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#49	0.022727272727272728	0.022727272727272728	0.045454545454545456	!(lo >= hi)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.022727272727272728	0.022727272727272728	0.04494949494949495	!(data instanceof GoalType)	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#90	0.021739130434782608	0.022222222222222223	0.043961352657004835	rel>=abs	_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1237	0.016666666666666666	0.02702702702702703	0.04369369369369369	lInc==nRows	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	0.009433962264150943	0.03125	0.04068396226415094	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#98	0.017857142857142856	0.025	0.040584415584415584	initial>0	_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.019230769230769232	0.02127659574468085	0.040507364975450086	evaluations.getMaximalCount()>0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#265	0.008130081300813009	0.03125	0.03938008130081301	FastMath.min(pStart + BLOCK_SIZE,rows)==blockColumns	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#222	0.013513513513513514	0.023809523809523808	0.03732303732303732	tol>c	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double#168	0.03571428571428571	0.0	0.03571428571428571		_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.014084507042253521	0.02	0.03408450704225352	maximalCount!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double#151	0.03333333333333333	0.0	0.03333333333333333		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,ConvergenceChecker<PointValuePair>#101	0.03333333333333333	0.0	0.03333333333333333		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#UnivariatePointValuePair#search#?,double[],double[]#358	0.03333333333333333	0.0	0.03333333333333333		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#?#LineSearch#?,double,double#330	0.03225806451612903	0.0	0.03225806451612903		_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#?#SimpleUnivariateValueChecker#?,double,double#69	0.030303030303030304	0.0	0.030303030303030304		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.013513513513513514	0.016129032258064516	0.02964254577157803	evaluations.getCount()!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#205	0.0049504950495049506	0.024390243902439025	0.029316352276823263	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double#244	0.029197080291970802	0.0	0.029197080291970802		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#155	0.0045045045045045045	0.024390243902439025	0.02889474840694353	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?#79	0.02857142857142857	0.0	0.02857142857142857		_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1276	0.010526315789473684	0.018867924528301886	0.02830188679245283	FastMath.min(qStart + BLOCK_SIZE,columns)==pEnd	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>#71	0.02702702702702703	0.0	0.02702702702702703		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner#double[]#precondition#?,double[],double[]#346	0.02631578947368421	0.0	0.02631578947368421		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#?#LineSearchFunction#?,double[],double[]#373	0.02564102564102564	0.0	0.02564102564102564		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#double[]#computeObjectiveGradient#?,double[]#54	0.02564102564102564	0.0	0.02564102564102564		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#74	0.025	0.0	0.025		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#optimize#?,OptimizationData#187	0.025	0.0	0.025		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#?#ObjectiveFunctionGradient#?,MultivariateVectorFunction#36	0.025	0.0	0.025		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#MultivariateVectorFunction#getObjectiveFunctionGradient#?#45	0.025	0.0	0.025		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>,UnivariateSolver,Preconditioner#164	0.025	0.0	0.025		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#?#GradientMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#44	0.025	0.0	0.025		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#GoalType#getGoalType#?#77	0.023255813953488372	0.0	0.023255813953488372		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.005681818181818182	0.01694915254237288	0.02263097072419106	searchMin==0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#UnivariatePointValuePair#optimize#?,OptimizationData#70	0.022222222222222223	0.0	0.022222222222222223		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#UnivariateFunction#getObjectiveFunction#?#45	0.022222222222222223	0.0	0.022222222222222223		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#?#UnivariateObjectiveFunction#?,UnivariateFunction#36	0.022222222222222223	0.0	0.022222222222222223		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#?#UnivariateOptimizer#?,ConvergenceChecker<UnivariatePointValuePair>#49	0.021739130434782608	0.0	0.021739130434782608		_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?#47	0.017241379310344827	0.0	0.017241379310344827		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.007462686567164179	0.00847457627118644	0.01593726283835062	searchStart>0	_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.013513513513513514	0.0	0.013513513513513514		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.013513513513513514	0.0	0.013513513513513514		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.006329113924050633	0.007042253521126761	0.013371367445177394	relativeAccuracy>=0	_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.013157894736842105	0.0	0.013157894736842105		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[]#749	0.012987012987012988	0.0	0.012987012987012988		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.006134969325153374	0.006802721088435374	0.012937690413588748	functionValueAccuracy>=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#196	0.005555555555555556	0.007142857142857143	0.012698412698412698	doSolve()>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.006024096385542169	0.006666666666666667	0.012690763052208835	absoluteAccuracy>=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.005649717514124294	0.006493506493506494	0.012143224007630788	function.value(point)<0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.005681818181818182	0.006289308176100629	0.011971126357918811	searchMax>0	_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#108	0.011904761904761904	0.0	0.011904761904761904		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#182	0.0055248618784530384	0.00625	0.011774861878453039	startValue>=min	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#96	0.005291005291005291	0.006134969325153374	0.011425974616158664	relativeAccuracy<absoluteAccuracy	_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?,double#55	0.011363636363636364	0.0	0.011363636363636364		_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.0043859649122807015	0.00641025641025641	0.010796221322537112	columns!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.004366812227074236	0.006369426751592357	0.010736238978666593	rows>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.004366812227074236	0.006289308176100629	0.010656120403174865	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.004219409282700422	0.006060606060606061	0.010280015343306482	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE!=0	_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.010101010101010102	0.0	0.010101010101010102		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.010101010101010102	0.0	0.010101010101010102		_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.004761904761904762	0.005291005291005291	0.010052910052910053	!(lower >= upper)	_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.00980392156862745	0.0	0.00980392156862745		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[],int#779	0.009615384615384616	0.0	0.009615384615384616		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.009259259259259259	0.0	0.009259259259259259		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.009174311926605505	0.0	0.009174311926605505		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#142	0.00909090909090909	0.0	0.00909090909090909		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.008333333333333333	0.0	0.008333333333333333		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#verifySequence#?,double,double,double#277	0.007692307692307693	0.0	0.007692307692307693		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.007692307692307693	0.0	0.007692307692307693		_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifySequence#?,double,double,double#373	0.007575757575757576	0.0	0.007575757575757576		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.007246376811594203	0.0	0.007246376811594203		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#56	0.006666666666666667	0.0	0.006666666666666667		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.006578947368421052	0.0	0.006578947368421052		_
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver#?#AbstractUnivariateSolver#?,double#37	0.005988023952095809	0.0	0.005988023952095809		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double#67	0.005649717514124294	0.0	0.005649717514124294		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#incrementEvaluationCount#?#310	0.005555555555555556	0.0	0.005555555555555556		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,double[][]#127	0.0049504950495049506	0.0	0.0049504950495049506		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#computeWeightedJacobian#?,double[]#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#?#Solver#?,double[][],int[],boolean#282	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1662	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#?#Weight#?,double[]#42	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#?#MultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#double[]#getTarget#?#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#MultivariateVectorFunction#getModelFunction#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#copy#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#min#?,double,double#3480	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#multiply#?,RealMatrix#184	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double#computeCost#?,double[]#77	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#703	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#operate#?,double[]#289	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double#getEntry#?,int,int#226	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#765	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#?#JacobianMultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#50	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#277	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#RealMatrix#getWeight#?#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#getData#?#611	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,int#53	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#void#setEntry#?,int,int,double#237	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,ConvergenceChecker<PointVectorValuePair>#63	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#MultivariateMatrixFunction#getModelFunctionJacobian#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#getDataRef#?#219	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#checkParameters#?#161	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#setCost#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#?#Target#?,double[]#39	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#void#checkVectorDimensions#?,int#758	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[]#44	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double#dotProduct#?,RealVector#459	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[],boolean#84	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#DiagonalMatrix#multiply#?,DiagonalMatrix#171	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#getWeightSquareRoot#?#111	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#RealVector#solve#?,RealVector#300	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#getTarget#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#PointVectorValuePair#optimize#?,OptimizationData#197	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#?#ModelFunctionJacobian#?,MultivariateMatrixFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double[]#getDataRef#?#450	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#squareRoot#?,RealMatrix#271	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?,boolean#82	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#RealMatrix#getWeight#?#96	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#?#ModelFunction#?,MultivariateVectorFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#151	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[]#64	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qrDecomposition#?,RealMatrix#867	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#83	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealVector#operate#?,RealVector#683	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#?#AbstractLeastSquaresOptimizer#?,ConvergenceChecker<PointVectorValuePair>#53	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double[]#computeResiduals#?,double[]#218	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#ulp#?,double#3029	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#parseOptimizationData#?,OptimizationData#249	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix#76	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#DecompositionSolver#getSolver#?#258	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#?#SimpleVectorValueChecker#?,double,double#68	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qTy#?,double[]#938	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getColumnDimension#?#282	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#checkParameters#?#953	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#double[]#getValueRef#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#double[][]#computeJacobian#?,double[]#60	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[],boolean#58	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?#72	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#PointVectorValuePair#doOptimize#?#83	0.0	0.0	0.0		GT
org.apache.commons.math3.linear.ArrayRealVector#double[]#toArray#?#726	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#void#checkParameters#?#178	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#87	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix,double#88	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#PointVectorValuePair#doOptimize#?#498	0.0	0.0	0.0		GT
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#computeObjectiveValue#?,double[]#62	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#boolean#converged#?,int,PointVectorValuePair,PointVectorValuePair#135	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,boolean,ConvergenceChecker<PointVectorValuePair>#74	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getRowDimension#?#276	0.0	0.0	0.0		_
