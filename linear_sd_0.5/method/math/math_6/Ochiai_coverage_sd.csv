line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	1.0022296571715914	1.0022296571715914	2.004459314343183	iterations.getCount()>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	0.8058229640253802	0.8451542547285166	1.650977218753897	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#609	0.8058229640253802	0.8451542547285166	1.650977218753897	(1 + 2 * Math.max(0,Math.sqrt((mueff - 1) / (dimension + 1)) - 1)) * Math.max(0.3,1 - dimension / (1e-6 + maxIterations)) + cs<=sumwq	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	0.8058229640253802	0.8451542547285166	1.650977218753897	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1110	0.823754471047914	0.823754471047914	1.647508942095828	i < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1250	0.8058229640253802	0.8058229640253802	1.6116459280507605	max>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#998	0.8058229640253802	0.8058229640253802	1.6116459280507605	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	0.8058229640253802	0.8058229640253802	1.6116459280507605	e * e==e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1028	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	0.8058229640253802	0.8058229640253802	1.6116459280507605	r < n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(c < popSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#967	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(i < x.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1259	0.8058229640253802	0.8058229640253802	1.6116459280507605	r < m.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#818	0.8058229640253802	0.8058229640253802	1.6116459280507605	i < doubles.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1200	0.8058229640253802	0.8058229640253802	1.6116459280507605	step>=start	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	0.8058229640253802	0.8058229640253802	1.6116459280507605	hsig	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(r < n)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1057	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1231	0.8058229640253802	0.8058229640253802	1.6116459280507605	min > e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#805	0.8058229640253802	0.8058229640253802	1.6116459280507605	vals[i - 1]<=val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#910	0.8058229640253802	0.8058229640253802	1.6116459280507605	isMinimize ? value : -value!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#983	0.8058229640253802	0.8058229640253802	1.6116459280507605	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	0.8058229640253802	0.8058229640253802	1.6116459280507605	Double.compare(value,o.value)<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#560	0.7881104062391007	0.8058229640253802	1.593933370264481	!(i < init.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1072	0.7835467939002064	0.7835467939002064	1.5670935878004129	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	0.7835467939002064	0.7835467939002064	1.5670935878004129	i < indices.length	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#786	0.7835467939002064	0.7835467939002064	1.5670935878004129	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1088	0.7835467939002064	0.7835467939002064	1.5670935878004129	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#741	0.7835467939002064	0.7835467939002064	1.5670935878004129	negalphaold * negccov!=negminresidualvariance	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	0.7835467939002064	0.7835467939002064	1.5670935878004129	indices[indices.length - i - 1]!=i	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	0.7835467939002064	0.7835467939002064	1.5670935878004129	r < m.getRowDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#535	0.7715167498104595	0.7715167498104595	1.543033499620919	data instanceof Sigma	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	0.7715167498104595	0.7715167498104595	1.543033499620919	lambda>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	0.727392967453308	0.727392967453308	1.454785934906616	!(size <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	0.727392967453308	0.727392967453308	1.4416786817390221	!(s[i] < 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	0.7142857142857143	0.7181324987175317	1.432418213003246	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.5698028822981898	0.727392967453308	1.2971958497514977	getColumnDimension()!=rowCount	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#116	0.6338656910463875	0.6338656910463875	1.267731382092775	function.value(params)>=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.5832118435198043	0.6788442333021307	1.2620560768219349	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#338	0.5902813361009552	0.6681531047810609	1.258434440882016	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.5698028822981898	0.6482037235521644	1.2180066058503543	getRowDimension()!=column	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#259	0.4839339184958273	0.7018624063435964	1.1857963248394237	y >>> 18==bits	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#228	0.5475708968190233	0.6069327367499429	1.1545036335689662	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) > 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	0.6078306738548308	0.6078306738548308	1.1388249179084222	data instanceof ObjectiveFunction	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#640	0.46746443973986673	0.6785714285714286	1.134586021271882	FastMath.sqrt(c * c + 1.0)>=maxAbsoluteValue	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.5241424183609592	0.5976143046671968	1.121756723028156	(int)longMT==seed	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#176	0.5241424183609592	0.5976143046671968	1.121756723028156	k != 0	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#148	0.545544725589981	0.563436169819011	1.1089808954089921	upperBound[i]>v	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#202	0.5182674893104819	0.567733589433837	1.086001078744319	!(k < m)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#110	0.4839339184958273	0.5902813361009552	1.0742152545967825	r * FastMath.cos(alpha)>alpha	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.5129517847982369	0.5607672692959075	1.0737190540941444	getRowDimension()>=column	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#224	0.45601459270045336	0.59030127770114	1.0463158704015934	hIJ * hK[j]>xNormSqr	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	0.4635525346505533	0.5824823725107175	1.046034907161271	beta * hK[i]<beta	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	0.4920678313051229	0.5513178464199713	1.043385677725094	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.48416483186574427	0.5237519540989727	1.007916785964717	!(i < diagonal.length)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.4652421051992354	0.5143444998736397	0.9795866050728752	!(i < nRows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#145	0.32773676267223106	0.6388765649999398	0.9666133276721709	getColumnDimension()<nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.3524536884251207	0.6131393394849658	0.9655930279100865	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	0.3578535898998524	0.5910828046793255	0.9489363945791779	count<=0	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	0.5292561240249631	0.5292561240249631	0.919558334937129	data instanceof SimpleBounds	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	0.42316363302800525	0.49321542506860677	0.916379058096612	matrix.getEntry(j,i)<=relativeTolerance	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.2727723627949905	0.629940788348712	0.9027131511437025	visitor.end()>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.2720647808954716	0.629940788348712	0.9020055692441836	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.42613323881544374	0.4523809523809524	0.8697869887865118	isSymmetric	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.411877235523957	0.4354317860884004	0.8473090216123573	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.40398109278443417	0.42613323881544374	0.8275815098114891	!(!matrix.isSquare())	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.35906624935876585	0.4488328116984573	0.8078990610572232	0>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#893	0.8058229640253802	0.0	0.8058229640253802		_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	0.4029114820126901	0.4029114820126901	0.8058229640253802	maxEval>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#zeros#?,int,int#1167	0.8058229640253802	0.0	0.8058229640253802		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#936	0.8058229640253802	0.0	0.8058229640253802		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#844	0.8058229640253802	0.0	0.8058229640253802		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#doOptimize#?#514	0.8058229640253802	0.0	0.8058229640253802		GT
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.40189786661568244	0.40189786661568244	0.8037957332313649	!(max <= 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.225474701184918	0.5824823725107175	0.8032915753234773	d[0].length>nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.29160592175990213	0.5077963596336063	0.7994022813935084	getColumnDimension()==rowCount	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1220	0.27565892320998564	0.5143444998736397	0.780735195486091	aa + tmp - tmp<aa	_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	0.4029114820126901	0.4029114820126901	0.7800388233783919	data instanceof MaxEval	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#double[]#getSigma#?#304	0.7715167498104595	0.0	0.7715167498104595		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#117	0.3779644730092272	0.3779644730092272	0.7559289460184544	khi>=gamma	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.2734854943722097	0.4800153607373193	0.753500855109529	getColumnDimension()<nRows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#optimize#?,OptimizationData#363	0.727392967453308	0.0	0.727392967453308		_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#123	0.2723523897009611	0.4183300132670378	0.6906824029679989	FastMath.abs(p - c)>p	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.3117398431942748	0.37796447300922725	0.689704316203502	(high | low) * 0x1.0p-52d>0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	0.3229168418603133	0.35555906726738895	0.6784759091277022	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2334	0.3171807398477756	0.3539961627023943	0.6711769025501699	sinQ(xa,xb)>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.2912411862553588	0.3723343557930697	0.6635755420484285	i < nCols	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.3086066999241838	0.3380617018914066	0.6466684018155904	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	0.3223291856101521	0.3223291856101521	0.6446583712203042	!(steps == null)	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1730	0.2127407358491908	0.41996052556580804	0.626839507203572	polyCosine(epsilon)>=costB	_
org.apache.commons.math3.optim.PointValuePair#double[]#getPoint#?#70	0.6185895741317419	0.0	0.6185895741317419		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.3086066999241838	0.3086066999241838	0.6172133998483676	!(points.length != simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#MultivariateFunction#getObjectiveFunction#?#45	0.6078306738548308	0.0	0.6078306738548308		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2280	0.2799253631867321	0.31374750995027834	0.5936728731370104	-cosQ(xa,xb)!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#?#ObjectiveFunction#?,MultivariateFunction#36	0.5878963512522154	0.0	0.5878963512522154		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	0.29649972666444047	0.29649972666444047	0.5874569136457637	converged	GT
org.apache.commons.math3.optim.SimpleBounds#SimpleBounds#unbounded#?,int#73	0.583383351196948	0.0	0.583383351196948		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.5832118435198043	0.0	0.5832118435198043		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	0.29095718698132317	0.29095718698132317	0.5819143739626463	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	0.29095718698132317	0.29095718698132317	0.5819143739626463	dimension!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	0.29095718698132317	0.29095718698132317	0.5819143739626463	simplex.length!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#229	0.29095718698132317	0.29095718698132317	0.5819143739626463	!(k < dimension)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#247	0.29095718698132317	0.29095718698132317	0.5819143739626463	i < simplex.length	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	0.2519763153394848	0.329914439536929	0.5818907548764138	atan(x,0.0,false)<0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3548	0.2424423763348419	0.3323032051727266	0.5747455815075685	a!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	0.2807449625374386	0.29095718698132317	0.5717021495187617	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#202	0.2857142857142857	0.2857142857142857	0.5714285714285714	!(i < getSize())	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.26793191107712166	0.29974532466509035	0.567677235742212	0>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	0.2807449625374386	0.2807449625374386	0.5614899250748772	data instanceof AbstractSimplex	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#GoalType#getGoalType#?#101	0.5480880714314023	0.0	0.5480880714314023		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#763	0.545544725589981	0.0	0.545544725589981		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double#44	0.5381220025006315	0.0	0.5381220025006315		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double,boolean#58	0.5381220025006315	0.0	0.5381220025006315		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1845	0.21304705816169925	0.3177444546511213	0.5307915128128206	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.optim.SimpleBounds#double[]#getLower#?#53	0.5292561240249631	0.0	0.5292561240249631		_
org.apache.commons.math3.optim.SimpleBounds#double[]#getUpper#?#61	0.5292561240249631	0.0	0.5292561240249631		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#107	0.5241424183609592	0.0	0.5241424183609592		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.5241424183609592	0.0	0.5241424183609592		_
org.apache.commons.math3.optim.SimpleBounds#?#SimpleBounds#?,double[],double[]#44	0.5241424183609592	0.0	0.5241424183609592		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#64	0.5197191965064278	0.0	0.5197191965064278		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#?#MultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#43	0.5175491695067657	0.0	0.5175491695067657		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	0.23466983204052894	0.28132850663097775	0.5159983386715067	finalRemB>0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	0.23466983204052894	0.2594372608313854	0.49410709287191434	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	0.23466983204052894	0.2594372608313854	0.49410709287191434	finalK!=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	0.23466983204052894	0.2594372608313854	0.49410709287191434	finalRemA>=0	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.19596545041740512	0.28749445424997294	0.4834599046673781	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.23904572186687872	0.23904572186687872	0.47809144373375745	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	0.20965696734438366	0.25598984252456897	0.4656468098689526	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.1829098284755657	0.2825039109405883	0.465413739416154	log(x,null)<0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	0.20439468762399982	0.25717224993681986	0.4615669375608197	p * x2 + 0.041666666666621166<=x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	0.20439468762399982	0.25303041367373696	0.4574251012977368	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.2279211529192759	0.2279211529192759	0.4558423058385518	sigma!=rho	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	0.2182178902359924	0.2326210525996177	0.4508389428356101	relativeThreshold>=0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.1958866984750516	0.2545353155232656	0.45042201399831716	data[index]<0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.20998026278290402	0.2378855548858317	0.44786581766873573	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	0.21501647626876533	0.2326210525996177	0.44763752886838304	(a <= b) ? b : a>0	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	0.2196873875818734	0.2196873875818734	0.4393747751637468	absoluteThreshold>0	_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	0.21170244960998524	0.22291128503014113	0.43461373464012637	evaluations.getCount()>0	_
org.apache.commons.math3.optim.BaseOptimizer#ConvergenceChecker<PAIR>#getConvergenceChecker#?#102	0.43229281327817626	0.0	0.43229281327817626		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getStartPoint#?#109	0.4310416013535586	0.0	0.4310416013535586		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getUpperBound#?#121	0.4310416013535586	0.0	0.4310416013535586		_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2490	0.17574991006549873	0.2857142857142857	0.42731275079524345	xb * TANGENT_TABLE_B[idx]==yb	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.20082282790897182	0.2264167064258631	0.4272395343348349	!(cb == null)	_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#561	0.42613323881544374	0.0	0.42613323881544374		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getLowerBound#?#115	0.4237558664108825	0.0	0.4237558664108825		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.42316363302800525	0.0	0.42316363302800525		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.42316363302800525	0.0	0.42316363302800525		_
org.apache.commons.math3.optim.BaseOptimizer#void#incrementEvaluationCount#?#162	0.41909906717033446	0.0	0.41909906717033446		_
org.apache.commons.math3.optim.InitialGuess#double[]#getInitialGuess#?#45	0.4179586594315146	0.0	0.4179586594315146		_
org.apache.commons.math3.optim.InitialGuess#?#InitialGuess#?,double[]#36	0.4168275107825463	0.0	0.4168275107825463		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.19057257789269685	0.2261904761904762	0.41676305408317305	i < nRows	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetric#?,RealMatrix,double#439	0.411877235523957	0.0	0.411877235523957		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.16448792373994225	0.24296476537493128	0.40745268911487353	data[row][column]==0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.15687375497513917	0.23809523809523808	0.39496899307037725	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.16171530554144645	0.2308165271061847	0.39253183264763114	subMatrix[0].length==nRows	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.18089496309247047	0.21048836311393068	0.39138332620640115	!(data == null || data[0] == null)	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#PAIR#optimize#?,OptimizationData#66	0.39030221091216594	0.0	0.39030221091216594		_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.1541286998212769	0.2335072312471522	0.3876359310684291	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#?#BaseMultivariateOptimizer#?,ConvergenceChecker<PAIR>#48	0.38575837490522974	0.0	0.38575837490522974		_
org.apache.commons.math3.optim.BaseOptimizer#PAIR#optimize#?,OptimizationData#143	0.3839847637868534	0.0	0.3839847637868534		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#257	0.1781741612749496	0.20203050891044214	0.3802046701853917	centroid[j] - gamma * (centroid[j] - xWorst[j])<scaling	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.17953312467938293	0.20009979763878896	0.3796329223181719	data.length>0	_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#181	0.1889822365046136	0.1889822365046136	0.3779644730092272	eval(func,w)<=val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[]#101	0.3779644730092272	0.0	0.3779644730092272		_
org.apache.commons.math3.optim.BaseOptimizer#?#BaseOptimizer#?,ConvergenceChecker<PAIR>#51	0.3730235484764954	0.0	0.3730235484764954		GT
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.15920308451727833	0.19036384827209385	0.3495669327893722	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.34188172937891387	0.0	0.34188172937891387		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.15518559471593826	0.1846372364689991	0.3398228311849374	!(columnDimension < 1)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#269	0.1690308509457033	0.1690308509457033	0.3380617018914066	!(comparator.compare(simplex[i],pointValuePair) > 0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.1529080587958144	0.1801874925391118	0.3330955513349262	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.1527830828380352	0.1799830823853463	0.33276616522338154	((data == null) || (data[0] == null)) ? 0 : data[0].length!=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.11779920195985563	0.21363815131845643	0.33143735327831203	Math.sqrt(a)<=0	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.13684117676862792	0.1888699809339694	0.3257111577025973	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#255	0.1336306209562122	0.1889822365046136	0.3226128574608258	!(t < 0.0)	GT
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.14623884514353086	0.17323973216880928	0.31947857731234014	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.1461295076739323	0.17305804388372167	0.319187551557654	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.30457245193658633	0.0	0.30457245193658633		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.29716081940637273	0.0	0.29716081940637273		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair[]#getPoints#?#286	0.29095718698132317	0.0	0.29095718698132317		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#288	0.0944911182523068	0.1889822365046136	0.28347335475692037	p[i] + nD[i]==optimum	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,ConvergenceChecker<PointValuePair>#97	0.2807449625374386	0.0	0.2807449625374386		_
org.apache.commons.math3.optim.PointValuePair#double[]#getPointRef#?#80	0.2807449625374386	0.0	0.2807449625374386		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#optimize#?,OptimizationData#122	0.2807449625374386	0.0	0.2807449625374386		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#131	0.08451542547285165	0.1889822365046136	0.2734976619774653	abs>=lineAbs	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.26696477899043675	0.0	0.26696477899043675		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,double,double#105	0.2645751311064591	0.0	0.2645751311064591		_
org.apache.commons.math3.optim.SimpleValueChecker#?#SimpleValueChecker#?,double,double#66	0.2624453295839119	0.0	0.2624453295839119		_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.0668153104781061	0.1889822365046136	0.2557975469827197	hi<=0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.11869488458622456	0.13481546281826753	0.2535103474044921	!(o == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.24956829530904856	0.0	0.24956829530904856		_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#90	0.052414241836095915	0.1889822365046136	0.2413964783407095	scaledX * scaledX>scaledX	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#236	0.0545544725589981	0.1889822365046136	0.2413964783407095	solver.getEvaluations()==n	GT
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#268	0.08451542547285165	0.1889822365046136	0.236227795630767	w==e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[]#121	0.2279211529192759	0.0	0.2279211529192759		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.22397937251168507	0.0	0.22397937251168507		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.22043335708870274	0.0	0.22043335708870274		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.22043335708870274	0.0	0.22043335708870274		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.1091089451179962	0.1091089451179962	0.2182178902359924	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.2108497499920855	0.0	0.2108497499920855		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.20619652471058061	0.0	0.20619652471058061		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.2046792375417865	0.0	0.2046792375417865		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.19275686214629933	0.0	0.19275686214629933		_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.07715167498104596	0.1091089451179962	0.18626062009904215	mid<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.08451542547285165	0.0944911182523068	0.17900654372515845	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.0668153104781061	0.1091089451179962	0.1759242555961023	f.value(x)<0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.17527682734987296	0.0	0.17527682734987296		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.1743779858259087	0.0	0.1743779858259087		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#62	0.17360483211470365	0.0	0.17360483211470365		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.1620443299010167	0.0	0.1620443299010167		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.16171530554144645	0.0	0.16171530554144645		_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#125	0.07715167498104596	0.08451542547285165	0.1616671004538976	FastMath.abs(p - c)>c	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#455	0.15022739102363006	0.0	0.15022739102363006		_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.0472455591261534	0.0944911182523068	0.14173667737846019	point==0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.045834924851410566	0.0944911182523068	0.14032604310371738	max<0	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.0445435403187374	0.0944911182523068	0.1390346585710442	upper<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double#168	0.1336306209562122	0.0	0.1336306209562122		_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.0668153104781061	0.0668153104781061	0.1336306209562122	lo!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#91	0.0629940788348712	0.0629940788348712	0.1259881576697424	!(growLimit <= 0)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.045834924851410566	0.07715167498104596	0.12298659983245652	start<0	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.0445435403187374	0.07715167498104596	0.12169521529978336	start<0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#46	0.045834924851410566	0.0629940788348712	0.10882900368628176	point<value	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.045834924851410566	0.05976143046671968	0.10559635531813025	min<0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#336	0.052414241836095915	0.052414241836095915	0.10482848367219183	b>0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#389	0.052414241836095915	0.052414241836095915	0.10482848367219183	!(i < gradient.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.050507627227610534	0.052414241836095915	0.10292186906370646	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.0445435403187374	0.05698028822981897	0.10152382854855638	lower<0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.050507627227610534	0.050507627227610534	0.10101525445522107	!(data instanceof BracketingStep)	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.050507627227610534	0.050507627227610534	0.10101525445522107	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.045834924851410566	0.0545544725589981	0.10038939741040867	function.value(x)<=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.045834924851410566	0.0545544725589981	0.10038939741040867	value<0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	0.021128856368212913	0.07715167498104596	0.09828053134925888	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#311	0.050507627227610534	0.050507627227610534	0.09775318635376393	isMinim	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#265	0.019188238911333408	0.07715167498104596	0.09633991389237936	FastMath.min(pStart + BLOCK_SIZE,rows)==blockColumns	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double#151	0.0944911182523068	0.0	0.0944911182523068		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,ConvergenceChecker<PointValuePair>#101	0.0944911182523068	0.0	0.0944911182523068		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#UnivariatePointValuePair#search#?,double[],double[]#358	0.0944911182523068	0.0	0.0944911182523068		_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1237	0.03241018617760822	0.05698028822981897	0.0893904744074272	lInc==nRows	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#49	0.0445435403187374	0.0445435403187374	0.0890870806374748	!(lo >= hi)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.0445435403187374	0.0445435403187374	0.0878990387949434	!(data instanceof GoalType)	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#90	0.042257712736425826	0.043355498476206	0.08561321121263182	rel>=abs	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#?#LineSearch#?,double,double#330	0.08451542547285165	0.0	0.08451542547285165		_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#98	0.03450327796711771	0.050507627227610534	0.07904681828585511	initial>0	_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.03706246583305506	0.041239304942116126	0.07830177077517118	evaluations.getMaximalCount()>0	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#222	0.02727723627949905	0.0472455591261534	0.07452279540565244	tol>c	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#?#SimpleUnivariateValueChecker#?,double,double#69	0.07142857142857142	0.0	0.07142857142857142		_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.02817180849095055	0.03857583749052298	0.06674764598147354	maximalCount!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#205	0.014245072057454743	0.048795003647426664	0.06299977839060507	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?#79	0.0629940788348712	0.0	0.0629940788348712		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#155	0.01349873117890097	0.048795003647426664	0.062293734826327635	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.02727723627949905	0.0314970394174356	0.05877427569693465	evaluations.getCount()!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1276	0.022750787759664503	0.036369648372665396	0.05749850474087831	FastMath.min(qStart + BLOCK_SIZE,columns)==pEnd	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>#71	0.05698028822981897	0.0	0.05698028822981897		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner#double[]#precondition#?,double[],double[]#346	0.0545544725589981	0.0	0.0545544725589981		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#?#LineSearchFunction#?,double[],double[]#373	0.052414241836095915	0.0	0.052414241836095915		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#double[]#computeObjectiveGradient#?,double[]#54	0.052414241836095915	0.0	0.052414241836095915		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#74	0.050507627227610534	0.0	0.050507627227610534		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#optimize#?,OptimizationData#187	0.050507627227610534	0.0	0.050507627227610534		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#?#ObjectiveFunctionGradient#?,MultivariateVectorFunction#36	0.050507627227610534	0.0	0.050507627227610534		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#MultivariateVectorFunction#getObjectiveFunctionGradient#?#45	0.050507627227610534	0.0	0.050507627227610534		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>,UnivariateSolver,Preconditioner#164	0.050507627227610534	0.0	0.050507627227610534		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#?#GradientMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#44	0.050507627227610534	0.0	0.050507627227610534		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.015430334996209192	0.03289758474798845	0.048327919744197645	searchMin==0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#GoalType#getGoalType#?#77	0.045834924851410566	0.0	0.045834924851410566		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#UnivariatePointValuePair#optimize#?,OptimizationData#70	0.043355498476206	0.0	0.043355498476206		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#UnivariateFunction#getObjectiveFunction#?#45	0.043355498476206	0.0	0.043355498476206		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#?#UnivariateObjectiveFunction#?,UnivariateFunction#36	0.043355498476206	0.0	0.043355498476206		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#?#UnivariateOptimizer#?,ConvergenceChecker<UnivariatePointValuePair>#49	0.042257712736425826	0.0	0.042257712736425826		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.018184824186332698	0.019702760155977515	0.03788758434231021	searchStart>0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double#244	0.035555906726738896	0.0	0.035555906726738896		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.016448792373994225	0.01754656015858991	0.033995352532584136	relativeAccuracy>=0	_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?#47	0.03340765523905305	0.0	0.03340765523905305		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.016145842093015665	0.017180203318601237	0.033326045411616906	functionValueAccuracy>=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.015971914124998498	0.016971105832553266	0.032943019957551764	absoluteAccuracy>=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#196	0.015228622596829316	0.017699808135119715	0.03292843073194903	doSolve()>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.015379156298021624	0.016703827619526525	0.03208298391754815	function.value(point)<0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.015430334996209192	0.016386838133611553	0.03181717312982074	searchMax>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#182	0.015179418517972906	0.016325578711208478	0.03150499722918138	startValue>=min	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#96	0.014802231160433426	0.016145842093015665	0.03094807325344909	relativeAccuracy<absoluteAccuracy	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.013296743760228547	0.016574838603294898	0.029871582363523445	columns!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.013263952726932276	0.016511454667095662	0.02977540739402794	rows>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.013263952726932276	0.016386838133611553	0.029650790860543827	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.013010073697072197	0.016029264090937537	0.029039337788009732	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE!=0	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.01393195531438382	0.014802231160433426	0.028734186474817246	!(lower >= upper)	_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.02727723627949905	0.0	0.02727723627949905		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.02727723627949905	0.0	0.02727723627949905		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.026726124191242435	0.0	0.026726124191242435		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[]#749	0.026462806201248155	0.0	0.026462806201248155		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#108	0.024814583349273254	0.0	0.024814583349273254		_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?,double#55	0.024000768036865964	0.0	0.024000768036865964		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.02211869776019044	0.0	0.02211869776019044		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.02211869776019044	0.0	0.02211869776019044		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.021677749238103	0.0	0.021677749238103		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[],int#779	0.021398024625545645	0.0	0.021398024625545645		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.020869596778242055	0.0	0.020869596778242055		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.02074349534112556	0.0	0.02074349534112556		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#142	0.020619652471058063	0.0	0.020619652471058063		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.019492029389636262	0.0	0.019492029389636262		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#verifySequence#?,double,double,double#277	0.01853123291652753	0.0	0.01853123291652753		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.01853123291652753	0.0	0.01853123291652753		_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifySequence#?,double,double,double#373	0.018355577455358808	0.0	0.018355577455358808		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#56	0.016971105832553266	0.0	0.016971105832553266		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.016448792373994225	0.0	0.016448792373994225		_
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver#?#AbstractUnivariateSolver#?,double#37	0.015915175351980757	0.0	0.015915175351980757		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.015640281177246362	0.0	0.015640281177246362		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double#67	0.015379156298021624	0.0	0.015379156298021624		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#incrementEvaluationCount#?#310	0.015228622596829316	0.0	0.015228622596829316		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,double[][]#127	0.014245072057454743	0.0	0.014245072057454743		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#computeWeightedJacobian#?,double[]#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#?#Solver#?,double[][],int[],boolean#282	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1662	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#?#Weight#?,double[]#42	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#?#MultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#double[]#getTarget#?#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#MultivariateVectorFunction#getModelFunction#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#copy#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#min#?,double,double#3480	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#multiply#?,RealMatrix#184	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double#computeCost#?,double[]#77	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#703	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#operate#?,double[]#289	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double#getEntry#?,int,int#226	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#765	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#?#JacobianMultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#50	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#277	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#RealMatrix#getWeight#?#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#getData#?#611	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,int#53	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#void#setEntry#?,int,int,double#237	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,ConvergenceChecker<PointVectorValuePair>#63	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#MultivariateMatrixFunction#getModelFunctionJacobian#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#getDataRef#?#219	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#checkParameters#?#161	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#setCost#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#?#Target#?,double[]#39	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#void#checkVectorDimensions#?,int#758	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[]#44	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double#dotProduct#?,RealVector#459	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[],boolean#84	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#DiagonalMatrix#multiply#?,DiagonalMatrix#171	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#getWeightSquareRoot#?#111	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#RealVector#solve#?,RealVector#300	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#getTarget#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#PointVectorValuePair#optimize#?,OptimizationData#197	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#?#ModelFunctionJacobian#?,MultivariateMatrixFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double[]#getDataRef#?#450	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#squareRoot#?,RealMatrix#271	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?,boolean#82	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#RealMatrix#getWeight#?#96	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#?#ModelFunction#?,MultivariateVectorFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#151	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[]#64	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qrDecomposition#?,RealMatrix#867	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#83	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealVector#operate#?,RealVector#683	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#?#AbstractLeastSquaresOptimizer#?,ConvergenceChecker<PointVectorValuePair>#53	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double[]#computeResiduals#?,double[]#218	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#ulp#?,double#3029	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#parseOptimizationData#?,OptimizationData#249	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix#76	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#DecompositionSolver#getSolver#?#258	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#?#SimpleVectorValueChecker#?,double,double#68	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qTy#?,double[]#938	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getColumnDimension#?#282	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#checkParameters#?#953	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#double[]#getValueRef#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#double[][]#computeJacobian#?,double[]#60	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[],boolean#58	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?#72	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#PointVectorValuePair#doOptimize#?#83	0.0	0.0	0.0		GT
org.apache.commons.math3.linear.ArrayRealVector#double[]#toArray#?#726	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#void#checkParameters#?#178	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#87	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix,double#88	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#PointVectorValuePair#doOptimize#?#498	0.0	0.0	0.0		GT
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#computeObjectiveValue#?,double[]#62	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#boolean#converged#?,int,PointVectorValuePair,PointVectorValuePair#135	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,boolean,ConvergenceChecker<PointVectorValuePair>#74	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getRowDimension#?#276	0.0	0.0	0.0		_
