line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.stat.ranking.NaturalRanking#List<Integer>#getNanPositions#?,IntDoublePair[]#406	0.0	0.0	0.0	!(Double.isNaN(ranks[i].getValue()))	_
org.apache.commons.math3.special.Gamma#double#regularizedGammaP#?,double,double,double,int#186	0.0	0.0	0.0	ret!=0	_
org.apache.commons.math3.stat.inference.MannWhitneyUTest#void#ensureDataConformance#?,double[],double[]#74	0.0	0.0	0.0	!(x == null || y == null)	_
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair#int#getPosition#?#461	0.0	0.0	0.0	position!=0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3539	0.0	0.0	0.0	b>0	_
org.apache.commons.math3.distribution.NormalDistribution#double#cumulativeProbability#?,double#141	0.0	0.0	0.0	0.5 * (1 + Erf.erf(dev / (standardDeviation * SQRT2)))!=0	_
org.apache.commons.math3.distribution.NormalDistribution#?#NormalDistribution#?,double,double,double#82	0.0	0.0	0.0	inverseCumAccuracy<=sd	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1269	0.0	0.0	0.0	-0.16624882440418567<lnzb	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0	0.0	0.0	Math.sqrt(a)>=0	_
org.apache.commons.math3.stat.inference.MannWhitneyUTest#double#calculateAsymptoticPValue#?,double,int,int#183	0.0	0.0	0.0	2 * standardNormal.cumulativeProbability(z)>0	GT
org.apache.commons.math3.stat.inference.MannWhitneyUTest#double#mannWhitneyUTest#?,double[],double[]#229	0.0	0.0	0.0	x.length * y.length - Umax<=Umax	_
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair#double#getValue#?#453	0.0	0.0	0.0	value>=0	_
org.apache.commons.math3.stat.ranking.NaturalRanking#void#restoreNaNs#?,double[],List<Integer>#387	0.0	0.0	0.0	nanPositions.size() == 0	_
org.apache.commons.math3.stat.inference.MannWhitneyUTest#double#mannWhitneyU#?,double[],double[]#140	0.0	0.0	0.0	i < x.length	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3020	0.0	0.0	0.0	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x>0	_
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair#int#compareTo#?,IntDoublePair#445	0.0	0.0	0.0	Double.compare(value,other.value)>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0	0.0	0.0	log(x,null)>0	_
org.apache.commons.math3.stat.ranking.NaturalRanking#double[]#rank#?,double[]#228	0.0	0.0	0.0	Double.compare(ranks[i].getValue(),ranks[i - 1].getValue()) > 0	_
org.apache.commons.math3.special.Erf#double#erf#?,double#67	0.0	0.0	0.0	!(FastMath.abs(x) > 40)	_
