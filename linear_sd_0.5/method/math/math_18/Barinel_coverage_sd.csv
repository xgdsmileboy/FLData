line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.05882352941176472	1.0	1.0588235294117647	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#751	0.5	0.5	1.0	negcovMax<negminresidualvariance	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#87	1.0	0.0	1.0		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.25	0.33333333333333337	0.5833333333333334	isMinimize ? penalty : -penalty>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1243	0.05882352941176472	0.5	0.5588235294117647	mat.getRowDimension()==n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#582	0.5	0.5	0.5588235294117647	lambda <= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.05882352941176472	0.5	0.5588235294117647	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#559	0.16666666666666663	0.5	0.55	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.25	0.25	0.5	!(i < x.length)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1015	0.33333333333333337	0.25	0.5	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#930	0.25	0.25	0.5	i < x.length	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#320	0.038461538461538436	0.33333333333333337	0.3717948717948718	checkFeasableCount==lambda	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.022727272727272707	0.33333333333333337	0.3555555555555556	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#246	0.33333333333333337	0.0	0.33333333333333337		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#253	0.33333333333333337	0.0	0.33333333333333337		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#969	0.25	0.25	0.3088235294117647	boundaries != null && isRepairMode	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.045454545454545414	0.25	0.2954545454545454	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.04761904761904767	0.16666666666666663	0.2142857142857143	getRowDimension()==column	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.025000000000000022	0.16666666666666663	0.19166666666666665	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.09090909090909094	0.09999999999999998	0.17692307692307685	upper[i]>v	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.011235955056179803	0.125	0.1362359550561798	getColumnDimension()>rowCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#798	0.0625	0.0625	0.125	!(min(diagD) <= 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1339	0.0625	0.0625	0.125	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.0625	0.0625	0.125	indices[indices.length - i - 1]<i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1111	0.0625	0.0625	0.125	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1154	0.0625	0.0625	0.125	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1140	0.0625	0.0625	0.125	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.05882352941176472	0.0625	0.12132352941176472	!(hsig)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1219	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(r < n)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1377	0.05882352941176472	0.05882352941176472	0.11764705882352944	c < popSize	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1172	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(i < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1316	0.05882352941176472	0.05882352941176472	0.11764705882352944	max!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.05882352941176472	0.05882352941176472	0.11764705882352944	step!=end	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1096	0.05882352941176472	0.05882352941176472	0.11764705882352944	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1079	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.05882352941176472	0.05882352941176472	0.11764705882352944	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.05882352941176472	0.05882352941176472	0.11764705882352944	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1280	0.05882352941176472	0.05882352941176472	0.11764705882352944	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1326	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1302	0.05882352941176472	0.05882352941176472	0.11764705882352944	min!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1125	0.05882352941176472	0.05882352941176472	0.11764705882352944	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.052631578947368474	0.05882352941176472	0.11145510835913319	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.05555555555555558	0.05555555555555558	0.11111111111111116	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.04761904761904767	0.050000000000000044	0.09761904761904772	getColumnDimension()==rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.04761904761904767	0.04761904761904767	0.09523809523809534	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.011363636363636354	0.08333333333333337	0.09469696969696972	m.getColumnDimension()>nRows	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.04166666666666663	0.04166666666666663	0.08333333333333326	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.040000000000000036	0.040000000000000036	0.08000000000000007	cachedV == null	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#103	0.03703703703703709	0.04166666666666663	0.07870370370370372	2 * FastMath.PI * x<y	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#527	0.038461538461538436	0.038461538461538436	0.07692307692307687	i < nRows	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.033333333333333326	0.033333333333333326	0.06666666666666665	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.011235955056179803	0.052631578947368474	0.06350114416475983	d[0].length>nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.006802721088435382	0.05555555555555558	0.06235827664399096	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#411	0.006756756756756799	0.05555555555555558	0.06231231231231238	getColumnDimension()>rows	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.02857142857142858	0.03125	0.05982142857142858	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#942	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#369	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#917	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1233	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#866	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.02777777777777779	0.02857142857142858	0.05634920634920637	maximalCount!=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.05555555555555558	0.0	0.05555555555555558		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.018181818181818188	0.03703703703703709	0.05521885521885528	FastMath.abs(p - c)>p	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.006711409395973145	0.04761904761904767	0.05433045701502082	walkInRowOrder(visitor)>0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#247	0.02631578947368418	0.027027027027026973	0.053342816500711154	(mtNext & 0x80000000) | (mt[0] & 0x7fffffff)>=mtNext	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.024390243902439046	0.024390243902439046	0.04764605785592746	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.024390243902439046	0.024390243902439046	0.04764605785592746	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.021739130434782594	0.021739130434782594	0.04347826086956519	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.021276595744680882	0.021276595744680882	0.042553191489361764	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.020408163265306145	0.020408163265306145	0.04081632653061229	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.020408163265306145	0.020408163265306145	0.04040816326530616	!(!matrix.isSquare())	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.040000000000000036	0.0	0.040000000000000036		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#535	0.019607843137254943	0.019607843137254943	0.03921568627450989	getColumnDimension()>row	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#288	0.038461538461538436	0.0	0.038461538461538436		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.03448275862068961	0.0	0.03448275862068961		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.013513513513513487	0.013513513513513487	0.027027027027026973	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.013333333333333308	0.013513513513513487	0.026846846846846795	function.value(point)>0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.02631578947368418	0.0	0.02631578947368418		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.02631578947368418	0.0	0.02631578947368418		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.0117647058823529	0.013157894736842146	0.024922600619195046	relativeThreshold>=0	_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.024390243902439046	0.0	0.024390243902439046		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.012195121951219523	0.012195121951219523	0.024390243902439046	!(f == null)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.023809523809523836	0.0	0.023809523809523836		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.023809523809523836	0.0	0.023809523809523836		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.011904761904761862	0.011904761904761862	0.023809523809523725	absoluteThreshold>0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.023255813953488413	0.0	0.023255813953488413		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.01041666666666663	0.01041666666666663	0.02083333333333326	sinQ(xa,xb)!=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#252	0.020408163265306145	0.0	0.020408163265306145		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.0092592592592593	0.0092592592592593	0.0185185185185186	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.008849557522123908	0.008849557522123908	0.017699115044247815	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.0037037037037036535	0.013513513513513487	0.01721721721721714	b + d<=cosEpsB	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.016393442622950838	0.0	0.016393442622950838		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.01449275362318836	0.0	0.01449275362318836		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.006849315068493178	0.006849315068493178	0.013698630136986356	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.013333333333333308	0.0	0.013333333333333308		_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.006535947712418277	0.006535947712418277	0.013071895424836555	0>=0	_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.012658227848101222	0.0	0.012658227848101222		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.012195121951219523	0.0	0.012195121951219523		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.011494252873563204	0.0	0.011494252873563204		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.005494505494505475	0.005494505494505475	0.01098901098901095	!(data == null || data[0] == null)	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.0037174721189591198	0.00694444444444442	0.01066191656340354	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.0031746031746031633	0.007299270072992692	0.010473873247595855	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.005235602094240788	0.005235602094240788	0.010471204188481575	!(i < nRows)	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.004424778761061954	0.005102040816326481	0.009526819577388435	finalRemB>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0037453183520599342	0.005780346820809301	0.009525665172869235	data[row][column]<0	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.00952380952380949	0.0	0.00952380952380949		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.00952380952380949	0.0	0.00952380952380949		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.00917431192660545	0.0	0.00917431192660545		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.0038610038610038533	0.005076142131979711	0.008937145992983564	subMatrix[0].length==nRows	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.004424778761061954	0.004424778761061954	0.008849557522123908	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.004424778761061954	0.004424778761061954	0.008849557522123908	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.004424778761061954	0.004424778761061954	0.008849557522123908	finalRemA>0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.0034129692832765013	0.005025125628140725	0.008438094911417227	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.004016064257028162	0.0042918454935622075	0.00830790975059037	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0029761904761904656	0.005050505050505083	0.008026695526695549	log(x,null)<0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.0034129692832765013	0.0043290043290042934	0.007741973612280795	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.007633587786259555	0.0	0.007633587786259555		_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.0029673590504450953	0.004347826086956497	0.007315185137401592	a!=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.006711409395973145	0.0	0.006711409395973145		_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0033112582781457123	0.0033222591362126463	0.006633517414358359	data.length>0	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.005780346820809301	0.0	0.005780346820809301		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0028818443804035088	0.0028818443804035088	0.0057636887608070175	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.002873563218390829	0.002873563218390829	0.005747126436781658	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.005555555555555536	0.0	0.005555555555555536		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.005434782608695676	0.0	0.005434782608695676		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.005347593582887722	0.0	0.005347593582887722		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.0052631578947368585	0.0	0.0052631578947368585		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.0019011406844106071	0.0030864197530864335	0.004987560437497041	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.002457002457002422	0.002457002457002422	0.004914004914004844	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0024154589371980784	0.0024154589371980784	0.004830917874396157	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.002409638554216831	0.002409638554216831	0.004819277108433662	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.0018214936247723523	0.002941176470588225	0.004762670095360577	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0011376564277588708	0.003389830508474523	0.004527486936233394	Math.sqrt(a)<=0	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.004385964912280715	0.0	0.004385964912280715		_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0019493177387914784	0.001953125	0.0039024427387914784	!(++count > maximalCount)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.0038910505836575737	0.0	0.0038910505836575737		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.0038610038610038533	0.0	0.0038610038610038533		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.0038610038610038533	0.0	0.0038610038610038533		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.001908396946564861	0.0019120458891013214	0.0038204428356661824	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.0037453183520599342	0.0	0.0037453183520599342		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0017825311942959443	0.0017825311942959443	0.0035650623885918886	!(cb == null)	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0014641288433382416	0.001468428781204123	0.0029325576245423646	!(o == null)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.002624671916010457	0.0	0.002624671916010457		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.002044989775051076	0.0	0.002044989775051076		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	8.539709649871829E-4	0.001179245283018826	0.002033216248006009	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.001984126984126977	0.0	0.001984126984126977		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.001890359168241984	0.0	0.001890359168241984		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.0017857142857142794	0.0	0.0017857142857142794		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#110	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
