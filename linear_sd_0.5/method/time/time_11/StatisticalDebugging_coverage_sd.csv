line	original_score	max_predicate_score	total	predicate	label
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#725	0.0	1.9967897271268056	1.9967897271268056	!(daysToAdd > 0)	_
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#421	0.0	1.7142857142857144	1.7142857142857144	last.getWallOffset()>=size	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1458	0.0	1.6666666666666667	1.6666666666666667	tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	0.0	0.75	0.75	iStandardOffset>0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	0.0	0.75	0.75	iWallOffset>0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	0.0	0.3302325581395349	0.3302325581395349	instant<=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	0.0	0.3250345781466113	0.3250345781466113	next - offset<0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.3250345781466113	0.3250345781466113	iOfYear.next(instant,standardOffset,saveMillis)<=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.3250345781466113	0.3250345781466113	next<0	_
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#166	0.0	0.2583170254403131	0.2583170254403131	minuendYear - subtrahendYear>subtrahendYear	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#62	0.0	0.24706314243759178	0.24706314243759178	FieldUtils.safeAdd(thisYear,years)<=years	_
org.joda.time.PeriodType#PeriodType#yearMonthDay#?#164	0.0	0.2333333333333334	0.2333333333333334	type == null	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#273	0.0	0.22435897435897434	0.22435897435897434	subtrahendInstant - iChronology.getYearMonthMillis(subtrahendYear,subtrahendMonth)>minuendInstant	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	0.0	0.20512820512820512	0.20512820512820512	ImpreciseDateTimeField.this.add(instant,value)<=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#485	0.0	0.19804113614103822	0.19804113614103822	getYearMillis(year)>instant	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#409	0.0	0.1652986776105791	0.1652986776105791	diff < 0	_
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#114	0.0	0.12328308207705191	0.12328308207705191	FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)>minuendInstant	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#176	0.0	0.11552841475573279	0.11552841475573279	getDayOfYear(instant,thisYear)>thisYear	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	0.10815690136221892	0.10815690136221892	getDurationField().add(instant,value)<=0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	0.09259259259259259	0.09259259259259259	FieldUtils.safeAdd(instant,value)<=0	_
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#260	0.0	0.08328513591671485	0.08328513591671485	field.getDifference(endInstant,startInstant)==size	_
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#100	0.0	0.08209851822186624	0.08209851822186624	val1 - val2>val1	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#115	0.0	0.06848739495798319	0.06848739495798319	(monthToUse % iMax) + 1<months	_
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	0.0	0.06559263521288838	0.06559263521288838	iChronology.getYearDifference(minuendInstant,subtrahendInstant)==0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	0.0	0.06342710997442455	0.06342710997442455	ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant)==0	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#64	0.0	0.057984828627030464	0.057984828627030464	val1 + val2<val2	_
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	0.0	0.052568697729988054	0.052568697729988054	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))==0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#364	0.0	0.047619047619047616	0.047619047619047616	tailZone != null	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#DSTZone#buildTailZone#?,String#1144	0.0	0.047619047619047616	0.047619047619047616	startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	0.0	0.047619047619047616	0.047619047619047616	next<0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#boolean#isCachable#?#1690	0.0	0.047619047619047616	0.047619047619047616	iTailZone != null	_
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	0.0	0.04710960960960961	0.04710960960960961	millis<0	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#202	0.0	0.04685123212655917	0.04685123212655917	year / 100>year	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	0.0	0.04613847987885427	0.04613847987885427	!(instant >= 0)	_
org.joda.time.PeriodType#PeriodType#standard#?#103	0.0	0.039371484688867066	0.039371484688867066	type == null	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	0.03686551001129006	0.03686551001129006	FieldUtils.safeAdd(instant,addition)<0	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	0.0	0.036273860752510205	0.036273860752510205	iChronology.getYear(instant)<0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	0.0	0.0357142857142857	0.0357142857142857	iWallOffset - iStandardOffset>0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1089	0.0	0.0357142857142857	0.0357142857142857	it.hasNext()	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1011	0.0	0.0357142857142857	0.0357142857142857	!(iInitialNameKey != null)	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#82	0.0	0.026575420587396634	0.026575420587396634	val1 + val2<val2	_
org.joda.time.Period#int#getYears#?#704	0.0	0.025161887141535614	0.025161887141535614	getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX)>0	_
org.joda.time.Period#int#getMonths#?#713	0.0	0.023425022182786154	0.023425022182786154	getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX)>0	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	0.0	0.014885493102139992	0.014885493102139992	instant + (value - get(instant)) * iUnitMillis<0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	0.0	0.013550229298260795	0.013550229298260795	iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant)<0	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	0.0	0.01203616945098308	0.01203616945098308	instant + (value - get(instant)) * iUnitMillis<0	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	0.0	0.011870845204178537	0.011870845204178537	(DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY)!=0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	0.0	0.010850260850260852	0.010850260850260852	iChronology.setYear(instant,year)<0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#469	0.0	0.010017147999117133	0.010017147999117133	getTotalMillisByYearMonth(year,month)>millis	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#79	0.0	0.00942864080389996	0.00942864080389996	!(instant >= 0)	_
org.joda.time.DateTimeUtils#PeriodType#getPeriodType#?,PeriodType#316	0.0	0.008601048074732286	0.008601048074732286	type == null	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	0.0	0.008035671542780547	0.008035671542780547	millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY<0	_
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	0.0	0.006906369105019056	0.006906369105019056	!(chrono != null && chrono.getZone() == zone)	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	0.0	0.00686024003097174	0.00686024003097174	getYearInfo(year).iFirstDayMillis<0	_
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#278	0.0	0.005555555555555555	0.005555555555555555	!(duration != 0)	_
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	0.0	0.005352672019338685	0.005352672019338685	(int)value==0	_
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	0.0	0.004035198517957138	0.004035198517957138	info == null || info.iYear != year	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	0.0	0.002746959894385542	0.002746959894385542	MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]==0	_
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	0.0	0.0023213501474371023	0.0023213501474371023	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))>0	_
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	0.0	0.0015235501961165677	0.0015235501961165677	(realIndex == -1 ? 0 : period.getValue(realIndex))==0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#120	0.0	0.0013756036983574613	0.0013756036983574613	isLeapYear(year)	_
org.joda.time.base.BasePeriod#int#getValue#?,int#329	0.0	0.00129029656660148	0.00129029656660148	iValues[index]==0	_
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#282	0.0	0.001098301030846322	0.001098301030846322	chrono == null	_
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	0.0	4.140786749482414E-4	4.140786749482414E-4	!(zone instanceof CachedDateTimeZone)	_
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	0.0	1.8670649738610628E-4	1.8670649738610628E-4	!(id == null)	_
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	0.0	1.729932779754844E-4	1.729932779754844E-4	getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset>0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#458	0.0	4.183945953262864E-5	4.183945953262864E-5	getMonthOfYear(millis,year)<year	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#88	0.0	1.4984159602705624E-5	1.4984159602705624E-5	(int)((millis - getYearMillis(year)) >> 10)>year	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#449	0.0	1.4267260263956319E-5	1.4267260263956319E-5	getMonthOfYear(millis,year)<=year	_
org.joda.time.DateTimeZone#DateTimeZone#getDefault#?#134	0.0	4.716805611531139E-6	4.716805611531139E-6	!(zone == null)	_
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#217	0.0	3.31424329197156E-6	3.31424329197156E-6	!((value < lowerBound) || (value > upperBound))	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	(1970L * MILLIS_PER_YEAR) / 2>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	iSaveMillis>0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	0.0	0.0	0.0	1!=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	0.0	0.0	0.0	Long.MAX_VALUE>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	0.0	0.0	0.0	iRecurrence.getSaveMillis()!=0	_
org.joda.time.tz.DateTimeZoneBuilder#RuleSet#getLastRuleSet#?#320	0.0	0.0	0.0	!(iRuleSets.size() == 0)	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	MILLIS_PER_YEAR / 2>0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addRecurringSavings#?,String,int,int,int,char,int,int,int,boolean,int#309	0.0	0.0	0.0	fromYear <= toYear	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28)>=0	_
org.joda.time.base.AbstractPeriod#int#size#?#56	0.0	0.0	0.0	getPeriodType().size()>=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#addRule#?,Rule#994	0.0	0.0	0.0	!iRules.contains(rule)	_
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	0.0	0.0	0.0	0>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#boolean#isTransitionFrom#?,Transition#929	0.0	0.0	0.0	other == null	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	MIN_YEAR<=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	0.0	0.0	0.0	iChronology.getDaysInMonthMaxForSet(instant,value)!=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	0.0	0.0	0.0	iUnitMillis>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	0.0	0.0	0.0	iMillis<=0	_
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	0.0	0.0	0.0	System.currentTimeMillis()!=0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	0.0	0.0	0.0	iRange - 1!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	0.0	0.0	0.0	iToYear>=0	_
org.joda.time.PeriodType#int#size#?#617	0.0	0.0	0.0	iTypes.length>0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	0.0	0.0	0.0	iChronology.getDayOfWeek(instant)!=0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	MAX_YEAR>=0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addCutover#?,int,char,int,int,int,boolean,int#252	0.0	0.0	0.0	!(iRuleSets.size() > 0)	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	0.0	0.0	0.0	!(mode != 'u' && mode != 'w' && mode != 's')	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	0.0	0.0	0.0	iChronology.getDayOfMonth(instant)>=0	_
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	0.0	0.0	0.0	cMillisProvider.getMillis()>0	_
