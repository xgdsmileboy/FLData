line	original_score	max_predicate_score	total	predicate	label
org.joda.time.DateTimeUtils#PeriodType#getPeriodType#?,PeriodType#316	0.0	0.0	0.0	type == null	_
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long#278	0.0	0.0	0.0	!(duration != 0)	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	0.0	0.0	0.0	instant!=0	_
org.joda.time.DateTimeZone#DateTimeZone#getDefault#?#134	0.0	0.0	0.0	!(zone == null)	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	0.0	0.0	0.0	difference>0	_
org.joda.time.PeriodType#PeriodType#yearMonthDay#?#164	0.0	0.0	0.0	type == null	_
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	0.0	0.0	0.0	getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset!=0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZone#toDateTimeZone#?,String,boolean#333	0.0	0.0	0.0	!(id == null)	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	(1970L * MILLIS_PER_YEAR) / 2>=0	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#400	0.0	0.0	0.0	(instant >> 1) + getApproxMillisAtEpochDividedByTwo()!=instant	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	iSaveMillis>0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	0.0	0.0	0.0	iStandardOffset>0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	0.0	0.0	0.0	1!=0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	0.0	0.0	0.0	millis!=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	0.0	0.0	0.0	Long.MAX_VALUE>=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#549	0.0	0.0	0.0	iMode == 'w'	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	0.0	0.0	0.0	iWallOffset - iStandardOffset<=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	0.0	0.0	0.0	iRecurrence.getSaveMillis()!=0	_
org.joda.time.tz.DateTimeZoneBuilder#RuleSet#getLastRuleSet#?#320	0.0	0.0	0.0	!(iRuleSets.size() == 0)	_
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#88	0.0	0.0	0.0	!(minuendInstant < subtrahendInstant)	_
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#157	0.0	0.0	0.0	!(isLeapYear(subtrahendYear))	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	0.0	0.0	0.0	(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1>0	_
org.joda.time.field.FieldUtils#void#verifyValueBounds#?,DateTimeField,int,int,int#217	0.0	0.0	0.0	!((value < lowerBound) || (value > upperBound))	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	0.0	0.0	getDurationField().add(instant,value)!=0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	0.0	0.0	0.0	ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant)<=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#DSTZone#buildTailZone#?,String#1144	0.0	0.0	0.0	startRule.getToYear() == Integer.MAX_VALUE && endRule.getToYear() == Integer.MAX_VALUE	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	MILLIS_PER_YEAR / 2>0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addRecurringSavings#?,String,int,int,int,char,int,int,int,boolean,int#309	0.0	0.0	0.0	fromYear <= toYear	_
org.joda.time.PeriodType#PeriodType#standard#?#103	0.0	0.0	0.0	type == null	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	0.0	0.0	0.0	iChronology.getYear(instant)>0	_
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	0.0	0.0	0.0	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))!=0	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	0.0	0.0	0.0	instant + (value - get(instant)) * iUnitMillis!=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#534	0.0	0.0	0.0	!(instant >= 0)	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#PrecalculatedZone#create#?,String,boolean,ArrayList<Transition>,DSTZone#1419	0.0	0.0	0.0	j < zoneStrings.length	_
org.joda.time.DateTimeZone#?#DateTimeZone#?,String#690	0.0	0.0	0.0	!(id == null)	_
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	0.0	0.0	0.0	diff!=0	_
org.joda.time.base.AbstractPeriod#int#size#?#56	0.0	0.0	0.0	getPeriodType().size()>=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#void#addRule#?,Rule#994	0.0	0.0	0.0	!iRules.contains(rule)	_
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	0.0	0.0	0.0	0>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#449	0.0	0.0	0.0	getMonthOfYear(millis,year)<=year	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#boolean#isTransitionFrom#?,Transition#929	0.0	0.0	0.0	other == null	_
org.joda.time.tz.DateTimeZoneBuilder#boolean#addTransition#?,ArrayList<Transition>,Transition#411	0.0	0.0	0.0	!(!tr.isTransitionFrom(last))	_
org.joda.time.tz.CachedDateTimeZone#CachedDateTimeZone#forZone#?,DateTimeZone#68	0.0	0.0	0.0	!(zone instanceof CachedDateTimeZone)	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	0.0	0.0	0.0	sum>=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	0.0	0.0	0.0	instant + (value - get(instant)) * iUnitMillis<0	_
org.joda.time.field.FieldUtils#int#safeToInt#?,long#187	0.0	0.0	0.0	Integer.MIN_VALUE <= value && value <= Integer.MAX_VALUE	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	0.0	0.0	0.0	(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1!=0	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	MIN_YEAR<=0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#92	0.0	0.0	0.0	!(months == 0)	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	0.0	0.0	0.0	instant<=0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	0.0	0.0	0.0	iWallOffset>0	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	0.0	0.0	FieldUtils.safeAdd(instant,addition)<=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	0.0	0.0	0.0	iChronology.getDaysInMonthMaxForSet(instant,value)!=0	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	0.0	0.0	0.0	(int)(instant % DateTimeConstants.MILLIS_PER_DAY)<=0	_
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#114	0.0	0.0	0.0	FieldUtils.safeSubtract(minuendInstant,subtrahendInstant)>subtrahendInstant	_
org.joda.time.chrono.BasicChronology#YearInfo#getYearInfo#?,int#739	0.0	0.0	0.0	info == null || info.iYear != year	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	0.0	0.0	0.0	ImpreciseDateTimeField.this.add(instant,value)<=0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	0.0	0.0	FieldUtils.safeAdd(instant,value)<=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	0.0	0.0	0.0	iUnitMillis>=0	_
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#674	0.0	0.0	0.0	iIndices[index]==index	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	0.0	0.0	0.0	iMillis<=0	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#209	0.0	0.0	0.0	((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1>=year	_
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	0.0	0.0	0.0	System.currentTimeMillis()!=0	_
org.joda.time.Period#int#getMonths#?#713	0.0	0.0	0.0	getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX)>0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	0.0	0.0	0.0	iRange - 1!=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#nextTransition#?,long,int#1092	0.0	0.0	0.0	!(next <= instant)	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#300	0.0	0.0	0.0	iChronology.getYear(instant)>month	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#84	0.0	0.0	0.0	!((val1 ^ sum) < 0 && (val1 ^ val2) >= 0)	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	0.0	0.0	0.0	getYearInfo(year).iFirstDayMillis==0	_
org.joda.time.base.BasePeriod#int#getValue#?,int#329	0.0	0.0	0.0	iValues[index]!=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#720	0.0	0.0	0.0	!(iAdvance)	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	0.0	0.0	0.0	iToYear>=0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	0.0	0.0	0.0	millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY<=0	_
org.joda.time.chrono.ISOChronology#ISOChronology#getInstance#?,DateTimeZone#101	0.0	0.0	0.0	!(chrono != null && chrono.getZone() == zone)	_
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	0.0	0.0	0.0	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))!=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	0.0	0.0	0.0	MIN_DAYS_PER_MONTH_ARRAY[month - 1]>0	_
org.joda.time.PeriodType#int#size#?#617	0.0	0.0	0.0	iTypes.length>0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	0.0	0.0	0.0	next<0	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#58	0.0	0.0	0.0	years == 0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	0.0	0.0	0.0	iChronology.getDayOfWeek(instant)!=0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	MAX_YEAR>=0	_
org.joda.time.DateTimeUtils#Chronology#getChronology#?,Chronology#282	0.0	0.0	0.0	chrono == null	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addCutover#?,int,char,int,int,int,boolean,int#252	0.0	0.0	0.0	!(iRuleSets.size() > 0)	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#?#OfYear#?,char,int,int,int,boolean,int#505	0.0	0.0	0.0	!(mode != 'u' && mode != 'w' && mode != 's')	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.0	0.0	iOfYear.next(instant,standardOffset,saveMillis)<=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#Transition#firstTransition#?,long#1029	0.0	0.0	0.0	(next=nextTransition(millis,saveMillis)) != null	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	0.0	0.0	0.0	iChronology.getDayOfMonth(instant)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	0.0	0.0	0.0	getDayOfMonth(millis,year,month)!=0	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	0.0	0.0	0.0	iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange)>0	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	0.0	0.0	0.0	MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]<=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.0	0.0	next<0	_
org.joda.time.chrono.BaseChronology#int[]#get#?,ReadablePeriod,long,long#261	0.0	0.0	0.0	field.add(startInstant,value)<endInstant	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#boolean#isCachable#?#1690	0.0	0.0	0.0	iTailZone != null	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#88	0.0	0.0	0.0	(int)((millis - getYearMillis(year)) >> 10)!=year	_
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	0.0	0.0	0.0	cMillisProvider.getMillis()>0	_
org.joda.time.Period#int#getYears#?#704	0.0	0.0	0.0	getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX)>=0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	0.0	0.0	0.0	iChronology.setYear(instant,year)<=0	_
