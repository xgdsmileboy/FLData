line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#cluster#?,Collection<T>,int,int#99	0.9990974729241877	1.0	1.9986468200270635	(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations<k	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#324	0.9986468200270636	0.9995485327313771	1.9981953527584406	point.distanceFrom(c.getCenter())==minDistance	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#176	0.9990974729241877	0.9990974729241877	1.9981949458483754	!(i < pointSet.size())	GT
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#85	0.9986468200270636	0.9986468200270636	1.9968433935166938	point[i] != otherPoint[i]	_
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1875	0.9977467327625057	0.9981965734896302	1.995943306252136	p1[i] - p2[i]==i	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random#69	0.9990974729241877	0.0	0.9990974729241877		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#void#assignPointsToClusters#?,Collection<Cluster<T>>,Collection<T>#147	0.9986468200270636	0.0	0.9986468200270636		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random,EmptyClusterStrategy#80	0.9986468200270636	0.0	0.9986468200270636		_
org.apache.commons.math.stat.clustering.Cluster#void#addPoint#?,T#55	0.9986468200270636	0.0	0.9986468200270636		_
org.apache.commons.math.stat.clustering.Cluster#T#getCenter#?#71	0.9986468200270636	0.0	0.9986468200270636		_
org.apache.commons.math.stat.clustering.Cluster#?#Cluster#?,T#47	0.9986468200270636	0.0	0.9986468200270636		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	0.9981965734896302	0.0	0.9981965734896302		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#?#EuclideanIntegerPoint#?,int[]#44	0.9968482665466006	0.0	0.9968482665466006		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#int[]#getPoint#?#52	0.9968482665466006	0.0	0.9968482665466006		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.821826280623608	0.0	0.821826280623608		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1914	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1037	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1717	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1154	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1058	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1000	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1213	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	0.0	0.0	0.0		_
