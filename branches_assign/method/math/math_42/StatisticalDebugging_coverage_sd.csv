line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.linear.SimplexTableau#RealPointValuePair#getSolution#?#404	0.0	0.09473684210526317	0.09473684210526317	columnLabels.indexOf("x" + i)>=negativeVarColumn	GT
org.apache.commons.math.optimization.linear.SimplexTableau#RealMatrix#createTableau#?,boolean#198	0.0	0.09259259259259259	0.09259259259259259	!(!restrictToNonNegative)	_
org.apache.commons.math.optimization.linear.SimplexTableau#void#initializeColumnLabels#?#161	0.0	0.09259259259259259	0.09259259259259259	!(!restrictToNonNegative)	_
org.apache.commons.math.optimization.linear.SimplexSolver#void#doIteration#?,SimplexTableau#152	0.0	0.08658008658008659	0.08658008658008659	tableau.getEntry(i,pivotCol)==pivotVal	_
org.apache.commons.math.optimization.linear.SimplexTableau#void#dropPhase1Objective#?#328	0.0	0.022408963585434177	0.022408963585434177	!(getNumObjectiveFunctions() == 1)	_
org.apache.commons.math.util.Precision#boolean#equals#?,double,double,int#284	0.0	0.019806813822924294	0.019806813822924294	yInt < 0	_
org.apache.commons.math.optimization.linear.SimplexSolver#void#solvePhase1#?,SimplexTableau#178	0.0	0.019736842105263164	0.019736842105263164	!(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0d,epsilon))	_
org.apache.commons.math.linear.ArrayRealVector#RealVector#mapMultiplyToSelf#?,double#374	0.0	0.014297729184188398	0.014297729184188398	data[i] * d==d	_
org.apache.commons.math.util.Precision#int#compareTo#?,double,double,int#91	0.0	0.013043478260869575	0.013043478260869575	equals(x,y,maxUlps)	_
org.apache.commons.math.optimization.linear.SimplexTableau#Integer#getBasicRow#?,int#316	0.0	0.010025062656641603	0.010025062656641603	!(!Precision.equals(entry,0d,maxUlps))	_
org.apache.commons.math.optimization.linear.SimplexTableau#boolean#isOptimal#?#384	0.0	0.0082815734989648	0.0082815734989648	Precision.compareTo(entry,0d,epsilon) < 0	_
org.apache.commons.math.util.Precision#int#compareTo#?,double,double,double#67	0.0	0.006956521739130431	0.006956521739130431	x < y	_
org.apache.commons.math.optimization.linear.SimplexTableau#LinearConstraint#normalize#?,LinearConstraint#260	0.0	0.005925925925925932	0.005925925925925932	!(constraint.getValue() < 0)	_
org.apache.commons.math.optimization.linear.SimplexTableau#?#SimplexTableau#?,LinearObjectiveFunction,Collection<LinearConstraint>,GoalType,boolean,double,int#140	0.0	0.0028490028490028574	0.0028490028490028574	f.getCoefficients().getDimension() + (restrictToNonNegative ? 0 : 1)<maxUlps	_
org.apache.commons.math.linear.ArrayRealVector#void#checkVectorDimensions#?,int#762	0.0	9.746588693957114E-4	9.746588693957114E-4	!(data.length != n)	_
org.apache.commons.math.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#54	0.0	1.4413791115339483E-5	1.4413791115339483E-5	!(rowDimension < 1)	_
org.apache.commons.math.util.MathUtils#void#checkNotNull#?,Object#330	0.0	1.137501137501171E-5	1.137501137501171E-5	!(o == null)	_
org.apache.commons.math.linear.AbstractRealMatrix#void#setRowVector#?,int,RealVector#484	0.0	0.0	0.0	getColumnDimension()>=row	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#447	0.0	0.0	0.0	v instanceof ArrayRealVector	_
org.apache.commons.math.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#275	0.0	0.0	0.0	!(nCols == 0)	_
org.apache.commons.math.optimization.linear.AbstractLinearOptimizer#void#incrementIterationsCounter#?#98	0.0	0.0	0.0	!(++iterations > maxIterations)	_
org.apache.commons.math.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#394	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math.optimization.linear.SimplexSolver#Integer#getPivotRow#?,SimplexTableau,int#93	0.0	0.0	0.0	tableau.getEntry(i,tableau.getWidth() - 1)!=minRatio	_
org.apache.commons.math.optimization.linear.SimplexTableau#int#getConstraintTypeCounts#?,Relationship#285	0.0	0.0	0.0	constraint.getRelationship() == relationship	_
org.apache.commons.math.optimization.linear.SimplexSolver#Integer#getPivotColumn#?,SimplexTableau#74	0.0	0.0	0.0	Precision.compareTo(entry,minValue,maxUlps) < 0	_
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#102	0.0	0.0	0.0	!(d == null)	_
org.apache.commons.math.linear.AbstractRealMatrix#double[]#getRow#?,int#515	0.0	0.0	0.0	getColumnDimension()>row	_
org.apache.commons.math.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#379	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math.linear.ArrayRealVector#ArrayRealVector#subtract#?,RealVector#315	0.0	0.0	0.0	v instanceof ArrayRealVector	_
org.apache.commons.math.optimization.linear.SimplexTableau#void#divideRow#?,int,double#437	0.0	0.0	0.0	!(j < getWidth())	_
