line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1072	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#237	0.0	0.0	0.0	mt[k + 1]<bits	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1327	0.0	0.0	0.0	i < indices.length	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.0	0.0	0.0	i < nSum	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1086	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.0	0.0	0.0	isSymmetric(matrix,false)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#112	0.0	0.0	0.0	!(i < dim)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#697	0.0	0.0	0.0	ccov1 + ccovmu > 0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.0	0.0	0.0	getRowDimension()<=column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1056	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#934	0.0	0.0	0.0	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1222	0.0	0.0	0.0	r < n * rd	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#768	0.0	0.0	0.0	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1.	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#102	0.0	0.0	0.0	!(copyArray)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1215	0.0	0.0	0.0	(bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L))!=x	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#131	0.0	0.0	0.0	!(goalType == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.0	0.0	0.0	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.0	0.0	0.0	!(yInt < 0)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#99	0.0	0.0	0.0	!(Double.isNaN(nextGaussian))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#806	0.0	0.0	0.0	vals[i - 1]<=val	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1353	0.0	0.0	0.0	c < popSize	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1661	0.0	0.0	0.0	p * x2 * x!=x2	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.0	0.0	0.0	i < nCols	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.0	0.0	0.0	!(hsig)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#254	0.0	0.0	0.0	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#947	0.0	0.0	0.0	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#991	0.0	0.0	0.0	i < x.length	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2227	0.0	0.0	0.0	!(xa > 3294198.0)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#409	0.0	0.0	0.0	!(i < rows)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.0	0.0	0.0	!(columnData == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.0	0.0	0.0	lambda==checkFeasableCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.0	0.0	0.0	row < rowCount	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.0	0.0	0.0	remA > 0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.0	0.0	0.0	i < m1.getRowDimension()	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.0	0.0	0.0	cachedQt == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#102	0.0	0.0	0.0	col < columnCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1256	0.0	0.0	0.0	max < e	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.0	0.0	0.0	!(i < diagonal.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1301	0.0	0.0	0.0	!(r < m.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1315	0.0	0.0	0.0	i < indices.length	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.0	0.0	0.0	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.0	0.0	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.0	0.0	0.0	!(columnDimension < 1)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1041	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.0	0.0	0.0	!(i < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1132	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#116	0.0	0.0	0.0	col < columnCount	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#612	0.0	0.0	0.0	!(m != j)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.0	0.0	0.0	cachedV == null	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#825	0.0	0.0	0.0	dis[i].index>=i	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1697	0.0	0.0	0.0	SINE_TABLE_B[idx]<xa	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.0	0.0	0.0	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	0.0	0.0	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2272	0.0	0.0	0.0	!(x < 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1117	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1270	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1819	0.0	0.0	0.0	pi2a - xa>xa	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.0	0.0	0.0	equals(x,y,eps)	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3510	0.0	0.0	0.0	!(a < b)	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1673	0.0	0.0	0.0	x * x<x	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	0.0	0.0	!(o == null)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#909	0.0	0.0	0.0	i < x.length	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#289	0.0	0.0	0.0	!(subMatrix[i].length != nCols)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1102	0.0	0.0	0.0	c < cols.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1288	0.0	0.0	0.0	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#591	0.0	0.0	0.0	sumw * sumw / sumwq>=sumw	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.0	0.0	0.0	!(row < rowCount)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1010	0.0	0.0	0.0	i < x.length	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#523	0.0	0.0	0.0	!(hasInfiniteBounds)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1239	0.0	0.0	0.0	start==step	_
