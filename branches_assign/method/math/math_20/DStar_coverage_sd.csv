line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#729	Infinity	Infinity	Infinity	negccov > negcovMax	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1220	0.06666666666666667	Infinity	Infinity	mat.getColumnDimension()==m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#806	0.06666666666666667	Infinity	Infinity	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#240	Infinity	0.0	Infinity		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.043478260869565216	Infinity	Infinity	lambda==checkFeasableCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#247	Infinity	0.0	Infinity		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#591	Infinity	Infinity	Infinity	sumw * sumw / sumwq>=sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#538	0.3333333333333333	Infinity	Infinity	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#994	1.0	1.0	1.5	x[i] > 1.0	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.023809523809523808	1.0	1.0232558139534884	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#934	0.5	0.5	1.0	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#909	0.5	0.5	1.0	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1010	0.5	0.5	1.0	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#947	0.5	0.5	0.5666666666666667	boundaries != null && isRepairMode	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.05263157894736842	0.25	0.3026315789473684	getRowDimension()<=column	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.02631578947368421	0.25	0.2763157894736842	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#112	0.125	0.125	0.225	!(i < dim)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#768	0.07142857142857142	0.07142857142857142	0.14285714285714285	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1.	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1315	0.07142857142857142	0.07142857142857142	0.14285714285714285	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1327	0.07142857142857142	0.07142857142857142	0.14285714285714285	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1086	0.07142857142857142	0.07142857142857142	0.14285714285714285	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1132	0.07142857142857142	0.07142857142857142	0.14285714285714285	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1117	0.07142857142857142	0.07142857142857142	0.14285714285714285	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.06666666666666667	0.07142857142857142	0.1380952380952381	!(hsig)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.06666666666666667	0.06666666666666667	0.13333333333333333	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1353	0.06666666666666667	0.06666666666666667	0.13333333333333333	c < popSize	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(i < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1288	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1239	0.06666666666666667	0.06666666666666667	0.13333333333333333	start==step	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1072	0.06666666666666667	0.06666666666666667	0.13333333333333333	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1056	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.06666666666666667	0.06666666666666667	0.13333333333333333	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.06666666666666667	0.06666666666666667	0.13333333333333333	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.06666666666666667	0.06666666666666667	0.13333333333333333	i < m1.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1256	0.06666666666666667	0.06666666666666667	0.13333333333333333	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1301	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(r < m.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1041	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#825	0.06666666666666667	0.06666666666666667	0.13333333333333333	dis[i].index>=i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1270	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1102	0.06666666666666667	0.06666666666666667	0.13333333333333333	c < cols.length	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.0625	0.0625	0.125	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#116	0.058823529411764705	0.058823529411764705	0.11764705882352941	col < columnCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#254	0.05555555555555555	0.05555555555555555	0.1111111111111111	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.05263157894736842	0.05263157894736842	0.10526315789473684	!(row < rowCount)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.05263157894736842	0.05263157894736842	0.10526315789473684	row < rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.047619047619047616	0.047619047619047616	0.09523809523809523	!(i < diagonal.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.045454545454545456	0.045454545454545456	0.09090909090909091	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.043478260869565216	0.043478260869565216	0.08695652173913043	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#99	0.04	0.04	0.08	!(Double.isNaN(nextGaussian))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#921	0.06666666666666667	0.0	0.06666666666666667		GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#851	0.06666666666666667	0.0	0.06666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#492	0.06666666666666667	0.0	0.06666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#897	0.06666666666666667	0.0	0.06666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#982	0.06666666666666667	0.0	0.06666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1209	0.06666666666666667	0.0	0.06666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#845	0.06666666666666667	0.0	0.06666666666666667		_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.030303030303030304	0.03333333333333333	0.06363636363636363	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.0625	0.0	0.0625		_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#237	0.027777777777777776	0.027777777777777776	0.05555555555555555	mt[k + 1]<bits	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.02564102564102564	0.02564102564102564	0.05064102564102564	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.02564102564102564	0.02564102564102564	0.05064102564102564	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.022727272727272728	0.022727272727272728	0.045454545454545456	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.022222222222222223	0.022222222222222223	0.044444444444444446	cachedQt == null	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#548	0.043478260869565216	0.0	0.043478260869565216		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#282	0.043478260869565216	0.0	0.043478260869565216		_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.021739130434782608	0.021739130434782608	0.04257246376811594	equals(x,y,eps)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.02127659574468085	0.02127659574468085	0.04210992907801418	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.02040816326530612	0.02040816326530612	0.04081632653061224	i < nCols	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.038461538461538464	0.0	0.038461538461538464		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.03571428571428571	0.0	0.03571428571428571		_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.029411764705882353	0.0	0.029411764705882353		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.02857142857142857	0.0	0.02857142857142857		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.02857142857142857	0.0	0.02857142857142857		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.02564102564102564	0.0	0.02564102564102564		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#131	0.012658227848101266	0.012658227848101266	0.02531645569620253	!(goalType == null)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.025	0.0	0.025		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.025	0.0	0.025		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.025	0.0	0.025		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.012048192771084338	0.012048192771084338	0.024096385542168676	i < nSum	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#102	0.011904761904761904	0.011904761904761904	0.023809523809523808	col < columnCount	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.011764705882352941	0.011764705882352941	0.023529411764705882	r < nRows	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.02127659574468085	0.0	0.02127659574468085		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.009708737864077669	0.009708737864077669	0.019417475728155338	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#80	0.018867924528301886	0.0	0.018867924528301886		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.009259259259259259	0.009259259259259259	0.018518518518518517	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.01694915254237288	0.0	0.01694915254237288		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.015151515151515152	0.0	0.015151515151515152		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2294	0.010526315789473684	0.007194244604316547	0.01418725159732354	cw.getRemA()<x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#409	0.006944444444444444	0.006944444444444444	0.013888888888888888	!(i < rows)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.013888888888888888	0.0	0.013888888888888888		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1798	0.0037313432835820895	0.010101010101010102	0.013832353384592192	-(c - a - t)>t	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#95	0.0136986301369863	0.0	0.0136986301369863		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.0136986301369863	0.0	0.0136986301369863		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.012987012987012988	0.0	0.012987012987012988		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.012658227848101266	0.0	0.012658227848101266		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.012195121951219513	0.0	0.012195121951219513		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.012048192771084338	0.0	0.012048192771084338		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.011904761904761904	0.0	0.011904761904761904		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.005649717514124294	0.005649717514124294	0.011299435028248588	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.005376344086021506	0.005376344086021506	0.010752688172043012	!(i < nRows)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.003194888178913738	0.007518796992481203	0.01071368517139494	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.009708737864077669	0.0	0.009708737864077669		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.009708737864077669	0.0	0.009708737864077669		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.003745318352059925	0.005714285714285714	0.009459604066345639	pi2b - xb<xb	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.009433962264150943	0.0	0.009433962264150943		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2240	0.006896551724137931	0.004672897196261682	0.009281192127137258	cw.getRemB()<=x	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.004464285714285714	0.004464285714285714	0.008928571428571428	remA > 0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.003436426116838488	0.005050505050505051	0.008486931167343538	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#289	0.003937007874015748	0.003937007874015748	0.007874015748031496	!(subMatrix[i].length != nCols)	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.003436426116838488	0.004347826086956522	0.00778425220379501	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.007751937984496124	0.0	0.007751937984496124		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#598	0.006993006993006993	0.0	0.006993006993006993		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.006896551724137931	0.0	0.006896551724137931		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.006896551724137931	0.0	0.006896551724137931		_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.006711409395973154	0.0	0.006711409395973154		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.005847953216374269	0.0	0.005847953216374269		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.005714285714285714	0.0	0.005714285714285714		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#252	0.00558659217877095	0.0	0.00558659217877095		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.00546448087431694	0.0	0.00546448087431694		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.0053475935828877	0.0	0.0053475935828877		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.0019157088122605363	0.003115264797507788	0.005030973609768325	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.0024875621890547263	0.0024875621890547263	0.004975124378109453	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0024449877750611247	0.0024449877750611247	0.004889975550122249	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0024390243902439024	0.0024390243902439024	0.004878048780487805	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3510	0.0029940119760479044	0.002967359050445104	0.004772413202069652	!(a < b)	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.004464285714285714	0.0	0.004464285714285714		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.004464285714285714	0.0	0.004464285714285714		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.004464285714285714	0.0	0.004464285714285714		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#47	0.004424778761061947	0.0	0.004424778761061947		_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.0040650406504065045	0.0	0.0040650406504065045		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.003968253968253968	0.0	0.003968253968253968		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#543	0.003937007874015748	0.0	0.003937007874015748		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#310	0.003937007874015748	0.0	0.003937007874015748		_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0019569471624266144	0.00196078431372549	0.0039177314761521045	!(++count > maximalCount)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.003816793893129771	0.0	0.003816793893129771		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#303	0.003816793893129771	0.0	0.003816793893129771		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0017921146953405018	0.0017921146953405018	0.0035842293906810036	!(cb == null)	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0033444816053511705	0.0	0.0033444816053511705		_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0029940119760479044	0.0	0.0029940119760479044		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0014749262536873156	0.0014792899408284023	0.0029542161945157177	!(o == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.0029239766081871343	0.0	0.0029239766081871343		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.0029154518950437317	0.0	0.0029154518950437317		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#389	0.0026595744680851063	0.0	0.0026595744680851063		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.00205761316872428	0.0	0.00205761316872428		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.001996007984031936	0.0	0.001996007984031936		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.0019305019305019305	0.0	0.0019305019305019305		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.0019011406844106464	0.0	0.0019011406844106464		_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.001834862385321101	0.0	0.001834862385321101		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.0017953321364452424	0.0	0.0017953321364452424		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.001145475372279496	0.0	0.001145475372279496		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	8.561643835616438E-4	0.0	8.561643835616438E-4		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#56	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#108	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#154	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
