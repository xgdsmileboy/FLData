line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#118	1.0	1.0	2.0	gamma!=khi	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#787	1.0	1.0	2.0	max(diagD) / 1e14 - min(diagD)<negccov	_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#180	1.0	1.0	2.0	xC + GOLD * (xC - xB)!=fB	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1110	1.0	1.0	2.0	i < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	0.9090909090909091	1.0	1.9090909090909092	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#600	0.9090909090909091	1.0	1.9090909090909092	w * w>w	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	0.9090909090909091	1.0	1.9090909090909092	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1230	0.9090909090909091	1.0	1.9090909090909092	m.getEntry(r,c)>=min	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#805	0.9090909090909091	1.0	1.9090909090909092	vals[i - 1]==val	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#710	0.9047619047619048	1.0	1.9047619047619047	hsig ? 0 : ccov1 * cc * (2 - cc)>negccov	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1246	0.9090909090909091	0.9090909090909091	1.8181818181818181	max < m[r]	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#998	0.9090909090909091	0.9090909090909091	1.8181818181818181	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	0.9090909090909091	0.9090909090909091	1.8181818181818181	e * e<=e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	0.9090909090909091	0.9090909090909091	1.8181818181818181	i < m1.getRowDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1028	0.9090909090909091	0.9090909090909091	1.8181818181818181	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(r < n)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(c < popSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#967	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(i < x.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1259	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(r < m.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#824	0.9090909090909091	0.9090909090909091	1.8181818181818181	dis[i].index>=i	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1197	0.9090909090909091	0.9090909090909091	1.8181818181818181	start<=step	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	0.9090909090909091	0.9090909090909091	1.8181818181818181	hsig	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(r < n)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1057	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	0.9090909090909091	0.9090909090909091	1.8181818181818181	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#903	0.9090909090909091	0.9090909090909091	1.8181818181818181	isRepairMode	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#984	0.9090909090909091	0.9090909090909091	1.8181818181818181	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1073	0.9047619047619048	0.9047619047619048	1.8095238095238095	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	0.9047619047619048	0.9047619047619048	1.8095238095238095	!(i < indices.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1086	0.9047619047619048	0.9047619047619048	1.8095238095238095	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	0.9047619047619048	0.9047619047619048	1.8095238095238095	indices[indices.length - i - 1]>i	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	0.9047619047619048	0.9047619047619048	1.8095238095238095	r < m.getRowDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#561	0.8695652173913043	0.9090909090909091	1.7786561264822134	!(inputSigma[i] > uB[i] - lB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#539	0.8333333333333334	0.8333333333333334	1.6666666666666667	!(data instanceof PopulationSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#255	0.5	1.0	1.5	!(t < 0.0)	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	0.7407407407407407	0.7407407407407407	1.4814814814814814	!(size <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	0.7142857142857143	0.76	1.4742857142857142	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.6666666666666667	0.8	1.4666666666666668	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	0.7407407407407407	0.7407407407407407	1.455026455026455	!(s[i] < 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.6666666666666667	0.6666666666666667	1.3333333333333335	!(points.length != simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#288	0.25	1.0	1.25	p[i] + nD[i]==optimum	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#130	0.19999999999999996	1.0	1.2	rel>=lineRel	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#206	0.5714285714285714	0.6	1.1714285714285713	xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j])>coeff	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#268	0.19999999999999996	1.0	1.0625	w==e	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[]#101	1.0	0.0	1.0		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#338	0.4878048780487805	0.4878048780487805	0.975609756097561	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#116	0.47619047619047616	0.47619047619047616	0.9523809523809523	!(col < columnCount)	_
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	0.9375	0.0	0.9375		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.4545454545454546	0.4545454545454546	0.9090909090909092	getRowDimension()>=column	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.4545454545454546	0.4545454545454546	0.9090909090909092	row < rowCount	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#894	0.9090909090909091	0.0	0.9090909090909091		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#zeros#?,int,int#1167	0.9090909090909091	0.0	0.9090909090909091		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#936	0.9090909090909091	0.0	0.9090909090909091		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#845	0.9090909090909091	0.0	0.9090909090909091		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#doOptimize#?#514	0.9090909090909091	0.0	0.9090909090909091		GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	0.9090909090909091	0.0	0.9090909090909091		_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#230	0.4418604651162791	0.4418604651162791	0.8837209302325582	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#642	0.4193548387096774	0.5833333333333333	0.8778801843317972	1.0 / t>=t	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#256	0.3278688524590164	0.5294117647058824	0.8572806171648988	y >>> 11<=bits	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#149	0.41666666666666663	0.4347826086956522	0.8514492753623188	!(v > hi)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#double[]#getSigma#?#304	0.8333333333333334	0.0	0.8333333333333334		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	0.8333333333333334	0.0	0.8333333333333334		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.4	0.4	0.8	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#199	0.39583333333333337	0.39583333333333337	0.7916666666666667	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.3877551020408163	0.3877551020408163	0.7755102040816326	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#183	0.3846153846153846	0.3870967741935484	0.771712158808933	mt[N - 1]<i	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#151	0.3846153846153846	0.3846153846153846	0.7692307692307692	(int)longMT>=seed	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#PointValuePair#optimize#?,OptimizationData#363	0.7407407407407407	0.0	0.7407407407407407		_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	0.31666666666666665	0.4130434782608695	0.7297101449275362	beta * hK[i]<beta	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#224	0.30645161290322576	0.4222222222222223	0.728673835125448	hIJ * hK[j]>xNormSqr	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.36363636363636365	0.36363636363636365	0.7272727272727273	sigma<khi	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	0.36363636363636365	0.36363636363636365	0.7272727272727273	!(steps == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#250	0.2962962962962963	0.4	0.6962962962962963	!(Double.isNaN(vertex.getValue()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	0.3389830508474576	0.3571428571428571	0.6961259079903147	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.34545454545454546	0.34545454545454546	0.6909090909090909	!(i < diagonal.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.33333333333333337	0.33333333333333337	0.6666666666666667	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#104	0.3278688524590164	0.3278688524590164	0.6557377049180328	Double.isNaN(nextGaussian)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.303030303030303	0.33333333333333337	0.6363636363636364	getRowDimension()<column	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	0.3448275862068966	0.3448275862068966	0.6079854809437387	data instanceof ObjectiveFunction	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	0.3076923076923077	0.3076923076923077	0.603988603988604	converged	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	0.2962962962962963	0.2962962962962963	0.5925925925925926	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#226	0.2962962962962963	0.2962962962962963	0.5925925925925926	i < dimension	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#90	0.07692307692307687	0.5	0.5769230769230769	scaledX * scaledX>x	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	0.26388888888888884	0.3114754098360656	0.5753642987249544	matrix.getEntry(j,i)<relativeTolerance	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	0.27586206896551724	0.2962962962962963	0.5721583652618135	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	0.27586206896551724	0.27586206896551724	0.5517241379310345	data instanceof AbstractSimplex	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	0.3921568627450981	0.3921568627450981	0.534336957531828	data instanceof SimpleBounds	_
org.apache.commons.math3.optim.SimpleBounds#SimpleBounds#unbounded#?,int#75	0.5294117647058824	0.0	0.5294117647058824		_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.2676056338028169	0.2676056338028169	0.5243623905595737	isSymmetric	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.25	0.25	0.5	cachedQ == null	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double#168	0.5	0.0	0.5		_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.240506329113924	0.240506329113924	0.47800632911392404	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.47619047619047616	0.0	0.47619047619047616		_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#115	0.23076923076923073	0.23076923076923073	0.4557692307692307	!(maxIterationCount != ITERATION_CHECK_DISABLED)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.19999999999999996	0.25	0.44999999999999996	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#256	0.2222222222222222	0.2222222222222222	0.4444444444444444	!(j < n)	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#764	0.41666666666666663	0.0	0.41666666666666663		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#269	0.19999999999999996	0.19999999999999996	0.3999999999999999	!(comparator.compare(simplex[i],pointValuePair) > 0)	_
org.apache.commons.math3.optim.SimpleBounds#double[]#getLower#?#53	0.3921568627450981	0.0	0.3921568627450981		_
org.apache.commons.math3.optim.SimpleBounds#double[]#getUpper#?#61	0.3921568627450981	0.0	0.3921568627450981		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.3846153846153846	0.0	0.3846153846153846		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.3846153846153846	0.0	0.3846153846153846		_
org.apache.commons.math3.optim.SimpleBounds#?#SimpleBounds#?,double[],double[]#43	0.3846153846153846	0.0	0.3846153846153846		_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1221	0.10582010582010581	0.2816901408450704	0.3797927085598318	aa - ya + ab>ab	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.18999999999999995	0.18999999999999995	0.3762745098039215	equals(x,y,eps)	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#115	0.375	0.0	0.375		_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.10752688172043012	0.2571428571428571	0.36466973886328724	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[]#121	0.36363636363636365	0.0	0.36363636363636365		_
org.apache.commons.math3.optim.PointValuePair#double[]#getPoint#?#71	0.3571428571428571	0.0	0.3571428571428571		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#102	0.17391304347826086	0.17391304347826086	0.34782608695652173	!(col < columnCount)	_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#MultivariateFunction#getObjectiveFunction#?#45	0.3448275862068966	0.0	0.3448275862068966		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#266	0.08333333333333337	0.25	0.32692307692307687	r[i] * steepestDescent[i]==delta	GT
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction#?#ObjectiveFunction#?,MultivariateFunction#36	0.32258064516129037	0.0	0.32258064516129037		_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#117	0.16666666666666663	0.16666666666666663	0.30952380952380953	!(maxIterationCount != ITERATION_CHECK_DISABLED)	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.1507537688442211	0.1507537688442211	0.3015075376884422	!(max <= 0)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.15037593984962405	0.15037593984962405	0.3007518796992481	!(i < nSum)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	0.2962962962962963	0.0	0.2962962962962963		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	0.2962962962962963	0.0	0.2962962962962963		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair[]#getPoints#?#285	0.2962962962962963	0.0	0.2962962962962963		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	0.14598540145985406	0.14598540145985406	0.2919708029197081	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2490	0.11111111111111116	0.21621621621621623	0.28639165481270745	xb * TANGENT_TABLE_B[idx]==yb	_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	0.1515151515151515	0.1515151515151515	0.2842585143470099	data instanceof MaxEval	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#GoalType#getGoalType#?#101	0.28037383177570097	0.0	0.28037383177570097		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,double,double#105	0.28	0.0	0.28		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#?#SimplexOptimizer#?,ConvergenceChecker<PointValuePair>#97	0.27586206896551724	0.0	0.27586206896551724		_
org.apache.commons.math3.optim.PointValuePair#double[]#getPointRef#?#80	0.27586206896551724	0.0	0.27586206896551724		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#optimize#?,OptimizationData#122	0.27586206896551724	0.0	0.27586206896551724		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double#44	0.2702702702702703	0.0	0.2702702702702703		_
org.apache.commons.math3.optim.PointValuePair#?#PointValuePair#?,double[],double,boolean#58	0.2702702702702703	0.0	0.2702702702702703		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#561	0.2676056338028169	0.0	0.2676056338028169		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.26388888888888884	0.0	0.26388888888888884		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.26388888888888884	0.0	0.26388888888888884		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#64	0.25210084033613445	0.0	0.25210084033613445		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double#151	0.25	0.0	0.25		_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,ConvergenceChecker<PointValuePair>#101	0.25	0.0	0.25		_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetric#?,RealMatrix,double#439	0.25	0.0	0.25		_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.125	0.125	0.25	i < nCols	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#UnivariatePointValuePair#search#?,double[],double[]#357	0.25	0.0	0.25		_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#?#MultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#43	0.25	0.0	0.25		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1766	0.06034482758620685	0.18518518518518523	0.24225040257648955	a + t<sinEpsB	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.11904761904761907	0.11904761904761907	0.23809523809523814	row < rowCount	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#91	0.11111111111111116	0.11111111111111116	0.22222222222222232	!(growLimit <= 0)	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	0.2222222222222222	0.0	0.2222222222222222		_
org.apache.commons.math3.optim.SimpleValueChecker#?#SimpleValueChecker#?,double,double#67	0.2142857142857143	0.0	0.2142857142857143		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#413	0.10416666666666663	0.10416666666666663	0.20833333333333326	i < rows	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2319	0.14184397163120566	0.10416666666666663	0.20517676767676762	cw.getRemA()<=x	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch#?#LineSearch#?,double,double#330	0.19999999999999996	0.0	0.19999999999999996		_
org.apache.commons.math3.optim.BaseOptimizer#ConvergenceChecker<PAIR>#getConvergenceChecker#?#102	0.17441860465116277	0.0	0.17441860465116277		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getStartPoint#?#109	0.17341040462427748	0.0	0.17341040462427748		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getUpperBound#?#121	0.17341040462427748	0.0	0.17341040462427748		_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#47	0.05882352941176472	0.11111111111111116	0.16993464052287588	value>point	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#double[]#getLowerBound#?#115	0.16759776536312854	0.0	0.16759776536312854		_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.16666666666666663	0.0	0.16666666666666663		_
org.apache.commons.math3.optim.BaseOptimizer#void#incrementEvaluationCount#?#162	0.16393442622950816	0.0	0.16393442622950816		_
org.apache.commons.math3.optim.InitialGuess#double[]#getInitialGuess#?#45	0.1630434782608695	0.0	0.1630434782608695		_
org.apache.commons.math3.optim.InitialGuess#?#InitialGuess#?,double[]#36	0.16216216216216217	0.0	0.16216216216216217		_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	0.1568627450980392	0.0	0.1568627450980392		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	0.012499999999999956	0.1428571428571429	0.15535714285714286	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#330	0.07692307692307687	0.07692307692307687	0.15384615384615374	f.value(a)!=a	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#389	0.07692307692307687	0.07692307692307687	0.15384615384615374	!(i < gradient.length)	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#259	0.010309278350515427	0.1428571428571429	0.15316642120765833	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2264	0.10499999999999998	0.07664233576642332	0.15191115297072444	cw.getRemA()<=x	_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	0.1515151515151515	0.0	0.1515151515151515		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1846	0.060518731988472574	0.08810572687224671	0.1486244588607193	pi2b - xb<xb	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.0714285714285714	0.07692307692307687	0.14835164835164827	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	0.07342657342657344	0.07342657342657344	0.14685314685314688	remA > 0	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#?#SimpleUnivariateValueChecker#?,double,double#69	0.1428571428571429	0.0	0.1428571428571429		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.0714285714285714	0.0714285714285714	0.1428571428571428	!(data instanceof BracketingStep)	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.0714285714285714	0.0714285714285714	0.1428571428571428	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.07117437722419928	0.07117437722419928	0.14234875444839856	r < nRows	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#PAIR#optimize#?,OptimizationData#66	0.14218009478672988	0.0	0.14218009478672988		_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#?#BaseMultivariateOptimizer#?,ConvergenceChecker<PAIR>#48	0.13888888888888884	0.0	0.13888888888888884		_
org.apache.commons.math3.optim.BaseOptimizer#PAIR#optimize#?,OptimizationData#141	0.13761467889908252	0.0	0.13761467889908252		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#90	0.13605442176870752	0.0	0.13605442176870752		_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	0.1351351351351351	0.0	0.1351351351351351		_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#311	0.0714285714285714	0.0714285714285714	0.1339285714285714	isMinim	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	0.1333333333333333	0.0	0.1333333333333333		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.1298701298701299	0.0	0.1298701298701299		_
org.apache.commons.math3.optim.BaseOptimizer#?#BaseOptimizer#?,ConvergenceChecker<PAIR>#48	0.1298701298701299	0.0	0.1298701298701299		GT
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	0.0557029177718833	0.07299270072992703	0.12869561850181033	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.125	0.0	0.125		_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.125	0.0	0.125		_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.125	0.0	0.125		_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	0.0557029177718833	0.0684039087947883	0.1241068265666716	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	0.06153846153846154	0.06153846153846154	0.12307692307692308	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	0.11952191235059761	0.0	0.11952191235059761		_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3545	0.05653021442495132	0.05653021442495132	0.11306042884990264	!(bits == 0x8000000000000000L)	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?#79	0.11111111111111116	0.0	0.11111111111111116		_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#52	0.05555555555555558	0.05555555555555558	0.11111111111111116	!(init < lo || init > hi)	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.10909090909090913	0.0	0.10909090909090913		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.05555555555555558	0.05555555555555558	0.10818713450292405	!(data instanceof GoalType)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.05352112676056342	0.05352112676056342	0.10704225352112684	!(i < nRows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#598	0.10471204188481675	0.0	0.10471204188481675		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.10362694300518138	0.0	0.10362694300518138		_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#91	0.050000000000000044	0.052631578947368474	0.10263157894736852	abs<rel	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.10050251256281406	0.0	0.10050251256281406		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.048223350253807085	0.048223350253807085	0.09644670050761417	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.09178743961352653	0.0	0.09178743961352653		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>#71	0.09090909090909094	0.0	0.09090909090909094		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner#double[]#precondition#?,double[],double[]#346	0.08333333333333337	0.0	0.08333333333333337		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.08241758241758246	0.0	0.08241758241758246		_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.04115226337448563	0.04120879120879117	0.0823610545832768	!(++count > maximalCount)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.03281250000000002	0.048426150121065326	0.08123865012106535	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.03853955375253548	0.03853955375253548	0.07707910750507097	subMatrix[0].length!=row	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#?#LineSearchFunction#?,double[],double[]#372	0.07692307692307687	0.0	0.07692307692307687		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#double[]#computeObjectiveGradient#?,double[]#54	0.07692307692307687	0.0	0.07692307692307687		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.03764115432873272	0.03764115432873272	0.07528230865746544	!(cb == null)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.07392996108949412	0.0	0.07392996108949412		_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	0.07342657342657344	0.0	0.07342657342657344		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	0.07342657342657344	0.0	0.07342657342657344		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	0.07342657342657344	0.0	0.07342657342657344		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#PointValuePair#optimize#?,OptimizationData#74	0.0714285714285714	0.0	0.0714285714285714		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#optimize#?,OptimizationData#187	0.0714285714285714	0.0	0.0714285714285714		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#?#ObjectiveFunctionGradient#?,MultivariateVectorFunction#36	0.0714285714285714	0.0	0.0714285714285714		_
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient#MultivariateVectorFunction#getObjectiveFunctionGradient#?#45	0.0714285714285714	0.0	0.0714285714285714		_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#?#NonLinearConjugateGradientOptimizer#?,Formula,ConvergenceChecker<PointValuePair>,UnivariateSolver,Preconditioner#165	0.0714285714285714	0.0	0.0714285714285714		_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#?#GradientMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#44	0.0714285714285714	0.0	0.0714285714285714		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.0680272108843537	0.0	0.0680272108843537		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.0680272108843537	0.0	0.0680272108843537		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#47	0.0665188470066519	0.0	0.0665188470066519		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	0.06472491909385114	0.0	0.06472491909385114		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.032110091743119296	0.03215926493108734	0.06426935667420663	!(columnDimension < 1)	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.0625	0.0	0.0625		_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#222	0.02083333333333337	0.04166666666666663	0.0625	tol>c	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.029940119760479056	0.029940119760479056	0.05988023952095811	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.029895366218236186	0.029940119760479056	0.05983548597871524	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1226	0.02941176470588236	0.02941176470588236	0.05882352941176472	iBlock * BLOCK_SIZE==jBlock	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#GoalType#getGoalType#?#77	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.05882352941176472	0.0	0.05882352941176472		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.058651026392961825	0.0	0.058651026392961825		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#155	0.005102040816326481	0.052631578947368474	0.057733619763694954	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.05654761904761907	0.0	0.05654761904761907		_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.05555555555555558	0.0	0.05555555555555558		_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.05555555555555558	0.0	0.05555555555555558		_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.05555555555555558	0.0	0.05555555555555558		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.05475504322766567	0.0	0.05475504322766567		_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#UnivariatePointValuePair#optimize#?,OptimizationData#70	0.052631578947368474	0.0	0.052631578947368474		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#UnivariateFunction#getObjectiveFunction#?#45	0.052631578947368474	0.0	0.052631578947368474		_
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction#?#UnivariateObjectiveFunction#?,UnivariateFunction#36	0.052631578947368474	0.0	0.052631578947368474		_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#113	0.033333333333333326	0.033333333333333326	0.05220125786163521	computeObjectiveValue(max)>=max	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#?#UnivariateOptimizer#?,ConvergenceChecker<UnivariatePointValuePair>#49	0.050000000000000044	0.0	0.050000000000000044		_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.04749999999999999	0.0	0.04749999999999999		_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.04683840749414525	0.0	0.04683840749414525		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.04481132075471694	0.0	0.04481132075471694		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#314	0.043010752688172005	0.0	0.043010752688172005		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.04219409282700426	0.0	0.04219409282700426		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.04149377593360992	0.0	0.04149377593360992		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.03968253968253965	0.0	0.03968253968253965		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.01972386587771202	0.01980198019801982	0.03952584607573184	!(o == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.03869653767820769	0.0	0.03869653767820769		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.03853955375253548	0.0	0.03853955375253548		_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.038461538461538436	0.0	0.038461538461538436		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#306	0.037878787878787845	0.0	0.037878787878787845		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.032733224222585955	0.0	0.032733224222585955		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0326797385620915	0.0	0.0326797385620915		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.032258064516129004	0.0	0.032258064516129004		_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.03167420814479638	0.0	0.03167420814479638		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#455	0.03159557661927326	0.0	0.03159557661927326		_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?#47	0.03125	0.0	0.03125		_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1289	0.01449275362318836	0.01449275362318836	0.02898550724637672	q < qEnd	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.022222222222222254	0.0	0.022222222222222254		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.02083333333333337	0.0	0.02083333333333337		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.02083333333333337	0.0	0.02083333333333337		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.02083333333333337	0.0	0.02083333333333337		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.020000000000000018	0.0	0.020000000000000018		_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[]#749	0.019607843137254943	0.0	0.019607843137254943		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.018502202643171817	0.0	0.018502202643171817		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.01807980049875313	0.0	0.01807980049875313		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double#244	0.017699115044247815	0.0	0.017699115044247815		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#108	0.017241379310344862	0.0	0.017241379310344862		_
org.apache.commons.math3.analysis.solvers.BrentSolver#?#BrentSolver#?,double#55	0.016129032258064502	0.0	0.016129032258064502		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.013698630136986356	0.0	0.013698630136986356		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.013698630136986356	0.0	0.013698630136986356		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.013157894736842146	0.0	0.013157894736842146		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#180	0.006451612903225823	0.00666666666666671	0.013118279569892533	min<startValue	_
org.apache.commons.math3.util.MathArrays#double[]#copyOf#?,double[],int#779	0.012820512820512775	0.0	0.012820512820512775		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#96	0.006134969325153339	0.006578947368421018	0.012713916693574356	relativeAccuracy<absoluteAccuracy	_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.012195121951219523	0.0	0.012195121951219523		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.012048192771084376	0.0	0.012048192771084376		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.011904761904761862	0.0	0.011904761904761862		_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#225	0.005681818181818232	0.005681818181818232	0.011363636363636465	FastMath.min(qStart + BLOCK_SIZE,columns)!=blockIndex	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.005434782608695676	0.005586592178770999	0.011021374787466676	!(lower >= upper)	_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.010638297872340385	0.0	0.010638297872340385		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#verifySequence#?,double,double,double#277	0.009615384615384581	0.0	0.009615384615384581		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.009615384615384581	0.0	0.009615384615384581		_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifySequence#?,double,double,double#373	0.009433962264150941	0.0	0.009433962264150941		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.0092592592592593	0.0	0.0092592592592593		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#56	0.008064516129032251	0.0	0.008064516129032251		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.007575757575757569	0.0	0.007575757575757569		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.007299270072992692	0.0	0.007299270072992692		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.0071428571428571175	0.0	0.0071428571428571175		_
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver#?#AbstractUnivariateSolver#?,double#37	0.007092198581560294	0.0	0.007092198581560294		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.00666666666666671	0.0	0.00666666666666671		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.00666666666666671	0.0	0.00666666666666671		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.0066225165562914245	0.0	0.0066225165562914245		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double#67	0.0066225165562914245	0.0	0.0066225165562914245		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#incrementEvaluationCount#?#310	0.00649350649350644	0.0	0.00649350649350644		_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#193	0.00649350649350644	0.0	0.00649350649350644		_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,double[][]#127	0.005681818181818232	0.0	0.005681818181818232		_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.004950495049504955	0.0	0.004950495049504955		_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.0049261083743842304	0.0	0.0049261083743842304		_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.0049261083743842304	0.0	0.0049261083743842304		_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.004739336492891044	0.0	0.004739336492891044		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.0037878787878787845	0.0	0.0037878787878787845		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.003424657534246589	0.0	0.003424657534246589		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#99	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#computeWeightedJacobian#?,double[]#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#?#Solver#?,double[][],int[],boolean#282	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1660	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#?#Weight#?,double[]#42	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#?#MultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#double[]#getTarget#?#48	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#MultivariateVectorFunction#getModelFunction#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#copy#?#107	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#min#?,double,double#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#RealMatrix#multiply#?,RealMatrix#190	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double#computeCost#?,double[]#77	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#655	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#operate#?,double[]#289	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double#getEntry#?,int,int#227	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#763	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#?#JacobianMultivariateVectorOptimizer#?,ConvergenceChecker<PointVectorValuePair>#50	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#279	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Weight#RealMatrix#getWeight#?#65	0.0	0.0	0.0		_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#getData#?#601	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,int#52	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#void#setEntry#?,int,int,double#240	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,ConvergenceChecker<PointVectorValuePair>#63	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#MultivariateMatrixFunction#getModelFunctionJacobian#?#45	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#double[]#getDataRef#?#219	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#checkParameters#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#setCost#?,double#120	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.Target#?#Target#?,double[]#39	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#void#checkVectorDimensions#?,int#758	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[]#44	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double#dotProduct#?,RealVector#457	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[],boolean#83	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#DiagonalMatrix#multiply#?,DiagonalMatrix#165	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#getWeightSquareRoot#?#111	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition$Solver#RealVector#solve#?,RealVector#316	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#getTarget#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#PointVectorValuePair#optimize#?,OptimizationData#197	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian#?#ModelFunctionJacobian#?,MultivariateMatrixFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double[]#getDataRef#?#450	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#RealMatrix#squareRoot#?,RealMatrix#267	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?,boolean#82	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#RealMatrix#getWeight#?#96	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction#?#ModelFunction#?,MultivariateVectorFunction#36	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#140	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#?#DiagonalMatrix#?,double[]#64	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qrDecomposition#?,RealMatrix#923	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#83	0.0	0.0	0.0		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealVector#operate#?,RealVector#678	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#?#AbstractLeastSquaresOptimizer#?,ConvergenceChecker<PointVectorValuePair>#53	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#double[]#computeResiduals#?,double[]#217	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#parseOptimizationData#?,OptimizationData#248	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#double#ulp#?,double#3027	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix#76	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#DecompositionSolver#getSolver#?#258	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#?#SimpleVectorValueChecker#?,double,double#68	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#qTy#?,double[]#943	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getColumnDimension#?#282	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#void#checkParameters#?#953	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#double[]#getValueRef#?#105	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer#double[][]#computeJacobian#?,double[]#60	0.0	0.0	0.0		_
org.apache.commons.math3.analysis.function.Sinc#?#Sinc#?#72	0.0	0.0	0.0		_
org.apache.commons.math3.optim.PointVectorValuePair#?#PointVectorValuePair#?,double[],double[],boolean#58	0.0	0.0	0.0		_
org.apache.commons.math3.linear.ArrayRealVector#double[]#toArray#?#726	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#PointVectorValuePair#doOptimize#?#130	0.0	0.0	0.0		GT
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#void#checkParameters#?#178	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#PointVectorValuePair#optimize#?,OptimizationData#87	0.0	0.0	0.0		_
org.apache.commons.math3.linear.LUDecomposition#?#LUDecomposition#?,RealMatrix,double#92	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#PointVectorValuePair#doOptimize#?#448	0.0	0.0	0.0		GT
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer#double[]#computeObjectiveValue#?,double[]#63	0.0	0.0	0.0		_
org.apache.commons.math3.optim.SimpleVectorValueChecker#boolean#converged#?,int,PointVectorValuePair,PointVectorValuePair#135	0.0	0.0	0.0		_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer#?#GaussNewtonOptimizer#?,boolean,ConvergenceChecker<PointVectorValuePair>#75	0.0	0.0	0.0		_
org.apache.commons.math3.linear.DiagonalMatrix#int#getRowDimension#?#276	0.0	0.0	0.0		_
