line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#658	0.0	0.43927350073398364	0.43927350073398364	s * t>=maxAbsoluteValue	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#142	0.0	0.39233854681720776	0.39233854681720776	upperBound != null	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	0.0	0.3911835873103484	0.3911835873103484	data instanceof SimpleBounds	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1303	0.0	0.36843088100351384	0.36843088100351384	lnza * epsilon>x	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#256	0.0	0.32708673287461987	0.32708673287461987	y >>> 11<=bits	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#247	0.0	0.25522745256565	0.25522745256565	hK[i] * z[j] + z[i] * hK[j]>xNormSqr	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.0	0.24389262793070957	0.24389262793070957	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2490	0.0	0.23669047342672767	0.23669047342672767	xb * TANGENT_TABLE_B[idx]==yb	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1766	0.0	0.22427805970040088	0.22427805970040088	a + t<sinEpsB	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#109	0.0	0.21810318103236487	0.21810318103236487	1 + beta * hK[k]>beta	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.0	0.2019451873175441	0.2019451873175441	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#710	0.0	0.1716316316336732	0.1716316316336732	hsig ? 0 : ccov1 * cc * (2 - cc)>negccov	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#250	0.0	0.1660228493723701	0.1660228493723701	!(Double.isNaN(vertex.getValue()))	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	0.0	0.16512117114461444	0.16512117114461444	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	0.0	0.16512117114461444	0.16512117114461444	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#600	0.0	0.16512117114461444	0.16512117114461444	w * w>w	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1102	0.0	0.16485743600995376	0.16485743600995376	!(m.getColumnDimension() == 1)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1231	0.0	0.15732652674196185	0.15732652674196185	!(min > e)	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	0.0	0.15123834447413717	0.15123834447413717	data instanceof ObjectiveFunction	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	0.0	0.09030956566317867	0.09030956566317867	matrix.getEntry(j,i)<relativeTolerance	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	0.0	0.08693122022466639	0.08693122022466639	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#561	0.0	0.07572224676349382	0.07572224676349382	!(inputSigma[i] > uB[i] - lB[i])	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.0	0.05649130665031994	0.05649130665031994	getRowDimension()<column	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1846	0.0	0.053531354009953444	0.053531354009953444	pi2b - xb<xb	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#206	0.0	0.05258576946829818	0.05258576946829818	xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j])>coeff	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	0.0	0.0513976073472388	0.0513976073472388	!(s[i] < 0)	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2316	0.0	0.04966595472291713	0.04966595472291713	xa > 1.5707963267948966	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#232	0.0	0.04219081951277356	0.04219081951277356	comparator.compare(expanded,reflected) < 0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	0.0	0.0395726536150848	0.0395726536150848	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3535	0.0	0.037106307532852136	0.037106307532852136	!(a < b)	_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	0.0	0.03686558224975559	0.03686558224975559	data instanceof MaxEval	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	0.0	0.03560050151557457	0.03560050151557457	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	0.0	0.03392708953380286	0.03392708953380286	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2261	0.0	0.03199009456454087	0.03199009456454087	xa > 1.5707963267948966	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.0	0.030694223488957503	0.030694223488957503	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	0.0	0.02505370722627284	0.02505370722627284	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	0.0	0.02238326943778365	0.02238326943778365	converged	GT
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.02143458854744875	0.02143458854744875	isSymmetric	_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#115	0.0	0.011438383276263214	0.011438383276263214	!(maxIterationCount != ITERATION_CHECK_DISABLED)	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.0	0.007419698087000877	0.007419698087000877	equals(x,y,eps)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.0059922710523236935	0.0059922710523236935	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#116	0.0	0.005811141101182728	0.005811141101182728	r < nRows	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#183	0.0	0.0049463203338060355	0.0049463203338060355	mt[N - 1]<i	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	1.562150674161645E-4	1.562150674161645E-4	!(o == null)	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	1.1304940780228464E-4	1.1304940780228464E-4	!(++count > maximalCount)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.0	9.834108325379322E-5	9.834108325379322E-5	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.0	8.950262903283488E-5	8.950262903283488E-5	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.0	0.0	0.0	!(i < nSum)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#124	0.0	0.0	0.0	!(rel < MIN_RELATIVE_TOLERANCE)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.0	0.0	0.0	getRowDimension()>=column	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1086	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.0	0.0	0.0	!(lower >= upper)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1057	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#87	0.0	0.0	0.0	normalized ? FastMath.PI * x : x<=x	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1246	0.0	0.0	0.0	max < m[r]	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#47	0.0	0.0	0.0	value<=point	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	0.0	0.0	0.0	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#330	0.0	0.0	0.0	f.value(a)!=a	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.0	0.0	0.0	!(points.length != simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#998	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.0	0.0	0.0	i < nCols	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#413	0.0	0.0	0.0	i < rows	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#137	0.0	0.0	0.0	x==v	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#805	0.0	0.0	0.0	vals[i - 1]>=val	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#103	0.0	0.0	0.0	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE>=columns	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	0.0	0.0	0.0	e * e<=e	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.0	0.0	0.0	!(max <= 0)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#117	0.0	0.0	0.0	!(maxIterationCount != ITERATION_CHECK_DISABLED)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.0	0.0	0.0	sigma<khi	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.0	0.0	0.0	!(i < diagonal.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.0	0.0	0.0	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.0	0.0	0.0	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#167	0.0	0.0	0.0	blockHeight(iBlock)>=iBlock	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#230	0.0	0.0	0.0	!(stop)	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#539	0.0	0.0	0.0	!(data instanceof PopulationSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	0.0	0.0	0.0	i < m1.getRowDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1028	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#903	0.0	0.0	0.0	isRepairMode	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#258	0.0	0.0	0.0	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE>=rows	_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#188	0.0	0.0	0.0	w<=denom	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.0	0.0	0.0	subMatrix[0].length!=row	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#84	0.0	0.0	0.0	row < rowCount	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#226	0.0	0.0	0.0	i < dimension	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#113	0.0	0.0	0.0	computeObjectiveValue(max)>=min	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#389	0.0	0.0	0.0	!(i < gradient.length)	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#151	0.0	0.0	0.0	(int)longMT>=seed	_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1264	0.0	0.0	0.0	!(v.length != columns)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#307	0.0	0.0	0.0	!(b == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	0.0	0.0	0.0	indices[indices.length - i - 1]>i	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#52	0.0	0.0	0.0	!(init < lo || init > hi)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1073	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#104	0.0	0.0	0.0	Double.isNaN(nextGaussian)	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#984	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	0.0	0.0	0.0	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	0.0	0.0	0.0	!(steps == null)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#230	0.0	0.0	0.0	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) < 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	0.0	0.0	0.0	!(c < popSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#118	0.0	0.0	0.0	gamma!=khi	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#96	0.0	0.0	0.0	relativeAccuracy<=absoluteAccuracy	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.0	0.0	0.0	!(data instanceof BracketingStep)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#338	0.0	0.0	0.0	!(columnData == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	0.0	0.0	0.0	!(size <= 0)	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.0	0.0	0.0	!(data instanceof GoalType)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#185	0.0	0.0	0.0	a == c	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.0	0.0	0.0	row < rowCount	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#91	0.0	0.0	0.0	!(growLimit <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.0	0.0	0.0	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1226	0.0	0.0	0.0	iBlock * BLOCK_SIZE==jBlock	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#102	0.0	0.0	0.0	!(col < columnCount)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	0.0	0.0	0.0	!(i < indices.length)	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	0.0	0.0	0.0	remA > 0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#225	0.0	0.0	0.0	FastMath.min(qStart + BLOCK_SIZE,columns)!=blockIndex	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#180	0.0	0.0	0.0	min!=startValue	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#288	0.0	0.0	0.0	p[i] + nD[i]<=optimum	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#967	0.0	0.0	0.0	!(i < x.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#269	0.0	0.0	0.0	!(comparator.compare(simplex[i],pointValuePair) > 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#767	0.0	0.0	0.0	ccov1 + ccovmu + negccov > 0 && (iterations % 1. / (ccov1 + ccovmu + negccov) / dimension / 10.) < 1	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.0	0.0	0.0	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1259	0.0	0.0	0.0	!(r < m.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#824	0.0	0.0	0.0	dis[i].index>=i	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#116	0.0	0.0	0.0	!(col < columnCount)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#199	0.0	0.0	0.0	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#523	0.0	0.0	0.0	!(vector.getDimension() != nRows)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#277	0.0	0.0	0.0	iter % n == 0 || beta < 0	GT
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	0.0	0.0	0.0	data instanceof AbstractSimplex	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#91	0.0	0.0	0.0	abs<rel	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.0	0.0	0.0	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1197	0.0	0.0	0.0	start<=step	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	0.0	0.0	0.0	hsig	_
