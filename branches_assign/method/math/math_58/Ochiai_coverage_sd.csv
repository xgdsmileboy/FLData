line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#384	0.21320071635561041	1.0	1.2085144140570747	(actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5>xNorm	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.5773502691896258	0.5773502691896258	0.9855985596534889	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.25	0.7071067811865475	0.9307135789365264	fp / (delta * sum2)>=dxNorm	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.5773502691896258	0.5773502691896258	0.8935780352064637	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.4082482904638631	0.4082482904638631	0.8164965809277261	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.4082482904638631	0.4082482904638631	0.8164965809277261	parameters == null	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.4082482904638631	0.4082482904638631	0.8164965809277261	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.2182178902359924	0.5773502691896258	0.7955681594256182	x==weight	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.4082482904638631	0.4082482904638631	0.7618016810571369	!(observations.length < 3)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.5773502691896258	0.0	0.5773502691896258		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.2182178902359924	0.2773500981126146	0.49556798834860694	sin * cotan>=dpj	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.4082482904638631	0.0	0.4082482904638631		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.4082482904638631	0.0	0.4082482904638631		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.4082482904638631	0.0	0.4082482904638631		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.14907119849998599	0.2581988897471611	0.40253645704456753	gamma * weightedResidualJacobian[j][pk]>ak2	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#159	0.3779644730092272	0.0	0.3779644730092272		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.3779644730092272	0.0	0.3779644730092272		_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.35355339059327373	0.0	0.35355339059327373		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.31622776601683794	0.0	0.31622776601683794		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#211	0.1386750490563073	0.17407765595569785	0.31275270501200514	parRelativeTolerance==orthoTolerance	_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.30151134457776363	0.0	0.30151134457776363		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#842	0.14285714285714285	0.1543033499620919	0.29716049281923473	permutation[k]==k	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.11952286093343936	0.16222142113076254	0.2817442820642019	cols<i	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.2773500981126146	0.0	0.2773500981126146		_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.2581988897471611	0.0	0.2581988897471611		_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.125	0.125	0.24903473458920847	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.11952286093343936	0.1203858530857692	0.23990871401920855	-ji[j] * wi<=wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.11867816581938533	0.11867816581938533	0.23735633163877065	point.length!=maxEval	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#117	0.11867816581938533	0.11867816581938533	0.23735633163877065	!(t == null)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#780	0.06726727939963124	0.18257418583505536	0.2361029585922743	x - (intVal + intFrac / 1024.0)<extra	_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#160	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#206	0.22360679774997896	0.0	0.22360679774997896		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.2182178902359924	0.0	0.2182178902359924		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.2182178902359924	0.0	0.2182178902359924		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#53	0.21320071635561041	0.0	0.21320071635561041		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3830	0.10369516947304253	0.10369516947304253	0.20739033894608505	a < b	_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.20412414523193154	0.0	0.20412414523193154		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.17677669529663687	0.0	0.17677669529663687		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.07053456158585983	0.07053456158585983	0.14106912317171966	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3908	0.06375767130633382	0.06375767130633382	0.12751534261266764	!(bits == 0x8000000000000000L)	_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.12403473458920847	0.0	0.12403473458920847		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#67	0.12309149097933272	0.0	0.12309149097933272		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.11952286093343936	0.0	0.11952286093343936		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.11952286093343936	0.0	0.11952286093343936		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.11952286093343936	0.0	0.11952286093343936		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.11867816581938533	0.0	0.11867816581938533		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#103	0.11867816581938533	0.0	0.11867816581938533		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.11704114719613057	0.0	0.11704114719613057		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.11704114719613057	0.0	0.11704114719613057		_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.05976143046671968	0.05892556509887897	0.115358829897189	o instanceof Object[]	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.09712858623572641	0.0	0.09712858623572641		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.09667364890456635	0.0	0.09667364890456635		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.09090909090909091	0.0	0.09090909090909091		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#62	0.09090909090909091	0.0	0.09090909090909091		_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.06984302957695782	0.0	0.06984302957695782		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.06917144638660747	0.0	0.06917144638660747		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.06337242505244779	0.0	0.06337242505244779		_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.0604122093330177	0.0	0.0604122093330177		_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.05652334189442215	0.0	0.05652334189442215		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.05572782125753528	0.0	0.05572782125753528		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#67	0.052057920629535355	0.0	0.052057920629535355		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.04559607525875532	0.0	0.04559607525875532		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.03883678186903087	0.0	0.03883678186903087		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1154	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1914	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1037	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1717	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1058	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1000	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1197	0.0	0.0	0.0		_
