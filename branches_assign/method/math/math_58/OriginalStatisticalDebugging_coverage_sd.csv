line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#848	0.0	0.0	0.0	!(i < rows)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#209	0.0	0.0	0.0	initialStepBoundFactor>=costRelativeTolerance	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.0	0.0	0.0	!(++count > maximalCount)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.0	0.0	0.0	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.0	0.0	0.0	x>=weight	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#716	0.0	0.0	0.0	!(x < 0.0)	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.0	0.0	0.0	!(param[2] <= 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#141	0.0	0.0	0.0	!(observations == null)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.0	0.0	0.0	parameters == null	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.0	0.0	0.0	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#401	0.0	0.0	0.0	!(k < cols)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.0	0.0	0.0	-ji[j] * wi<=wi	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3908	0.0	0.0	0.0	!(bits == 0x8000000000000000L)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.0	0.0	0.0	gamma * weightedResidualJacobian[j][pk]>akk	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#264	0.0	0.0	0.0	!(isBetween(y,points[i].getY(),points[i + idxStep].getY()))	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#117	0.0	0.0	0.0	!(t == null)	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.0	0.0	0.0	point.length!=maxEval	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.0	0.0	0.0	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.0	0.0	0.0	o instanceof Object[]	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#650	0.0	0.0	0.0	j < solvedCols	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3827	0.0	0.0	0.0	a > b	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.0	0.0	0.0	cols<=i	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#608	0.0	0.0	0.0	s * s>parl	_
