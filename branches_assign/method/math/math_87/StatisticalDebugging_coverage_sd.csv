line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.linear.SimplexSolver#void#solvePhase1#?,SimplexTableau#167	0.0	0.8333333333333334	0.8333333333333334	tableau.getNumArtificialVariables() == 0	_
org.apache.commons.math.optimization.linear.SimplexTableau#void#discardArtificialVariables#?#290	0.0	0.8333333333333334	0.8333333333333334	numArtificialVariables == 0	_
org.apache.commons.math.optimization.linear.SimplexTableau#double[][]#createTableau#?,boolean#133	0.0	0.5416666666666666	0.5416666666666666	!(getNumObjectiveFunctions() == 2)	_
org.apache.commons.math.optimization.linear.SimplexTableau#RealPointValuePair#getSolution#?#338	0.0	0.46666666666666656	0.46666666666666656	(basicRow == null ? 0 : getEntry(basicRow,getRhsOffset())) - (restrictToNonNegative ? 0 : mostNegative)<mostNegative	_
org.apache.commons.math.optimization.linear.SimplexSolver#boolean#isOptimal#?,SimplexTableau#150	0.0	0.10389610389610388	0.10389610389610388	MathUtils.compareTo(tableau.getEntry(0,i),0,epsilon) < 0	_
org.apache.commons.math.optimization.linear.SimplexSolver#RealPointValuePair#doOptimize#?#189	0.0	0.10389610389610388	0.10389610389610388	!isOptimal(tableau)	_
org.apache.commons.math.optimization.linear.SimplexSolver#void#doIteration#?,SimplexTableau#105	0.0	0.05555555555555555	0.05555555555555555	getPivotRow(pivotCol,tableau)==pivotCol	_
org.apache.commons.math.linear.RealVectorImpl#RealVector#mapMultiply#?,double#340	0.0	0.04848484848484849	0.04848484848484849	data[i] * d<d	_
org.apache.commons.math.optimization.linear.SimplexSolver#Integer#getPivotRow#?,int,SimplexTableau#84	0.0	0.015151515151515164	0.015151515151515164	ratio==rhs	_
org.apache.commons.math.linear.RealVectorImpl#void#checkVectorDimensions#?,int#1287	0.0	0.0013495276653171379	0.0013495276653171379	!(data.length != n)	_
org.apache.commons.math.optimization.linear.SimplexSolver#Integer#getPivotColumn#?,SimplexTableau#62	0.0	0.0	0.0	MathUtils.compareTo(tableau.getEntry(0,i),minValue,epsilon) < 0	_
org.apache.commons.math.optimization.linear.SimplexTableau#void#subtractRow#?,int,int,double#373	0.0	0.0	0.0	!(j < getWidth())	_
org.apache.commons.math.linear.RealVectorImpl#double#dotProduct#?,double[]#886	0.0	0.0	0.0	!(i < data.length)	_
org.apache.commons.math.optimization.linear.SimplexTableau#Integer#getBasicRow#?,int#276	0.0	0.0	0.0	row == null	GT
org.apache.commons.math.linear.RealMatrixImpl#void#setSubMatrix#?,double[][],int,int#326	0.0	0.0	0.0	!(nRows == 0)	_
org.apache.commons.math.optimization.linear.AbstractLinearOptimizer#void#incrementIterationsCounter#?#86	0.0	0.0	0.0	!(++iterations > maxIterations)	_
org.apache.commons.math.optimization.linear.SimplexTableau#LinearConstraint#normalize#?,LinearConstraint#211	0.0	0.0	0.0	!(constraint.getValue() < 0)	_
org.apache.commons.math.optimization.linear.SimplexTableau#void#divideRow#?,int,double#356	0.0	0.0	0.0	!(j < getWidth())	_
org.apache.commons.math.util.MathUtils#int#compareTo#?,double,double,double#369	0.0	0.0	0.0	!(x < y)	_
org.apache.commons.math.optimization.linear.SimplexTableau#int#getConstraintTypeCounts#?,Relationship#236	0.0	0.0	0.0	!(constraint.getRelationship() == relationship)	_
