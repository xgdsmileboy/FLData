line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#264	0.0	1.984	1.984	iBlock * BLOCK_SIZE<blockIndex	_
org.apache.commons.math3.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#48	0.0	0.0486815415821501	0.0486815415821501	y>=weight	_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#271	0.0	0.01425356339084771	0.01425356339084771	parRelativeTolerance==orthoTolerance	_
org.apache.commons.math3.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1181	0.0	0.01136363636363636	0.01136363636363636	(row - iBlock * BLOCK_SIZE) * blockWidth(jBlock) + (column - jBlock * BLOCK_SIZE)<row	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	0.0	0.004040015390534821	0.004040015390534821	columns==rows	_
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#double#evaluate#?,double[],double#135	0.0	0.0024653312788905993	0.0024653312788905993	coefficients[n - 1]>argument	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	7.2375658618493476E-6	7.2375658618493476E-6	!(o == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	5.279273571956282E-6	5.279273571956282E-6	!(rowDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#468	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer#void#parseOptimizationData#?,OptimizationData#251	0.0	0.0	0.0	data instanceof Weight	_
org.apache.commons.math3.optim.nonlinear.vector.Weight#?#Weight#?,double[]#44	0.0	0.0	0.0	!(i < dim)	GT
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#?#PolynomialFunction#?,double#72	0.0	0.0	0.0	!(n == 0)	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.0	0.0	0.0	!(max <= 0)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#484	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
