# home directory of defects4j projects 
PROJECT.HOME=/home/jack/d4j/projects

# recover predicates form file
PREDICATE.RECOVER=true

# true : recompute original coverage information
# false : recover covered statement from file if exists
RECOMPUTE.ORI=false

# true : recompute predicate coverage information
# false : recover predicate coverage info from file if exists
RECOMPUTE.PRED=true

# true : predict predicates for left hand side variables 
#        in assignment and variable declaration
# false : predict for right hand side variables
PREDICT.LEFT.VAR=true

# time limit for test suite running (in minutes)
TEST.TIMEOUT=300

# true: use statistical debugging predicate generation
# false: use machine learning algorithm to predict predicates 
USE.STATISTICAL.DEBUGGING=true

# use Sober algorithm from Chao Liu's paper (Statisitical debugging)
USE.SOBER=false


# >>>>>>> IMPORTANT <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# >>>>>>> The following configuration depends on the
# >>>>>>> configuration of USE.STATISTICAL.DEBUGGING.

# -- WHEN USE.STATISTICAL.DEBUGGING=true, the following
# -- configuration are enabled

# if this configure is enabled, the following configure
# i.e., BRANCH/ASSIGN/RETURN.COVERAGE
# will be disabled
PREDICAT.METHODLEVEL=true

# true : compute branch predicate coverage
BRANCH.COVERAGE=false
# true : compute assignment predicate coverage
ASSIGN.COVERAGE=true
# true : compute return predicate coverage
RETURN.COVERAGE=false

# -- WHEN USE.STATISTICAL.DEBUGGING=false, the following
# -- configuration are enabled

# model type of machine learning: xgboost, dnn or randomforest
TRAINING.MODEL=classifier

# keep top k predicates for predicted predicates
PREDICATE.TOPK=5

# true : retrain the model with neglecting old model
# false : skip training if model exists
MODEL.RETRAIN=false

TRAINING.EVALUATION=false
