line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.fitting.WeightedObservedPoint#double#getY#?#75	0.0	0.0	0.0	y>=0	_
org.apache.commons.math3.fitting.WeightedObservedPoint#double#getWeight#?#57	0.0	0.0	0.0	weight!=0	_
org.apache.commons.math3.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#47	0.0	0.0	0.0	x<=y	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#double#value#?,double#94	0.0	0.0	0.0	evaluate(coefficients,x)!=0	_
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#double#evaluate#?,double[],double#135	0.0	0.0	0.0	coefficients[n - 1]!=argument	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	0.0	0.0	!(o == null)	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#259	0.0	0.0	0.0	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE<=blockRows	_
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#270	0.0	0.0	0.0	costRelativeTolerance<initialStepBoundFactor	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	0.0	0.0	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#99	0.0	0.0	0.0	rows==columns	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	0.0	0.0	!(rowDimension < 1)	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.0	0.0	0.0	!(max <= 0)	_
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#?#PolynomialFunction#?,double#72	0.0	0.0	0.0	!(n == 0)	_
