line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#468	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#hasComplexEigenvalues#?#272	0.0	0.0	0.0	i < imagEigenvalues.length	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.0	0.0	0.0	cachedQt == null	_
org.apache.commons.math3.linear.EigenDecomposition$Solver#boolean#isNonSingular#?#517	0.0	0.0	0.0	!(realEigenvalues[i] == 0 && imagEigenvalues[i] == 0)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.0	0.0	0.0	!(i < nSum)	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.0	0.0	isSymmetric	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.0	0.0	walkInRowOrder(visitor)==0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.0	0.0	data[row][column]>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,double#1490	0.0	0.0	0.0	!(y == Double.POSITIVE_INFINITY)	_
org.apache.commons.math3.util.FastMath#double#exp#?,double#831	0.0	0.0	0.0	exp(x,0.0,null)!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1239	0.0	0.0	0.0	(bits & 0x3ffffffffffL) / (TWO_POWER_52 + (bits & 0x000ffc0000000000L))<=x	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1613	0.0	0.0	0.0	e == 0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[]#preMultiply#?,double[]#375	0.0	0.0	0.0	!(v.length != nRows)	_
org.apache.commons.math3.linear.EigenDecomposition$Solver#RealMatrix#getInverse#?#532	0.0	0.0	0.0	!(!isNonSingular())	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	0.0	0.0	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.0	0.0	!(!matrix.isSquare())	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.0	0.0	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0==0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	0.0	0.0	!(rowDimension < 1)	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumn#?,int,double[]#574	0.0	0.0	0.0	!(array.length != nRows)	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#getExponentTerm#?,double[]#230	0.0	0.0	0.0	i < centered.length	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.0	0.0	0.0	!(m != j)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#484	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#double#exp#?,double,double,double[]#861	0.0	0.0	0.0	!(intVal > 709)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#335	0.0	0.0	0.0	!(xInt < 0)	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.0	0.0	0.0	(j + r - 1) % r>m1	_
org.apache.commons.math3.linear.EigenDecomposition#double#getDeterminant#?#361	0.0	0.0	0.0	determinant!=0	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#392	0.0	0.0	0.0	!(rows != matrix.getColumnDimension())	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	0.0	0.0	!(o == null)	_
org.apache.commons.math3.distribution.NormalDistribution#double#density#?,double#136	0.0	0.0	0.0	x0 / standardDeviation<=x0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	0.0	0.0	Math.sqrt(a)>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#413	0.0	0.0	0.0	i < rows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.0	0.0	0.0	i < data.length	_
org.apache.commons.math3.linear.EigenDecomposition#DecompositionSolver#getSolver#?#406	0.0	0.0	0.0	!(hasComplexEigenvalues())	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	0.0	0.0	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.distribution.NormalDistribution#?#NormalDistribution#?,RandomGenerator,double,double,double#106	0.0	0.0	0.0	!(sd <= 0)	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#?#MultivariateNormalDistribution#?,RandomGenerator,double[],double[][]#112	0.0	0.0	0.0	!(dim != covariances[i].length)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#607	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution#int#getDimension#?#53	0.0	0.0	0.0	dimension>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.0	0.0	0.0	getColumnDimension()<=nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#162	0.0	0.0	0.0	!(i < v.length)	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#density#?,double[]#183	0.0	0.0	0.0	FastMath.pow(2 * FastMath.PI,-dim / 2) * FastMath.pow(covarianceMatrixDeterminant,-0.5) * getExponentTerm(vals)>=0	GT
