line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1270	0.0	1.8823529411764706	1.1294117647058823	max<=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#319	0.0	0.92	0.552	diagonalOnly==lambda	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#546	0.0	0.8999999999999999	0.5399999999999999	!(inputSigma != null)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1228	0.0	0.8823529411764706	0.5294117647058824	mat.getRowDimension()==n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#599	0.0	0.8823529411764706	0.5294117647058824	sumw * sumw / sumwq>sumwq	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#939	0.0	0.38235294117647056	0.22941176470588232	!(boundaries == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#956	0.0	0.38235294117647056	0.22941176470588232	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#913	0.0	0.38235294117647056	0.22941176470588232	!(boundaries == null)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#122	0.0	0.14594594594594595	0.08756756756756758	!(lower == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.0	0.03838383838383838	0.02303030303030303	d[0].length<nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.0	0.022408963585434177	0.013445378151260507	getColumnDimension()!=rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.0	0.012383900928792574	0.007430340557275544	getColumnDimension()!=rowCount	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0	0.004517006802721088	0.002710204081632653	Math.sqrt(a)<=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#304	0.0	0.004188948306595365	0.002513368983957219	data[row][column]<0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#407	0.0	0.0016859852476290849	0.001011591148577451	getColumnDimension()==rows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.0	0.0015915119363395236	9.549071618037142E-4	getColumnDimension()==nRows	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.0	0.0015873015873015888	9.523809523809532E-4	maximalCount!=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.0	8.608321377331432E-4	5.164992826398859E-4	m.getColumnDimension()==nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	9.318796011555282E-5	5.5912776069331685E-5	walkInRowOrder(visitor)<=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	1.2223444566679051E-5	7.33406674000743E-6	!(rowDimension < 1)	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	7.6145224171542125E-6	4.568713450292527E-6	!(++count > maximalCount)	_
org.apache.commons.math3.exception.util.ArgUtils#Object[]#flatten#?,Object[]#43	0.0	0.0	0.0	array != null	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1081	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1064	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.0	0.0	0.0	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.0	0.0	0.0	!(f == null)	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1155	0.0	0.0	0.0	m.getColumnDimension() == 1	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1204	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.util.FastMath#double#nextAfter#?,double,double#3235	0.0	0.0	0.0	(direction < d) ^ (sign == 0L)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1035	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#double#nextUp#?,double#767	0.0	0.0	0.0	nextAfter(a,Double.POSITIVE_INFINITY)!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1191	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1003	0.0	0.0	0.0	!(x[i] > 1.0)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.0	0.0	0.0	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.0	0.0	0.0	function.value(point)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1251	0.0	0.0	0.0	step==start	_
