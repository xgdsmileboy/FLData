line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.5799895747381992	0.3479937448429195	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	0.5791876370401342	0.3475125822240805	visitor.end()>0	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#116	0.0	0.5599957937175174	0.3359974762305104	function.value(params)<0	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#658	0.0	0.55394920798639	0.332369524791834	s * t>maxAbsoluteValue	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#145	0.0	0.5377078822387944	0.32262472934327663	getColumnDimension()<nRows	_
org.apache.commons.math3.optim.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#123	0.0	0.5356761405507118	0.32140568433042704	FastMath.abs(p - c)>p	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.0	0.5337264653153873	0.32023587918923235	d[0].length>nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.0	0.48088392393036433	0.2885303543582186	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1303	0.0	0.4275214309610291	0.2565128585766175	lnza * epsilon>x	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#checkParameters#?#142	0.0	0.393715296616534	0.23622917796992038	upperBound != null	_
org.apache.commons.math3.optim.BaseMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#91	0.0	0.3925522291972925	0.2355313375183755	data instanceof SimpleBounds	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#121	0.0	0.36964866830076165	0.22178920098045699	beta * hK[i]<=inv	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#doOptimize#?#268	0.0	0.3404822351758437	0.2042893411055062	w==e	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#PointValuePair#doOptimize#?#236	0.0	0.33951890055795686	0.20371134033477412	solver.getEvaluations()==n	GT
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.0	0.33612247398591766	0.20167348439155058	hi<=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#void#search#?,UnivariateFunction,GoalType,double,double#206	0.0	0.3329252268176244	0.19975513609057463	tmp<xB	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#247	0.0	0.3313785250643583	0.19882711503861497	hK[i] * z[j] + z[i] * hK[j]>xNormSqr	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#131	0.0	0.33017711950757317	0.1981062717045439	abs>=lineAbs	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#double[][]#newPointAndDirection#?,double[],double[],double#288	0.0	0.32569639050544397	0.19541783430326637	p[i] + nD[i]==optimum	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#90	0.0	0.3170901312380173	0.1902540787428104	scaledX * scaledX>scaledX	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#PointValuePair#doOptimize#?#242	0.0	0.3170901312380173	0.1902540787428104	2 * x[i] - x1[i]<alphaMin	GT
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.0	0.31476026134706586	0.1888561568082395	getColumnDimension()<nRows	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	0.0	0.3071309352935865	0.18427856117615188	count<=0	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2490	0.0	0.3043164002190966	0.18258984013145796	xb * TANGENT_TABLE_B[idx]==yb	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1730	0.0	0.29803857271255507	0.17882314362753304	polyCosine(epsilon)>=costB	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.0	0.29130826370150203	0.1747849582209012	getColumnDimension()==rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.0	0.2856840158326015	0.1714104094995609	getColumnDimension()!=rowCount	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#46	0.0	0.24597413320083492	0.14758447992050094	relativeThreshold>absoluteThreshold	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#168	0.0	0.20897735209041654	0.12538641125424993	!(comparator.compare(reflected,expanded) <= 0)	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.0	0.20817384350068963	0.12490430610041377	f.value(x)<0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#256	0.0	0.20185117830578087	0.12111070698346851	y >>> 11<=bits	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.0	0.20100074118542277	0.12060044471125365	upper<=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.0	0.19924041280529292	0.11954424768317574	max<0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.0	0.19722527205555015	0.11833516323333008	point==0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#void#iterate#?,MultivariateFunction,Comparator<PointValuePair>#214	0.0	0.18987756517082918	0.1139265391024975	centroid[j] + rho * (centroid[j] - xWorst[j])==scaling	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.0	0.18505915780724833	0.11103549468434899	mid<0	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#266	0.0	0.17629426770658457	0.10577656062395074	pEnd - pStart==blockColumns	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#104	0.0	0.17430680119736192	0.10458408071841714	(columns + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#710	0.0	0.1716316316336732	0.10297897898020392	hsig ? 0 : ccov1 * cc * (2 - cc)>negccov	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#evaluate#?,MultivariateFunction,Comparator<PointValuePair>#250	0.0	0.17074648001333217	0.1024478880079993	!(Double.isNaN(vertex.getValue()))	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1214	0.0	0.16536453545553312	0.09921872127331986	!(max < e)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#initializeCMA#?,double[]#609	0.0	0.16536453545553312	0.09921872127331986	(1 + 2 * Math.max(0,Math.sqrt((mueff - 1) / (dimension + 1)) - 1)) * Math.max(0.3,1 - dimension / (1e-6 + maxIterations)) + cs<=sumwq	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1177	0.0	0.16536453545553312	0.09921872127331986	mat.getRowDimension()<n	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1102	0.0	0.16512117114461444	0.09907270268676867	!(m.getColumnDimension() == 1)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1230	0.0	0.15732652674196185	0.09439591604517711	m.getEntry(r,c)>=min	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#90	0.0	0.15134540795931925	0.09080724477559154	data instanceof ObjectiveFunction	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1250	0.0	0.14921278177686692	0.08952766906612016	max<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#971	0.0	0.14921278177686692	0.08952766906612016	isMinimize ? penalty : -penalty<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1264	0.0	0.14921278177686692	0.08952766906612016	min<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#910	0.0	0.14921278177686692	0.08952766906612016	isMinimize ? value : -value<=0	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.0	0.14485033601946082	0.0869102016116765	start<0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.0	0.14204462533185921	0.08522677519911552	start<0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#108	0.0	0.13199895982756937	0.07919937589654162	2 * FastMath.PI * x<y	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateBD#?,double#786	0.0	0.1306561460280795	0.0783936876168477	max(diagD) > 1e14 * min(diagD)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	0.0	0.12652338167021213	0.07591402900212728	Double.compare(value,o.value)==0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1845	0.0	0.1170225845642001	0.07021355073852006	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#401	0.0	0.11532706985814956	0.06919624191488973	matrix.getEntry(j,i)<=relativeTolerance	_
org.apache.commons.math3.linear.BlockRealMatrix#BlockRealMatrix#transpose#?#1237	0.0	0.09272455472762853	0.05563473283657711	lInc==nRows	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#154	0.0	0.09167464296094029	0.05500478577656417	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#205	0.0	0.0901885012854903	0.05411310077129418	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE==rows	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	0.0	0.08882354780735717	0.0532941286844143	atan(x,0.0,false)<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#235	0.0	0.08700449831986336	0.05220269899191801	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#47	0.0	0.0835688759636717	0.05014132557820302	value>point	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#91	0.0	0.08194251308209334	0.049165507849256	getFunctionValueAccuracy()==initial	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#void#checkParameters#?#376	0.0	0.0806212514910926	0.04837275089465556	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#checkParameters#?#561	0.0	0.07577338572904796	0.045464031437428776	!(inputSigma[i] > uB[i] - lB[i])	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.0	0.07499205546159587	0.04499523327695752	getColumnDimension()<rowCount	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	0.07343848308020422	0.04406308984812253	Math.sqrt(a)<=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.0	0.06874489541535626	0.04124693724921376	min<0	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#183	0.0	0.06345871920243644	0.03807523152146186	mt[N - 1]>=k	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2316	0.0	0.0606885465873352	0.03641312795240112	xa > 1.5707963267948966	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.0	0.06043561530794193	0.036261369184765156	lower<0	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#222	0.0	0.05834128867170227	0.03500477320302136	tol>c	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3548	0.0	0.05771022183482601	0.03462613310089561	a!=0	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#boolean#converged#?,int,UnivariatePointValuePair,UnivariatePointValuePair#125	0.0	0.05745912047837311	0.03447547228702386	FastMath.abs(p - c)>c	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.055446120022652194	0.033267672013591314	data[row][column]==0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#PointValuePair#evaluateNewSimplex#?,MultivariateFunction,PointValuePair[],double,Comparator<PointValuePair>#206	0.0	0.05347067817285659	0.03208240690371395	xSmallest[j] + coeff * (xSmallest[j] - xOriginal[j])>coeff	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.0	0.05220933738825404	0.031325602432952425	data[index]<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma#?#Sigma#?,double[]#292	0.0	0.05142116307639709	0.030852697845838252	!(s[i] < 0)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#332	0.0	0.050428755044157614	0.03025725302649457	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#571	0.0	0.04967566959322419	0.02980540175593451	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.0	0.049662481137541535	0.02979748868252492	log(x,null)<0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1702	0.0	0.04879806935326119	0.029278841611956714	p * x2 + 0.041666666666621166<=x	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.04865152402468051	0.029190914414808304	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.0	0.04834440244185275	0.02900664146511165	subMatrix[0].length==nRows	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.0	0.0438525760465165	0.0263115456279099	value<0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.0	0.04116112814342971	0.024696676886057825	searchMin==0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#checkParameters#?#216	0.0	0.03964002761839737	0.02378401657103842	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2261	0.0	0.03908515156721653	0.023451090940329915	xa > 1.5707963267948966	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.0	0.037873512183141	0.0227241073098846	function.value(x)<=0	_
org.apache.commons.math3.optim.BaseOptimizer#void#parseOptimizationData#?,OptimizationData#191	0.0	0.03687194034901404	0.022123164209408422	data instanceof MaxEval	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	0.0	0.0354675096126874	0.02128050576761244	relativeThreshold>=0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1682	0.0	0.035010100492492154	0.02100606029549529	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	0.0	0.03324106078674104	0.019944636472044624	evaluations.getCount()>0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	0.0	0.0310399364092906	0.01862396184557436	finalRemB>0	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.027005245613012204	0.01620314736780732	isSymmetric	_
org.apache.commons.math3.linear.BlockRealMatrix#double[]#operate#?,double[]#1276	0.0	0.02584986106041946	0.015509916636251675	FastMath.min(qStart + BLOCK_SIZE,columns)==pEnd	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#PointValuePair#doOptimize#?#165	0.0	0.022404808559550782	0.013442885135730468	converged	GT
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	0.02069806911046751	0.012418841466280505	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x<=0	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.0	0.01781416428847186	0.010688498573083117	equals(x,y,eps)	_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.0	0.01754272784740354	0.010525636708442124	evaluations.getMaximalCount()>0	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#UnivariatePointValuePair#best#?,UnivariatePointValuePair,UnivariatePointValuePair,boolean#311	0.0	0.0171222094818819	0.010273325689129139	isMinim	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.0	0.013888179538347032	0.00833290772300822	maximalCount!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#checkParameters#?#402	0.0	0.010706216577149605	0.006423729946289763	!(getLowerBound() != null || getUpperBound() != null)	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	0.0	0.0075985307926219455	0.004559118475573167	(a <= b) ? b : a>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.00740288482684127	0.004441730896104762	!(!matrix.isSquare())	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#void#parseOptimizationData#?,OptimizationData#111	0.0	0.005766890383421901	0.0034601342300531407	!(data instanceof GoalType)	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#90	0.0	0.005197405856250056	0.0031184435137500332	rel>=abs	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#196	0.0	0.0014100321695736699	8.460193017442019E-4	doSolve()>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#95	0.0	9.907330030395714E-4	5.944398018237428E-4	absoluteAccuracy>relativeAccuracy	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.0	8.086104778400052E-4	4.851662867040031E-4	function.value(point)<0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#182	0.0	5.361919722117514E-4	3.2171518332705084E-4	startValue>=min	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0	3.652893099051135E-4	2.191735859430681E-4	data.length>0	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#353	0.0	3.6485648652017375E-4	2.1891389191210425E-4	!(lower >= upper)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	1.9632715054716582E-4	1.1779629032829948E-4	!(rowDimension < 1)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	1.9295759151886018E-4	1.1577455491131611E-4	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#467	0.0	1.7541713879453E-4	1.05250283276718E-4	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	1.2915479270175634E-4	7.749287562105381E-5	!(o == null)	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.0	1.1219058803862498E-4	6.731435282317499E-5	searchMax>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#336	0.0	0.0	0.0	b>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#997	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1014	0.0	0.0	0.0	e * e==e	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#588	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#144	0.0	0.0	0.0	sigma!=rho	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoint#?,int,PointValuePair#311	0.0	0.0	0.0	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#parseOptimizationData#?,OptimizationData#539	0.0	0.0	0.0	!(data instanceof PopulationSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1127	0.0	0.0	0.0	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1027	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.0	0.0	0.0	columns!=0	_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#147	0.0	0.0	0.0	mti < N	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#ones#?,int,int#1139	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	0.0	0.0	0.0	maxEval>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0>=0	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#57	0.0	0.0	0.0	lo<init	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1073	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.0	0.0	0.0	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#PointValuePair#getPoint#?,int#296	0.0	0.0	0.0	!(index < 0 || index >= simplex.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#227	0.0	0.0	0.0	!(i < imagEigenvalues.length)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#randn1#?,int,int#1311	0.0	0.0	0.0	!(c < popSize)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex#?#MultiDirectionalSimplex#?,double[],double,double#117	0.0	0.0	0.0	khi>=gamma	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.0	0.0	0.0	(high | low) * 0x1.0p-52d>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#inverse#?,int[]#1273	0.0	0.0	0.0	i < indices.length	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double#3831	0.0	0.0	0.0	remA > 0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#sortedIndices#?,double[]#823	0.0	0.0	0.0	!(i < doubles.length)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#202	0.0	0.0	0.0	!(k < m)	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.0	0.0	0.0	getRowDimension()>=column	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	0.0	0.0	!(++count > maximalCount)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer#void#parseOptimizationData#?,OptimizationData#197	0.0	0.0	0.0	data instanceof AbstractSimplex	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	0.0	0.0	0.0	absoluteThreshold>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.0	0.0	0.0	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1200	0.0	0.0	0.0	step>=start	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#656	0.0	0.0	0.0	hsig	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#eye#?,int,int#1153	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1088	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.0	0.0	0.0	lo!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1058	0.0	0.0	0.0	!(c < cols.length)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#951	0.0	0.0	0.0	!(x[i] > uB[i])	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#setPoints#?,PointValuePair[]#325	0.0	0.0	0.0	!(points.length != simplex.length)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.0	0.0	0.0	i < nCols	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	0.0	0.0	0.0	dimension!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#push#?,double[],double#804	0.0	0.0	0.0	i > 0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	0.0	0.0	0.0	simplex.length!=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.0	0.0	0.0	functionValueAccuracy>=0	_
org.apache.commons.math3.optim.MaxEval#?#MaxEval#?,int#36	0.0	0.0	0.0	!(max <= 0)	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.0	0.0	0.0	searchStart>0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#216	0.0	0.0	0.0	!(i < diagonal.length)	_
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	0.0	0.0	0.0	iterations.getCount()>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	0.0	0.0	0.0	lambda>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#build#?,double[]#226	0.0	0.0	0.0	!(i < dimension)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#393	0.0	0.0	0.0	dotProduct!=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	0.0	0.0	0.0	finalK!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#int[]#reverse#?,int[]#1286	0.0	0.0	0.0	indices[indices.length - i - 1]!=i	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.0	0.0	0.0	evaluations.getCount()!=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.0	0.0	0.0	absoluteAccuracy>=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#483	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#log#?,RealMatrix#984	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#?#AbstractSimplex#?,double[]#98	0.0	0.0	0.0	!(steps == null)	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#void#parseOptimizationData#?,OptimizationData#308	0.0	0.0	0.0	!(data instanceof BracketingStep)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#?#PopulationSize#?,int#328	0.0	0.0	0.0	!(size <= 0)	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#343	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	0.0	0.0	0.0	finalRemA>=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#?#BracketFinder#?,double,int#94	0.0	0.0	0.0	!(maxEvaluations <= 0)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#updateCovarianceDiagonalOnly#?,boolean,RealMatrix#679	0.0	0.0	0.0	!(diagonalOnly > 1 && iterations > diagonalOnly)	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1042	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.0	0.0	0.0	relativeAccuracy>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#void#replaceWorstPoint#?,PointValuePair,Comparator<PointValuePair>#268	0.0	0.0	0.0	i < dimension	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.0	0.0	0.0	rows>0	_
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer#void#parseOptimizationData#?,OptimizationData#95	0.0	0.0	0.0	data instanceof ObjectiveFunctionGradient	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#606	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
