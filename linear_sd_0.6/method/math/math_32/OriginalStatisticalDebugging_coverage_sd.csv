line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.geometry.euclidean.threed.SubPlane#Side#side#?,Hyperplane<Euclidean3D>#77	0.0	0.0	0.0	crossP.dotProduct(otherPlane.getNormal()) < 0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#exponent#?,long#332	0.0	0.0	0.0	((int)((bits & EXPONENT_MASK) >> 52)) - 1075<=0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#computeLSB#?,long#393	0.0	0.0	0.0	lsb>0	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet#Vector2D[][]#getVertices#?#207	0.0	0.0	0.0	vertices == null	_
org.apache.commons.math3.util.FastMath#double#hypot#?,double,double#3571	0.0	0.0	0.0	!(Double.isNaN(x) || Double.isNaN(y))	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#Vector<S>#getBarycenter#?#395	0.0	0.0	0.0	!(barycenter == null)	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder#void#addContribution#?,SubHyperplane<Euclidean2D>,boolean#457	0.0	0.0	0.0	!(reversed)	_
org.apache.commons.math3.geometry.euclidean.threed.Plane#void#setNormal#?,Vector3D#138	0.0	0.0	0.0	!(norm < 1.0e-10)	_
org.apache.commons.math3.geometry.euclidean.threed.Plane#double#getOffset#?,Plane#406	0.0	0.0	0.0	originOffset + (sameOrientationAs(plane) ? -plane.originOffset : plane.originOffset)!=0	_
org.apache.commons.math3.geometry.partitioning.BSPTree#BSPTree<S>#getCell#?,Vector<S>#319	0.0	0.0	0.0	!(FastMath.abs(offset) < 1.0e-10)	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#void#characterize#?,BSPTree<S>,SubHyperplane<S>,Characterization<S>#346	0.0	0.0	0.0	node.getCut() == null	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet#List<ComparableSegment>#followLoop#?,AVLTree<ComparableSegment>.Node,AVLTree<ComparableSegment>#319	0.0	0.0	0.0	distance < selectedDistance	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1588	0.0	0.0	0.0	x * x<=x	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#boolean#rebalanceRightGrown#?#460	0.0	0.0	0.0	right.skew == Skew.RIGHT_HIGH	_
org.apache.commons.math3.geometry.partitioning.BSPTree#SubHyperplane<S>#fitToCell#?,SubHyperplane<S>#293	0.0	0.0	0.0	tree.parent != null	_
org.apache.commons.math3.geometry.euclidean.twod.Line#void#reset#?,Vector2D,Vector2D#139	0.0	0.0	0.0	FastMath.cos(angle)<=dy	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2195	0.0	0.0	0.0	!(remA > 0.0)	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment#int#compareTo#?,ComparableSegment#386	0.0	0.0	0.0	sortingKey.compareTo(o.sortingKey)!=0	_
org.apache.commons.math3.geometry.euclidean.twod.SubLine#SplitSubHyperplane<Euclidean2D>#split#?,Hyperplane<Euclidean2D>#180	0.0	0.0	0.0	!(crossing == null)	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#void#rotateCCW#?#621	0.0	0.0	0.0	!(right != null)	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#?#AbstractRegion#?,Collection<SubHyperplane<S>>#91	0.0	0.0	0.0	!(boundary.size() == 0)	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#computeMSB#?,long#363	0.0	0.0	0.0	scale >> 1!=msb	_
org.apache.commons.math3.geometry.partitioning.BSPTree#BSPTree<S>#split#?,SubHyperplane<S>#489	0.0	0.0	0.0	cut == null	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getY#?#206	0.0	0.0	0.0	y>0	_
org.apache.commons.math3.geometry.partitioning.Characterization#void#add#?,SubHyperplane<S>,boolean#76	0.0	0.0	0.0	in == null	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#boolean#isEmpty#?,BSPTree<S>#236	0.0	0.0	0.0	!(node.getCut() == null)	_
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet#void#recurseList#?,BSPTree<Euclidean1D>,List<Interval>,double,double#241	0.0	0.0	0.0	!((checkPoint(low,loc) == Location.INSIDE) && (checkPoint(high,loc) == Location.INSIDE))	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#Location#checkPoint#?,BSPTree<S>,Vector<S>#265	0.0	0.0	0.0	cell.getCut() == null	_
org.apache.commons.math3.geometry.euclidean.oned.Interval#double#getUpper#?#53	0.0	0.0	0.0	upper!=0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,double,double#96	0.0	0.0	0.0	x!=z	_
org.apache.commons.math3.geometry.euclidean.oned.Interval#double#getLower#?#46	0.0	0.0	0.0	lower<0	_
org.apache.commons.math3.geometry.euclidean.threed.Line#void#reset#?,Vector3D,Vector3D#76	0.0	0.0	0.0	!(norm2 == 0.0)	_
org.apache.commons.math3.geometry.partitioning.BSPTree#boolean#insertCut#?,Hyperplane<S>#156	0.0	0.0	0.0	!(chopped.isEmpty())	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#void#insertCuts#?,BSPTree<S>,Collection<SubHyperplane<S>>#180	0.0	0.0	0.0	(inserted == null) && iterator.hasNext()	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#Node#getNext#?#335	0.0	0.0	0.0	!(node != node.parent.right)	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#long#sign#?,long#324	0.0	0.0	0.0	bits & SIGN_MASK>=0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#dotProduct#?,Vector<Euclidean3D>#454	0.0	0.0	0.0	MathArrays.linearCombination(x,v3.x,y,v3.y,z,v3.z)<=0	_
org.apache.commons.math3.util.MathArrays#double#linearCombination#?,double,double,double,double#700	0.0	0.0	0.0	(prod2High - (s12High - s12Prime)) + (prod1High - s12Prime)!=a2	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#Vector3D#orthogonal#?#330	0.0	0.0	0.0	1 / FastMath.sqrt(x * x + z * z)>threshold	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3492	0.0	0.0	0.0	(a <= b) ? b : a>=0	_
org.apache.commons.math3.util.MathArrays#double#linearCombination#?,double,double,double,double,double,double#801	0.0	0.0	0.0	s123High + (prod1Low + prod2Low + prod3Low+ s12Low+ s123Low)>=cb3	_
org.apache.commons.math3.util.FastMath#double#scalb#?,double,int#3057	0.0	0.0	0.0	d * Double.longBitsToDouble(((long)(n + 1023)) << 52)>=0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#compareTo#?,OrderedTuple#248	0.0	0.0	0.0	components.length == ot.components.length	_
org.apache.commons.math3.geometry.partitioning.BSPTree#void#chopOffPlus#?,Hyperplane<S>#628	0.0	0.0	0.0	!(cut != null)	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2261	0.0	0.0	0.0	(int)(xa * 0.6366197723675814)>=quadrant	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1608	0.0	0.0	0.0	x * x<x	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#void#recurseSides#?,BSPTree<S>,SubHyperplane<S>,Sides#488	0.0	0.0	0.0	!(!(sides.plusFound() && sides.minusFound()))	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#void#delete#?#402	0.0	0.0	0.0	!(node.parent == null)	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#Node#getSmallest#?#275	0.0	0.0	0.0	!(node.left != null)	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getZ#?#214	0.0	0.0	0.0	z==0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0	0.0	0.0	Math.sqrt(a)!=0	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#?#Vector2D#?,double,double#70	0.0	0.0	0.0	y>x	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree#Node#getNotSmaller#?,T#155	0.0	0.0	0.0	!(node.right == null)	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#boolean#insert#?,T#351	0.0	0.0	0.0	!(left == null)	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#double#getX#?#150	0.0	0.0	0.0	x<=0	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#double#getSize#?#380	0.0	0.0	0.0	!(barycenter == null)	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#BSPTree<S>#getTree#?,boolean#279	0.0	0.0	0.0	includeBoundaryAttributes && (tree.getCut() != null) && (tree.getAttribute() == null)	_
org.apache.commons.math3.geometry.partitioning.BSPTree#BSPTree<S>#copySelf#?#181	0.0	0.0	0.0	!(cut == null)	_
org.apache.commons.math3.geometry.euclidean.oned.Interval#double#getMidPoint#?#67	0.0	0.0	0.0	0.5 * (lower + upper)!=0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#getBit#?,int,int#414	0.0	0.0	0.0	(int)((m >> (k - e)) & 0x1L)>0	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#void#rotateCW#?#596	0.0	0.0	0.0	!(left != null)	_
org.apache.commons.math3.geometry.euclidean.threed.Plane#Vector3D#intersection#?,Plane,Plane,Plane#356	0.0	0.0	0.0	b2 * c3 - b3 * c2!=c2	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3424	0.0	0.0	0.0	(a <= b) ? a : b>0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,Vector3D#139	0.0	0.0	0.0	a * u.y<a	_
org.apache.commons.math3.util.MathUtils#double#normalizeAngle#?,double,double#91	0.0	0.0	0.0	a - TWO_PI * FastMath.floor((a + FastMath.PI - center) / TWO_PI)<=0	_
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet#void#computeGeometricalProperties#?#150	0.0	0.0	0.0	!(Double.isInfinite(size))	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getNormSq#?#249	0.0	0.0	0.0	x * x + y * y + z * z>=0	_
org.apache.commons.math3.geometry.euclidean.oned.Interval#?#Interval#?,double,double#38	0.0	0.0	0.0	lower<=upper	_
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint#double#getOffset#?,Vector<Euclidean1D>#59	0.0	0.0	0.0	direct ? delta : -delta<0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#void#encode#?,int#184	0.0	0.0	0.0	minOffset + 31>=minOffset	_
org.apache.commons.math3.geometry.euclidean.threed.Plane#Line#intersection#?,Plane#323	0.0	0.0	0.0	direction.getNorm() < 1.0e-10	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#boolean#rebalanceLeftGrown#?#418	0.0	0.0	0.0	left.skew == Skew.LEFT_HIGH	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2539	0.0	0.0	0.0	-(temp - ya - yb)<=temp	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree#void#insert#?,T#62	0.0	0.0	0.0	element != null	_
org.apache.commons.math3.util.FastMath#int#getExponent#?,double#3671	0.0	0.0	0.0	(int)((Double.doubleToLongBits(d) >>> 52) & 0x7ff) - 1023<=0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#?#OrderedTuple#?,double#166	0.0	0.0	0.0	lsb <= msb	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#double#getY#?#158	0.0	0.0	0.0	y==0	_
org.apache.commons.math3.geometry.euclidean.twod.SubLine#Side#side#?,Hyperplane<Euclidean2D>#159	0.0	0.0	0.0	!(crossing == null)	_
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node#boolean#rebalanceLeftShrunk#?#504	0.0	0.0	0.0	!(right.skew == Skew.BALANCED)	_
org.apache.commons.math3.geometry.partitioning.BSPTree#void#visit#?,BSPTreeVisitor<S>#242	0.0	0.0	0.0	cut == null	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet#void#computeGeometricalProperties#?#159	0.0	0.0	0.0	x1>sumX	GT
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,Vector3D,double,Vector3D,double,Vector3D#170	0.0	0.0	0.0	MathArrays.linearCombination(a1,u1.y,a2,u2.y,a3,u3.y)<a1	_
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor#void#addContribution#?,SubHyperplane<Euclidean3D>,boolean#173	0.0	0.0	0.0	!(Double.isInfinite(area))	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getNorm#?#243	0.0	0.0	0.0	FastMath.sqrt(x * x + y * y + z * z)!=0	_
org.apache.commons.math3.geometry.partitioning.BSPTree#BSPTree<S>#merge#?,BSPTree<S>,LeafMerger<S>,BSPTree<S>,boolean#394	0.0	0.0	0.0	!(parentTree != null)	_
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane#double#getSize#?#89	0.0	0.0	0.0	remainingRegion.getSize()>=0	_
org.apache.commons.math3.geometry.euclidean.oned.Vector1D#double#getX#?#128	0.0	0.0	0.0	x!=0	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#double#distance#?,Vector<Euclidean2D>#263	0.0	0.0	0.0	p3.y - y<dx	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder#void#visitInternalNode#?,BSPTree<Euclidean2D>#430	0.0	0.0	0.0	!(attribute.getPlusOutside() != null)	_
org.apache.commons.math3.geometry.euclidean.twod.Line#double#getAngle#?#286	0.0	0.0	0.0	MathUtils.normalizeAngle(angle,FastMath.PI)<=0	_
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor#void#visitInternalNode#?,BSPTree<Euclidean3D>#155	0.0	0.0	0.0	!(attribute.getPlusInside() != null)	_
org.apache.commons.math3.geometry.partitioning.BSPTree#void#chopOffMinus#?,Hyperplane<S>#614	0.0	0.0	0.0	cut != null	_
org.apache.commons.math3.geometry.euclidean.twod.Line#double#getOffset#?,Line#230	0.0	0.0	0.0	originOffset + ((cos * line.cos + sin * line.sin > 0) ? -line.originOffset : line.originOffset)>0	_
org.apache.commons.math3.util.FastMath#double#doubleHighPart#?,double#366	0.0	0.0	0.0	Double.longBitsToDouble(xl)<=0	_
org.apache.commons.math3.geometry.euclidean.oned.Interval#double#getLength#?#60	0.0	0.0	0.0	upper - lower>=0	_
org.apache.commons.math3.geometry.partitioning.BSPTree#void#condense#?#336	0.0	0.0	0.0	(cut != null) && (plus.cut == null) && (minus.cut == null)&& (((plus.attribute == null) && (minus.attribute == null)) || ((plus.attribute != null) && plus.attribute.equals(minus.attribute)))	_
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet#BSPTree<Euclidean1D>#buildTree#?,double,double#94	0.0	0.0	0.0	!(Double.isInfinite(lower) && (lower < 0))	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1638	0.0	0.0	0.0	polySine(epsilon)>=costA	_
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger#BSPTree<S>#merge#?,BSPTree<S>,BSPTree<S>,BSPTree<S>,boolean,boolean#164	0.0	0.0	0.0	(Boolean)leaf.getAttribute()	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1756	0.0	0.0	0.0	pi2b - xb>=pi2b	_
org.apache.commons.math3.geometry.partitioning.AbstractRegion#void#recurseBuildBoundary#?,BSPTree<S>#319	0.0	0.0	0.0	!(minusChar.hasOut())	_
org.apache.commons.math3.geometry.euclidean.threed.SubPlane#SplitSubHyperplane<Euclidean3D>#split#?,Hyperplane<Euclidean3D>#115	0.0	0.0	0.0	crossP.dotProduct(otherPlane.getNormal()) < 0	_
org.apache.commons.math3.util.FastMath#double#floor#?,double#3347	0.0	0.0	0.0	y == 0	_
org.apache.commons.math3.geometry.partitioning.BSPTree#void#insertInTree#?,BSPTree<S>,boolean#577	0.0	0.0	0.0	cut != null	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getX#?#198	0.0	0.0	0.0	x>=0	_
org.apache.commons.math3.util.FastMath#double#atan2#?,double,double#2647	0.0	0.0	0.0	!(x == Double.NEGATIVE_INFINITY)	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3020	0.0	0.0	0.0	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x>0	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#long#mantissa#?,long#340	0.0	0.0	0.0	((bits & EXPONENT_MASK) == 0) ? ((bits & MANTISSA_MASK) << 1) : (IMPLICIT_ONE | (bits & MANTISSA_MASK))>0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,Vector3D,double,Vector3D#152	0.0	0.0	0.0	MathArrays.linearCombination(a1,u1.x,a2,u2.x)>=a2	_
org.apache.commons.math3.geometry.euclidean.twod.Line#Vector2D#intersection#?,Line#199	0.0	0.0	0.0	!(FastMath.abs(d) < 1.0e-10)	_
