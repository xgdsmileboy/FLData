line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.9990850869167429	0.9990850869167429	0.9985361390667886	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.9990850869167429	0.9990850869167429	0.9978042086001829	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.9977127172918573	0.9977127172918573	0.9977127172918573	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.9977127172918573	0.9977127172918573	0.9977127172918573	parameters == null	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#203	0.9977127172918573	0.9977127172918573	0.9977127172918573	maxYIdx!=0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.9977127172918573	0.9977127172918573	0.9973467520585544	!(observations.length < 3)	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.9972552607502287	0.9972552607502287	0.9972552607502287	Gaussian.value(diff,param[0],i2s2)>0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#616	0.9931381518755719	0.9995425434583715	0.996248856358646	FastMath.min(paru,lmPar)>delta	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#384	0.9903934126258005	1.0	0.9959743824336688	(actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5>=xNorm	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.9908508691674291	0.9990850869167429	0.9957913998170174	x==weight	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.9945105215004575	0.9954254345837146	0.9950594693504118	norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2)!=0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.9913083257090577	0.9967978042086002	0.9946020128087831	x==0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.9908508691674291	0.9945105215004575	0.9930466605672461	sin * cotan>=dpj	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.9913083257090577	0.9917657822506862	0.9915827996340348	y>0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.9913083257090577	0.9913083257090577	0.9913083257090577	weight>0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.979871912168344	0.9935956084172004	0.9875571820677036	gamma * weightedResidualJacobian[j][pk]>ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.9766697163769442	0.9853613906678865	0.9818847209515096	orthoTolerance==parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#842	0.9780420860018298	0.9812442817932296	0.9799634034766698	permutation[k]<k	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.9684354986276303	0.9830741079597438	0.9772186642268985	cols<i	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.9711802378774016	0.9711802378774016	0.9709972552607502	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.9684354986276303	0.9688929551692589	0.9687099725526074	-ji[j] * wi<wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.9679780420860018	0.9679780420860018	0.9679780420860018	point.length!=maxEval	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#120	0.9679780420860018	0.9679780420860018	0.9679780420860018	!(w == null)	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.9579139981701739	0.9583714547118024	0.958188472095151	a>=0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.9515096065873742	0.9556267154620312	0.9539798719121684	relativeThreshold>0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.9519670631290027	0.9519670631290027	0.9519670631290027	absoluteThreshold>0	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#765	0.8993595608417201	0.9867337602927722	0.94903934126258	EXP_INT_TABLE_B[750 + intVal]>x	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.9085086916742909	0.9085086916742909	0.9085086916742909	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.8879231473010064	0.9190301921317475	0.906587374199451	a>0	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.8751143641354071	0.8792314730100641	0.8775846294602012	exp(x,0.0,null)>0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.8723696248856359	0.8687099725526075	0.8639524245196706	o instanceof Object[]	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.8572735590118938	0.8577310155535224	0.857548032936871	(a <= b) ? a : b>0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.7804208600182982	0.7840805123513266	0.7826166514181152	Math.sqrt(a)!=0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.6971637694419031	0.7150045745654163	0.7078682525160109	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x>0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.9990850869167429	0.0	0.3996340347666972		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.9977127172918573	0.0	0.39908508691674294		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.9977127172918573	0.0	0.39908508691674294		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.9977127172918573	0.0	0.39908508691674294		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#154	0.9972552607502287	0.0	0.39890210430009154		_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.9967978042086002	0.0	0.3987191216834401		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.9958828911253431	0.0	0.39835315645013725		_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.9954254345837146	0.0	0.39817017383348585		_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.9935956084172004	0.0	0.39743824336688016		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.9913083257090577	0.0	0.3965233302836231		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#152	0.9913083257090577	0.0	0.3965233302836231		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.9913083257090577	0.0	0.3965233302836231		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.9913083257090577	0.0	0.3965233302836231		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.9913083257090577	0.0	0.3965233302836231		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.9908508691674291	0.0	0.3963403476669717		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.9908508691674291	0.0	0.3963403476669717		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#53	0.9903934126258005	0.0	0.39615736505032023		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.9894784995425434	0.0	0.3957913998170174		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.9858188472095151	0.0	0.39432753888380606		_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.970722781335773	0.0	0.38828911253430926		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#73	0.9702653247941445	0.0	0.3881061299176578		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.9684354986276303	0.0	0.38737419945105217		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.9684354986276303	0.0	0.38737419945105217		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.9684354986276303	0.0	0.38737419945105217		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.9679780420860018	0.0	0.3871912168344007		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.9679780420860018	0.0	0.3871912168344007		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.9670631290027447	0.0	0.38682525160109793		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.9670631290027447	0.0	0.38682525160109793		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.9451052150045746	0.0	0.37804208600182987		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#62	0.9451052150045746	0.0	0.37804208600182987		_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.9066788655077768	0.0	0.3626715462031107		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.9048490393412626	0.0	0.36193961573650507		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.8865507776761208	0.0	0.35462031107044834		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.853156450137237	0.0	0.3412625800548948		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#68	0.8316559926806953	0.0	0.3326623970722782		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1130	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1071	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1909	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1729	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1810	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#988	-0.06724611161939616	0.0	-0.026898444647758465		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	-0.06724611161939616	0.0	-0.026898444647758465		_
