line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#cluster#?,Collection<T>,int,int#99	0.9990974729241877	1.0	0.9994587280108255	(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations<k	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#324	0.9986468200270636	0.9995485327313771	0.9991878476496517	point.distanceFrom(c.getCenter())==minDistance	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#188	0.9990974729241877	0.9990974729241877	0.9990974729241877	dx2[i] >= r	GT
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#85	0.9986468200270636	0.9986468200270636	0.9984667214120903	point[i] != otherPoint[i]	_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	0.9981965734896302	0.9981965734896302	0.9981965734896302	MathUtils.distance(point,p.getPoint())>=0	_
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	0.9977467327625057	0.9981965734896302	0.9980166371987804	FastMath.sqrt(sum)==0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.821826280623608	0.9417269247128881	0.893766667077176	Math.sqrt(a)<=0	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random#69	0.9990974729241877	0.0	0.3996389891696751		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#void#assignPointsToClusters#?,Collection<Cluster<T>>,Collection<T>#147	0.9986468200270636	0.0	0.3994587280108255		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random,EmptyClusterStrategy#79	0.9986468200270636	0.0	0.3994587280108255		_
org.apache.commons.math.stat.clustering.Cluster#void#addPoint#?,T#55	0.9986468200270636	0.0	0.3994587280108255		_
org.apache.commons.math.stat.clustering.Cluster#T#getCenter#?#71	0.9986468200270636	0.0	0.3994587280108255		_
org.apache.commons.math.stat.clustering.Cluster#?#Cluster#?,T#46	0.9986468200270636	0.0	0.3994587280108255		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#?#EuclideanIntegerPoint#?,int[]#44	0.9968482665466006	0.0	0.39873930661864027		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#int[]#getPoint#?#52	0.9968482665466006	0.0	0.39873930661864027		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1868	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1057	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1201	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	0.0	0.0	0.0		_
