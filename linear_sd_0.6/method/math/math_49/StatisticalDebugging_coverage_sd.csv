line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.OpenMapRealVector#void#setEntry#?,int,double#666	0.0	1.3333333333333335	0.8	!(entries.containsKey(index))	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#void#advance#?#563	0.0	0.8888888888888888	0.5333333333333333	referenceCount != count	_
org.apache.commons.math.linear.OpenMapRealVector#double#getEntry#?,int#480	0.0	0.4444444444444444	0.26666666666666666	entries.get(index)==0	_
org.apache.commons.math.linear.AbstractRealVector#void#checkVectorDimensions#?,int#63	0.0	0.33333333333333337	0.2	getDimension()<=n	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int#212	0.0	0.2	0.12	!(containsKey(key,index))	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#doRemove#?,int#397	0.0	0.06666666666666668	0.04000000000000001	missingEntries<=previous	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#remove#?,int#356	0.0	0.06666666666666667	0.04	containsKey(key,index)	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#get#?,int#186	0.0	0.030303030303030304	0.01818181818181818	states[index] == FREE	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#int#key#?#535	0.0	0.01785714285714285	0.01071428571428571	keys[current]==0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#put#?,int,double#411	0.0	0.01363636363636364	0.008181818181818182	missingEntries<=value	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#hashOf#?,int#479	0.0	0.00264812975835816	0.001588877855014896	h ^ (h >>> 7) ^ (h >>> 4)==0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int#259	0.0	0.002097902097902102	0.0012587412587412611	findInsertionIndex(keys,states,key,mask)==0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int[],byte[],int,int#275	0.0	0.002097902097902102	0.0012587412587412611	index<=0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3410	0.0	0.0010972032033190397	6.583219219914238E-4	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math.util.FastMath#double#ceil#?,double#3757	0.0	0.0010109650828213704	6.065790496928222E-4	y>0	_
org.apache.commons.math.util.FastMath#double#floor#?,double#3737	0.0	8.808295116183333E-4	5.284977069709999E-4	!(y == 0)	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#157	0.0	6.493506493506496E-4	3.896103896103897E-4	Integer.highestOneBit(capacity)>=capacity	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#126	0.0	6.265664160401002E-4	3.759398496240601E-4	capacity - 1>expectedSize	_
org.apache.commons.math.linear.OpenMapRealVector#OpenMapRealVector#ebeMultiply#?,RealVector#371	0.0	0.0	0.0	iter.hasNext()	GT
org.apache.commons.math.linear.OpenMapRealVector#int#getDimension#?#422	0.0	0.0	0.0	virtualSize>0	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#double#value#?#549	0.0	0.0	0.0	!(current < 0)	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,OpenIntToDoubleHashMap#142	0.0	0.0	0.0	source.size<length	_
org.apache.commons.math.linear.AbstractRealVector#void#checkIndex#?,int#76	0.0	0.0	0.0	!(index < 0 || index >= getDimension())	_
