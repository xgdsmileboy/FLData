line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.0	0.0	0.0	sampleSize!=0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.0	0.0	0.0	inverseCumulativeProbability(random.nextDouble())<0	_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.0	0.0	0.0	(j + r - 1) % r<=w	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.0	0.0	0.0	(n * m * (N - n)* (N - m)) / (N * N * (N - 1))>=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.0	0.0	0.0	populationSize>=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	0.0	0.0	0.0	Math.sqrt(a)>=0	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#111	0.0	0.0	0.0	z4 >>> (32 - bits)>=0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.0	0.0	0.0	upper<=0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.0	0.0	0.0	(high | low) * 0x1.0p-52d>=0	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.0	0.0	0.0	(a <= b) ? a : b!=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.0	0.0	0.0	(double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize()<0	GT
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#101	0.0	0.0	0.0	!(p < 0.0 || p > 1.0)	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#279	0.0	0.0	0.0	!numericalVarianceIsCalculated	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.0	0.0	0.0	FastMath.min(getNumberOfSuccesses(),getSampleSize())>0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.0	0.0	0.0	(a <= b) ? b : a>=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#103	0.0	0.0	0.0	!(sampleSize > populationSize)	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#162	0.0	0.0	0.0	i < v.length	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.0	0.0	0.0	FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize())>=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.0	0.0	0.0	numberOfSuccesses>0	_
