line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.distribution.FDistributionImpl#double#getInitialDomain#?,double#147	0.33333333333333337	1.0	0.7333333333333334	d / (d - 2.0)<=p	GT
org.apache.commons.math.distribution.FDistributionImpl#double#cumulativeProbability#?,double#76	0.125	0.5	0.35	getDenominatorDegreesOfFreedom()==n	_
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainLowerBound#?,double#119	0.33333333333333337	0.33333333333333337	0.33333333333333337	0.0<=0	_
org.apache.commons.math.distribution.FDistributionImpl#double#getDomainUpperBound#?,double#132	0.33333333333333337	0.33333333333333337	0.33333333333333337	Double.MAX_VALUE>=0	_
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double,int#178	0.5	0.5	0.32222222222222224	initial < lowerBound || initial > upperBound || lowerBound >= upperBound	_
org.apache.commons.math.distribution.FDistributionImpl#double#inverseCumulativeProbability#?,double#103	0.25	0.25	0.22999999999999998	!(p == 1)	_
org.apache.commons.math.distribution.FDistributionImpl#void#setNumeratorDegreesOfFreedom#?,double#158	0.16666666666666663	0.16666666666666663	0.16666666666666663	!(degreesOfFreedom <= 0.0)	_
org.apache.commons.math.distribution.FDistributionImpl#void#setDenominatorDegreesOfFreedom#?,double#180	0.16666666666666663	0.16666666666666663	0.16666666666666663	!(degreesOfFreedom <= 0.0)	_
org.apache.commons.math.distribution.FDistributionImpl#double#getDenominatorDegreesOfFreedom#?#192	0.11111111111111116	0.11111111111111116	0.11111111111111116	denominatorDegreesOfFreedom!=0	_
org.apache.commons.math.distribution.FDistributionImpl#double#getNumeratorDegreesOfFreedom#?#170	0.11111111111111116	0.11111111111111116	0.11111111111111116	numeratorDegreesOfFreedom!=0	_
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#200	0.019230769230769273	0.16666666666666663	0.10769230769230768	Gamma.logGamma(a) + Gamma.logGamma(b) - Gamma.logGamma(a + b)>a	_
org.apache.commons.math.distribution.FDistributionImpl#?#FDistributionImpl#?,double,double#52	0.19999999999999996	0.0	0.07999999999999999		_
org.apache.commons.math.distribution.AbstractContinuousDistribution#double#inverseCumulativeProbability#?,double#80	0.06666666666666665	0.06666666666666665	0.06666666666666665	getDomainLowerBound(p)<p	_
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#145	0.012345679012345734	0.045454545454545414	0.03221099887766554	a * q1 + b * q0<p0	_
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#156	0.019607843137254943	0.03703703703703709	0.030065359477124232	Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) - Math.log(a) - logBeta(a,b,epsilon,maxIterations)) * 1.0 / fraction.evaluate(x,epsilon,maxIterations)>x	_
org.apache.commons.math.analysis.UnivariateRealSolverUtils#double[]#bracket#?,UnivariateRealFunction,double,double,double#128	0.05555555555555558	0.0	0.022222222222222233		_
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double#59	0.016949152542372836	0.01851851851851849	0.01789077212806023	regularizedBeta(x,a,b,DEFAULT_EPSILON,Integer.MAX_VALUE)!=0	_
org.apache.commons.math.special.Gamma#double#logGamma#?,double#106	0.010000000000000009	0.022222222222222254	0.017216828478964417	ret<0	_
org.apache.commons.math.distribution.AbstractContinuousDistribution#?#AbstractContinuousDistribution#?#45	0.023809523809523836	0.0	0.009523809523809535		_
org.apache.commons.math.distribution.AbstractDistribution#?#AbstractDistribution#?#38	0.019230769230769273	0.0	0.00769230769230771		_
org.apache.commons.math.util.ContinuedFraction#?#ContinuedFraction#?#51	0.012345679012345734	0.0	0.004938271604938294		_
