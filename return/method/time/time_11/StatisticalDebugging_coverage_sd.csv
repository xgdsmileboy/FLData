line	original_score	max_predicate_score	total	predicate	label
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	0.0	0.75	0.75	iWallOffset>0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	0.0	0.75	0.75	iStandardOffset>0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	0.0	0.3302325581395349	0.3302325581395349	instant<=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	0.0	0.3302277432712215	0.3302277432712215	instant<0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	0.0	0.3250345781466113	0.3250345781466113	next - offset<=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.3250345781466113	0.3250345781466113	iOfYear.next(instant,standardOffset,saveMillis)<=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.3250345781466113	0.3250345781466113	next<=0	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	0.0	0.23333333333333328	0.23333333333333328	instant<0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	0.0	0.20512820512820512	0.20512820512820512	ImpreciseDateTimeField.this.add(instant,value)<=0	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	0.10815690136221892	0.10815690136221892	getDurationField().add(instant,value)<=0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	0.09259259259259259	0.09259259259259259	FieldUtils.safeAdd(instant,value)<0	_
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	0.0	0.0726027397260274	0.0726027397260274	difference==0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	0.0	0.06605006534633558	0.06605006534633558	datePart + timePart<0	_
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	0.0	0.06559263521288838	0.06559263521288838	iChronology.getYearDifference(minuendInstant,subtrahendInstant)==0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	0.0	0.06342710997442455	0.06342710997442455	ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant)==0	_
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	0.0	0.052568697729988054	0.052568697729988054	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))==0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	0.0	0.047619047619047616	0.047619047619047616	next<0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	0.0	0.04710960960960961	0.04710960960960961	millis<0	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	0.03686551001129006	0.03686551001129006	FieldUtils.safeAdd(instant,addition)<0	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	0.0	0.036273860752510205	0.036273860752510205	iChronology.getYear(instant)<0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	0.0	0.0357142857142857	0.0357142857142857	iWallOffset - iStandardOffset!=0	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	0.0	0.035669047980949484	0.035669047980949484	year<0	_
org.joda.time.Period#int#getYears#?#704	0.0	0.025161887141535614	0.025161887141535614	getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX)>0	_
org.joda.time.Period#int#getMonths#?#713	0.0	0.023425022182786154	0.023425022182786154	getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX)>0	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	0.0	0.019509368360054086	0.019509368360054086	sum<0	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	0.0	0.015725029523276774	0.015725029523276774	(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY<0	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	0.0	0.014885493102139992	0.014885493102139992	instant + (value - get(instant)) * iUnitMillis<0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	0.0	0.013550229298260795	0.013550229298260795	iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant)<0	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	0.0	0.01203616945098308	0.01203616945098308	instant + (value - get(instant)) * iUnitMillis<0	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#554	0.0	0.011870845204178537	0.011870845204178537	(DateTimeConstants.MILLIS_PER_DAY - 1) + (int)((instant + 1) % DateTimeConstants.MILLIS_PER_DAY)>0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	0.0	0.010850260850260852	0.010850260850260852	iChronology.setYear(instant,year)<0	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	0.0	0.009786117836965294	0.009786117836965294	instant<0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	0.0	0.008035671542780547	0.008035671542780547	millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY<0	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#82	0.0	0.006888304233436975	0.006888304233436975	iRange - 1 + (int)(((instant + 1) / getUnitMillis()) % iRange)>0	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	0.0	0.00686024003097174	0.00686024003097174	getYearInfo(year).iFirstDayMillis<0	_
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	0.0	0.005352672019338685	0.005352672019338685	(int)value==0	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#140	0.0	0.002746959894385542	0.002746959894385542	MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]<=0	_
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	0.0	0.002372108992165797	0.002372108992165797	difference / iUnitMillis>0	_
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	0.0	0.0023213501474371023	0.0023213501474371023	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))>0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#280	0.0	0.002136752136752136	0.002136752136752136	difference>0	_
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	0.0	0.0015235501961165677	0.0015235501961165677	(realIndex == -1 ? 0 : period.getValue(realIndex))==0	_
org.joda.time.base.BasePeriod#int#getValue#?,int#329	0.0	0.00129029656660148	0.00129029656660148	iValues[index]==0	_
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	0.0	3.637392393808347E-4	3.637392393808347E-4	diff>0	_
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	0.0	1.6961849972437024E-4	1.6961849972437024E-4	getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset>0	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	0.0	5.6442864828157736E-5	5.6442864828157736E-5	sum>0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	0.0	0.0	0.0	iChronology.getDaysInMonthMaxForSet(instant,value)!=0	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	(1970L * MILLIS_PER_YEAR) / 2!=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	0.0	0.0	0.0	iUnitMillis>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	iSaveMillis==0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMinimumValue#?#55	0.0	0.0	0.0	1>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	0.0	0.0	0.0	iMillis<=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1132	0.0	0.0	0.0	Long.MAX_VALUE>=0	_
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	0.0	0.0	0.0	System.currentTimeMillis()!=0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	0.0	0.0	0.0	iRange - 1!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	0.0	0.0	0.0	iRecurrence.getSaveMillis()!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	0.0	0.0	0.0	iToYear>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	0.0	0.0	0.0	(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1>0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	0.0	0.0	0.0	MIN_DAYS_PER_MONTH_ARRAY[month - 1]>0	_
org.joda.time.PeriodType#int#size#?#617	0.0	0.0	0.0	iTypes.length>=0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	MILLIS_PER_YEAR / 2>0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	0.0	0.0	0.0	iChronology.getDayOfWeek(instant)>=0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	MAX_YEAR>0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28)>=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	0.0	0.0	0.0	iChronology.getDayOfMonth(instant)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	0.0	0.0	0.0	7 + (int)((daysSince19700101 + 4) % 7)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	0.0	0.0	0.0	getDayOfMonth(millis,year,month)>0	_
org.joda.time.base.AbstractPeriod#int#size#?#56	0.0	0.0	0.0	getPeriodType().size()!=0	_
org.joda.time.field.PreciseDurationDateTimeField#int#getMinimumValue#?#150	0.0	0.0	0.0	0>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	0.0	0.0	0.0	getDayOfMonth(millis,year,month)>0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	0.0	0.0	0.0	(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1!=0	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	0.0	0.0	0.0	(isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12)))>=0	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	MIN_YEAR<=0	_
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	0.0	0.0	0.0	cMillisProvider.getMillis()>=0	_
