line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#?#MultiStartUnivariateRealOptimizer#?,BaseUnivariateRealOptimizer<FUNC>,int,RandomGenerator#73	1.0	0.0	1.0		_
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,FUNC,GoalType,double,double#146	1.0	0.0	1.0		GT
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#void#sortPairs#?,GoalType#191	1.0	0.0	1.0		_
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,FUNC,GoalType,double,double,double#176	1.0	0.0	1.0		GT
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#int#getMaxEvaluations#?#60	0.5	0.5	1.0	evaluations.getMaximalCount()!=0	_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#double#getValue#?#65	0.25	0.3333333333333333	0.5833333333333333	value<=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#int#getEvaluations#?#65	0.25	0.25	0.5	evaluations.getCount()>0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getMax#?#84	0.1111111111111111	0.3333333333333333	0.4444444444444444	searchMax<=0	_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#double#getPoint#?#56	0.125	0.25	0.375	point<0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getStartValue#?#90	0.1111111111111111	0.25	0.3611111111111111	searchStart<0	_
org.apache.commons.math.util.Incrementor#int#getMaximalCount#?#53	0.14285714285714285	0.14285714285714285	0.2857142857142857	maximalCount!=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getMin#?#78	0.1111111111111111	0.16666666666666666	0.2777777777777778	searchMin<=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#computeObjectiveValue#?,double#110	0.125	0.14285714285714285	0.26785714285714285	function.value(point)<=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,UnivariateRealFunction,GoalType,double,double#144	0.2	0.0	0.2		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3224	0.00546448087431694	0.16666666666666666	0.1721311475409836	(a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b)<0	_
org.apache.commons.math.optimization.univariate.BrentOptimizer#UnivariateRealPointValuePair#doOptimize#?#216	0.16666666666666666	0.0	0.16666666666666666		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#void#setMaxEvaluations#?,int#55	0.125	0.0	0.125		_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#?#UnivariateRealPointValuePair#?,double,double#47	0.125	0.0	0.125		_
org.apache.commons.math.util.MathUtils#boolean#equals#?,double,double#417	0.1111111111111111	0.0	0.1111111111111111		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,UnivariateRealFunction,GoalType,double,double,double#136	0.1111111111111111	0.0	0.1111111111111111		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#ConvergenceChecker<UnivariateRealPointValuePair>#getConvergenceChecker#?#158	0.1111111111111111	0.0	0.1111111111111111		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#GoalType#getGoalType#?#72	0.1111111111111111	0.0	0.1111111111111111		_
org.apache.commons.math.optimization.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double#80	0.1111111111111111	0.0	0.1111111111111111		_
org.apache.commons.math.util.Incrementor#int#getCount#?#62	0.043478260869565216	0.045454545454545456	0.08893280632411067	count!=0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3260	0.002336448598130841	0.07142857142857142	0.07376502002670227	(a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a)<0	_
org.apache.commons.math.util.MathUtils#boolean#equals#?,double,double,int#489	0.03571428571428571	0.0	0.03571428571428571		_
org.apache.commons.math.util.FastMath#long#abs#?,long#3016	0.008547008547008548	0.017543859649122806	0.026090868196131354	(x < 0l) ? -x : x!=0	_
org.apache.commons.math.util.FastMath#double#ulp#?,double#3044	0.008333333333333333	0.008333333333333333	0.016666666666666666	abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1))>=0	_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1521	0.006944444444444444	0.006944444444444444	0.013888888888888888	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1478	0.006944444444444444	0.006944444444444444	0.013888888888888888	ys[0] + ys[1]==0	_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#705	0.006944444444444444	0.006944444444444444	0.013888888888888888	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#913	0.006944444444444444	0.006944444444444444	0.013888888888888888	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.008849557522123894	0.0	0.008849557522123894		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.008620689655172414	0.0	0.008620689655172414		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.00847457627118644	0.0	0.00847457627118644		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1535	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#740	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1397	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#864	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#751	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#714	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#800	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#763	0.006944444444444444	0.0	0.006944444444444444		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#219	0.0019305019305019305	0.00196078431372549	0.0038912862442274207	Math.sqrt(a)>0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3034	0.001392757660167131	0.002012072434607646	0.0034048300947747768	(x < 0.0) ? -x : x<=0	_
