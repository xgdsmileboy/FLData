line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#int#getMaxEvaluations#?#60	0.33333333333333337	0.33333333333333337	0.6666666666666667	evaluations.getMaximalCount()!=0	_
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#?#MultiStartUnivariateRealOptimizer#?,BaseUnivariateRealOptimizer<FUNC>,int,RandomGenerator#73	0.5	0.0	0.5		_
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,FUNC,GoalType,double,double#146	0.5	0.0	0.5		GT
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#void#sortPairs#?,GoalType#191	0.5	0.0	0.5		_
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,FUNC,GoalType,double,double,double#176	0.5	0.0	0.5		GT
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#double#getValue#?#65	0.19999999999999996	0.25	0.44999999999999996	value<=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#int#getEvaluations#?#65	0.19999999999999996	0.19999999999999996	0.3999999999999999	evaluations.getCount()>0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getMax#?#84	0.09999999999999998	0.25	0.35	searchMax<=0	_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#double#getPoint#?#56	0.11111111111111116	0.19999999999999996	0.3111111111111111	point<0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getStartValue#?#90	0.09999999999999998	0.19999999999999996	0.29999999999999993	searchStart<0	_
org.apache.commons.math.util.Incrementor#int#getMaximalCount#?#53	0.125	0.125	0.25	maximalCount!=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getMin#?#78	0.09999999999999998	0.1428571428571429	0.24285714285714288	searchMin<=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#computeObjectiveValue#?,double#110	0.11111111111111116	0.125	0.23611111111111116	function.value(point)<=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,UnivariateRealFunction,GoalType,double,double#144	0.16666666666666663	0.0	0.16666666666666663		_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3224	0.005434782608695676	0.1428571428571429	0.14829192546583858	(a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b)<0	_
org.apache.commons.math.optimization.univariate.BrentOptimizer#UnivariateRealPointValuePair#doOptimize#?#216	0.1428571428571429	0.0	0.1428571428571429		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#void#setMaxEvaluations#?,int#55	0.11111111111111116	0.0	0.11111111111111116		_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#?#UnivariateRealPointValuePair#?,double,double#47	0.11111111111111116	0.0	0.11111111111111116		_
org.apache.commons.math.util.MathUtils#boolean#equals#?,double,double#417	0.09999999999999998	0.0	0.09999999999999998		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,UnivariateRealFunction,GoalType,double,double,double#136	0.09999999999999998	0.0	0.09999999999999998		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#ConvergenceChecker<UnivariateRealPointValuePair>#getConvergenceChecker#?#158	0.09999999999999998	0.0	0.09999999999999998		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#GoalType#getGoalType#?#72	0.09999999999999998	0.0	0.09999999999999998		_
org.apache.commons.math.optimization.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double#80	0.09999999999999998	0.0	0.09999999999999998		_
org.apache.commons.math.util.Incrementor#int#getCount#?#62	0.04166666666666663	0.04347826086956519	0.08514492753623182	count!=0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3260	0.002331002331002363	0.06666666666666665	0.06899766899766901	(a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a)<0	_
org.apache.commons.math.util.MathUtils#boolean#equals#?,double,double,int#489	0.03448275862068961	0.0	0.03448275862068961		_
org.apache.commons.math.util.FastMath#long#abs#?,long#3016	0.008474576271186418	0.017241379310344862	0.02571595558153128	(x < 0l) ? -x : x!=0	_
org.apache.commons.math.util.FastMath#double#ulp#?,double#3044	0.008264462809917328	0.008264462809917328	0.016528925619834656	abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1))>=0	_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1521	0.006896551724137945	0.006896551724137945	0.01379310344827589	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1478	0.006896551724137945	0.006896551724137945	0.01379310344827589	ys[0] + ys[1]==0	_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#705	0.006896551724137945	0.006896551724137945	0.01379310344827589	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#913	0.006896551724137945	0.006896551724137945	0.01379310344827589	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.00877192982456143	0.0	0.00877192982456143		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.008547008547008517	0.0	0.008547008547008517		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.008403361344537785	0.0	0.008403361344537785		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1535	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#740	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1397	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#864	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#751	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#714	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#800	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#763	0.006896551724137945	0.0	0.006896551724137945		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#219	0.0019267822736031004	0.00195694716242667	0.0038837294360297703	Math.sqrt(a)>0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3034	0.0013908205841446364	0.002008032128514081	0.0033988527126587176	(x < 0.0) ? -x : x<=0	_
