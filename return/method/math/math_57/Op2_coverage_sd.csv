line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#double#distanceFrom#?,EuclideanIntegerPoint#57	0.9981941309255079	0.9981941309255079	1.9963882618510158	MathUtils.distance(point,p.getPoint())!=0	_
org.apache.commons.math.util.MathUtils#double#distance#?,int[],int[]#1878	0.9977426636568849	0.9981941309255079	1.9959367945823927	FastMath.sqrt(sum)==0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.7832957110609481	0.9381489841986456	1.7214446952595936	Math.sqrt(a)<=0	_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#chooseInitialCenters#?,Collection<T>,int,Random#191	0.9990970654627539	0.0	0.9990970654627539		GT
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random#69	0.9990970654627539	0.0	0.9990970654627539		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#List<Cluster<T>>#cluster#?,Collection<T>,int,int#134	0.9990970654627539	0.0	0.9990970654627539		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#void#assignPointsToClusters#?,Collection<Cluster<T>>,Collection<T>#147	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#?#KMeansPlusPlusClusterer#?,Random,EmptyClusterStrategy#79	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.Cluster#void#addPoint#?,T#55	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.Cluster#T#getCenter#?#71	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer#Cluster<T>#getNearestCluster#?,Collection<Cluster<T>>,T#330	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.Cluster#?#Cluster#?,T#46	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#boolean#equals#?,Object#86	0.9986455981941309	0.0	0.9986455981941309		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#?#EuclideanIntegerPoint#?,int[]#44	0.9968397291196388	0.0	0.9968397291196388		_
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint#int[]#getPoint#?#52	0.9968397291196388	0.0	0.9968397291196388		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1868	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1043	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1175	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1057	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#996	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1201	-0.0672686230248307	0.0	-0.0672686230248307		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	-0.0672686230248307	0.0	-0.0672686230248307		_
