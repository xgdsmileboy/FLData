line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.EigenDecomposition#double#getDeterminant#?#361	0.0	0.0	0.0	determinant>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.0	0.0	walkInRowOrder(visitor)==0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.0	0.0	data[row][column]>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.util.FastMath#double#exp#?,double#831	0.0	0.0	0.0	exp(x,0.0,null)!=0	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,double#1599	0.0	0.0	0.0	result!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.distribution.NormalDistribution#double#density#?,double#137	0.0	0.0	0.0	FastMath.exp(-0.5 * x1 * x1) / (standardDeviation * SQRT2PI)>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1352	0.0	0.0	0.0	a + b<=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	0.0	0.0	visitor.end()>=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	0.0	0.0	Math.sqrt(a)>=0	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1614	0.0	0.0	0.0	1.0>0	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	0.0	0.0	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	0.0	0.0	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x>0	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.0	0.0	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0<=0	_
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution#int#getDimension#?#53	0.0	0.0	0.0	dimension!=0	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#getExponentTerm#?,double[]#238	0.0	0.0	0.0	FastMath.exp(-0.5 * sum)>0	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#density#?,double[]#183	0.0	0.0	0.0	FastMath.pow(2 * FastMath.PI,-dim / 2) * FastMath.pow(covarianceMatrixDeterminant,-0.5) * getExponentTerm(vals)>0	GT
org.apache.commons.math3.util.FastMath#double#exp#?,double,double,double[]#955	0.0	0.0	0.0	result!=0	_
