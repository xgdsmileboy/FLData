line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#730	1.0	1.0	1.0	negcovMax<=negalphaold	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1014	0.9994199535962877	1.0	0.9998839907192576	isMinimize ? penalty : -penalty>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#994	0.9997099767981439	0.9997099767981439	0.9996519721577726	x[i] > 1.0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#934	0.9994199535962877	0.9994199535962877	0.9994199535962878	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#909	0.9994199535962877	0.9994199535962877	0.9994199535962878	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1220	0.9956496519721578	1.0	0.9991299303944315	mat.getColumnDimension()==m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#806	0.9956496519721578	1.0	0.9991299303944315	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#591	1.0	1.0	0.9991299303944315	sumw * sumw / sumwq>=sumwq	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#851	0.9956496519721578	1.0	0.9991299303944315	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#523	0.9991299303944315	1.0	0.9990139211136891	!(hasInfiniteBounds)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.9933294663573086	1.0	0.9986658932714617	lambda==diagonalOnly	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#947	0.9994199535962877	0.9994199535962877	0.9986658932714617	boundaries != null && isRepairMode	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.9944895591647331	0.9997099767981439	0.9986658932714617	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.9944895591647331	0.9988399071925754	0.997969837587007	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.9976798143851509	0.997969837587007	0.9977958236658933	upper[i]>v	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.9878190255220418	0.9997099767981439	0.9972737819025522	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.9889791183294664	0.9988399071925754	0.9968677494199536	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#787	0.9959396751740139	0.9959396751740139	0.9959396751740139	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1315	0.9959396751740139	0.9959396751740139	0.9959396751740139	!(i < indices.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1327	0.9959396751740139	0.9959396751740139	0.9959396751740139	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1086	0.9959396751740139	0.9959396751740139	0.9959396751740139	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1130	0.9959396751740139	0.9959396751740139	0.9959396751740139	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1117	0.9959396751740139	0.9959396751740139	0.9959396751740139	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.9956496519721578	0.9956496519721578	0.9956496519721578	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1353	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(c < popSize)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.9956496519721578	0.9956496519721578	0.9956496519721578	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1288	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1239	0.9956496519721578	0.9956496519721578	0.9956496519721578	start==step	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1071	0.9956496519721578	0.9956496519721578	0.9956496519721578	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1056	0.9956496519721578	0.9956496519721578	0.9956496519721578	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.9956496519721578	0.9956496519721578	0.9956496519721578	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.9956496519721578	0.9956496519721578	0.9956496519721578	hsig	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1253	0.9956496519721578	0.9956496519721578	0.9956496519721578	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1302	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1041	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#819	0.9956496519721578	0.9956496519721578	0.9956496519721578	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1278	0.9956496519721578	0.9956496519721578	0.9956496519721578	min>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1101	0.9956496519721578	0.9956496519721578	0.9956496519721578	r < m.getRowDimension()	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.9950696055684455	0.9956496519721578	0.9955336426914154	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.9953596287703016	0.9953596287703016	0.9953596287703016	!(columnData == null)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.9947795823665894	0.9947795823665894	0.9947795823665895	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.9944895591647331	0.9947795823665894	0.9947215777262182	getColumnDimension()>=rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.9939095127610209	0.9939095127610209	0.9939095127610209	i < diagonal.length	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.9756380510440835	0.9982598607888631	0.9937354988399072	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.9936194895591647	0.9936194895591647	0.9936194895591647	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.9933294663573086	0.9933294663573086	0.9933294663573086	getRowDimension()>=column	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#106	0.9927494199535963	0.9933294663573086	0.993213457076566	r * FastMath.sin(alpha)>alpha	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.9759280742459396	0.9973897911832946	0.9930974477958237	m.getColumnDimension()>nRows	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.9918793503480279	0.9918793503480279	0.9918793503480279	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.9904292343387471	0.9912993039443155	0.9911252900232019	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.9753480278422274	0.9950696055684455	0.9909512761020881	d[0].length>nRows	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.9846287703016241	0.9924593967517401	0.9908932714617169	FastMath.abs(p - c)>p	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.990139211136891	0.9904292343387471	0.9903712296983759	maximalCount!=0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#245	0.9895591647331786	0.9895591647331786	0.9895591647331785	mt[k + (M - N)] ^ (y >>> 1) ^ MAG01[y & 0x1]<=k	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.9886890951276102	0.9886890951276102	0.9886310904872389	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.9886890951276102	0.9886890951276102	0.9886310904872389	!(i < rows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.9585266821345708	0.9953596287703016	0.9879930394431554	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#407	0.9582366589327146	0.9953596287703016	0.9879350348027842	getColumnDimension()>rows	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.9872389791183295	0.9872389791183295	0.9872389791183294	cachedQ == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.9579466357308585	0.9944895591647331	0.9871809744779583	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.9869489559164734	0.9869489559164734	0.9869489559164735	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.9866589327146171	0.9866589327146171	0.9866589327146171	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.986368909512761	0.986368909512761	0.9863109048723897	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.9857888631090487	0.9857888631090487	0.9857888631090487	!(i < nCols)	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.9791183294663574	0.9791183294663574	0.9791183294663575	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.9788283062645011	0.9791183294663574	0.9790603248259862	function.value(point)>0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.9759280742459396	0.978538283062645	0.9780162412993039	relativeThreshold>=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.9770881670533643	0.9770881670533643	0.9770881670533642	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.9762180974477959	0.9762180974477959	0.9762180974477959	absoluteThreshold>0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.972737819025522	0.9724477958236659	0.9725058004640372	sinQ(xa,xb)!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.9701276102088167	0.9701276102088167	0.9701276102088167	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.968677494199536	0.968677494199536	0.968677494199536	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1799	0.9222737819025522	0.974477958236659	0.9640371229698377	c<sinEpsA	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.9582366589327146	0.9579466357308585	0.9580046403712297	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.9567865429234339	0.9567865429234339	0.9567865429234339	0>=0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.9225638051044084	0.9585266821345708	0.9513341067285384	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.9092227378190255	0.9614269141531322	0.9509860788863109	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.9486658932714617	0.9486658932714617	0.9486658932714617	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.9460556844547564	0.9460556844547564	0.9460556844547564	i < nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#304	0.9240139211136891	0.951276102088167	0.9458236658932715	data[row][column]<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.9350348027842228	0.9440255220417634	0.9422273781902553	finalRemB>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#283	0.9263341067285383	0.9443155452436195	0.9407192575406033	subMatrix[0].length==nRows	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.9156032482598608	0.9422853828306265	0.9369489559164734	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.9031322505800464	0.943445475638051	0.9353828306264502	log(x,null)<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.9350348027842228	0.9350348027842228	0.9350348027842228	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.9350348027842228	0.9350348027842228	0.9350348027842228	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.9350348027842228	0.9350348027842228	0.9350348027842228	finalRemA>0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.9286542923433875	0.9332946635730859	0.9323665893271462	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.9156032482598608	0.9332946635730859	0.929756380510441	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.9132830626450116	0.9135730858468678	0.9135150812064965	data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.9008120649651972	0.9008120649651972	0.9008120649651972	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.900522041763341	0.900522041763341	0.900522041763341	((data == null) || (data[0] == null)) ? 0 : data[0].length>0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.8486078886310905	0.9066125290023201	0.8950116009280743	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.8419373549883991	0.9019721577726219	0.8899651972157774	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3510	0.877030162412993	0.902262180974478	0.889675174013921	!(a < b)	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.8834106728538283	0.8834106728538283	0.8834106728538283	!(columnDimension < 1)	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.7468097447795823	0.9153132250580046	0.8816125290023202	Math.sqrt(a)<=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.8813805104408352	0.8813805104408352	0.8813805104408352	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.8810904872389791	0.8810904872389791	0.8810904872389791	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.8517981438515081	0.8520881670533642	0.8520301624129929	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.8497679814385151	0.8500580046403712	0.85	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.8381670533642691	0.8381670533642691	0.8381670533642691	!(cb == null)	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.8033642691415314	0.8039443155452436	0.8038283062645011	!(o == null)	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.6612529002320185	0.7555104408352669	0.7366589327146172	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#240	1.0	0.0	0.19999999999999996		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#247	1.0	0.0	0.19999999999999996		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#921	0.9956496519721578	0.0	0.19912993039443153		GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#360	0.9956496519721578	0.0	0.19912993039443153		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#896	0.9956496519721578	0.0	0.19912993039443153		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#982	0.9956496519721578	0.0	0.19912993039443153		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1209	0.9956496519721578	0.0	0.19912993039443153		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#846	0.9956496519721578	0.0	0.19912993039443153		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.9953596287703016	0.0	0.19907192575406027		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.9933294663573086	0.0	0.19866589327146167		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#282	0.9933294663573086	0.0	0.19866589327146167		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.9924593967517401	0.0	0.19849187935034798		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.9898491879350348	0.0	0.19796983758700692		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.9898491879350348	0.0	0.19796983758700692		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.9886890951276102	0.0	0.19773781902552198		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.988399071925754	0.0	0.19767981438515075		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.988399071925754	0.0	0.19767981438515075		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.988399071925754	0.0	0.19767981438515075		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.986368909512761	0.0	0.19727378190255215		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.9828886310904872	0.0	0.19657772621809738		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.9808584686774942	0.0	0.19617169373549878		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.9788283062645011	0.0	0.19576566125290018		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.9776682134570766	0.0	0.19553364269141527		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.9770881670533643	0.0	0.1954176334106728		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.9756380510440835	0.0	0.19512761020881667		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.9701276102088167	0.0	0.1940255220417633		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.9701276102088167	0.0	0.1940255220417633		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.9692575406032483	0.0	0.1938515081206496		_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.9625870069605569	0.0	0.19251740139211132		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.9579466357308585	0.0	0.19158932714617166		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.9504060324825986	0.0	0.19008120649651966		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.949245939675174	0.0	0.18984918793503475		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#252	0.9480858468677494	0.0	0.18961716937354983		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.9469257540603249	0.0	0.18938515081206492		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.9457656612529002	0.0	0.18915313225058		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.9344547563805105	0.0	0.18689095127610206		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.9269141531322506	0.0	0.18538283062645008		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#543	0.9263341067285383	0.0	0.18526682134570763		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#310	0.9263341067285383	0.0	0.18526682134570763		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.9240139211136891	0.0	0.18480278422273777		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.8909512761020881	0.0	0.1781902552204176		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.8590487238979119	0.0	0.17180974477958233		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.8546983758700696	0.0	0.17093967517401387		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.8474477958236659	0.0	0.16948955916473316		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.8384570765661252	0.0	0.167691415313225		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	-0.007250580046403712	0.0	-0.0014501160092807422		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	-0.007250580046403712	0.0	-0.0014501160092807422		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	-0.007250580046403712	0.0	-0.0014501160092807422		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	-0.007250580046403712	0.0	-0.0014501160092807422		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	-0.008410672853828306	0.0	-0.0016821345707656607		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	-0.008410672853828306	0.0	-0.0016821345707656607		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	-0.008990719257540603	0.0	-0.0017981438515081202		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#107	-0.01131090487238979	0.0	-0.0022621809744779574		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	-0.014501160092807424	0.0	-0.0029002320185614844		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	-0.014501160092807424	0.0	-0.0029002320185614844		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	-0.01537122969837587	0.0	-0.0030742459396751734		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	-0.01740139211136891	0.0	-0.003480278422273781		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	-0.01769141531322506	0.0	-0.003538283062645011		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	-0.017981438515081206	0.0	-0.0035962877030162404		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	-0.020591647331786544	0.0	-0.004118329466357308		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	-0.026102088167053363	0.0	-0.005220417633410672		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	-0.027842227378190254	0.0	-0.00556844547563805		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	-0.05597447795823666	0.0	-0.01119489559164733		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	-0.05597447795823666	0.0	-0.01119489559164733		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	-0.07337587006960557	0.0	-0.01467517401392111		_
