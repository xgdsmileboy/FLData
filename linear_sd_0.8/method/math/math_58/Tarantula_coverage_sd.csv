line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.9990855052583447	0.9990855052583447	0.9988117832021095	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.9990855052583447	0.9990855052583447	0.9984479848812428	param[2] <= 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#384	0.9904805077062556	1.0	0.9980063434526507	(actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5>=xNorm	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.993181818181818	0.9995425434583715	0.9979098968356628	fp / (delta * sum2)>dxNorm	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.9977168949771689	0.9977168949771689	0.9977168949771689	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.9977168949771689	0.9977168949771689	0.9977168949771689	parameters == null	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#203	0.9977168949771689	0.9977168949771689	0.9977168949771689	maxYIdx!=0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.9977168949771689	0.9977168949771689	0.9975348298503482	!(observations.length < 3)	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.9909297052154196	0.9990855052583447	0.9974543452497596	x==weight	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.997261524418074	0.997261524418074	0.997261524418074	Gaussian.value(diff,param[0],i2s2)>0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.9913793103448276	0.9968065693430658	0.9957211175434182	x==0	_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.9945380063723259	0.9954441913439636	0.9952629543496361	norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2)!=0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.9909297052154196	0.9945380063723259	0.9938163461409446	sin * cotan>=dpj	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.9913793103448276	0.9918293236495689	0.9917393209886207	y>0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.9913793103448276	0.9913793103448276	0.9913793103448276	weight>0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.9802602063705698	0.9936334697589813	0.9906953062731347	gamma * weightedResidualJacobian[j][pk]>ak2	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.9771914132379249	0.9855660802886784	0.9838911468785276	orthoTolerance==parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#842	0.9785042543663233	0.9815813117699911	0.9809659002892576	permutation[k]<k	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.9693877551020407	0.9833483348334833	0.9805562188871948	cols<i	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.9719750889679716	0.9719750889679716	0.9718886527661958	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.9693877551020407	0.9698180204172214	0.9697319673541853	-ji[j] * wi<wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.9689578713968959	0.9689578713968959	0.968957871396896	point.length!=maxEval	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#120	0.9689578713968959	0.9689578713968959	0.968957871396896	!(w == null)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#765	0.9085239085239086	0.9869015356820235	0.9676760047263645	EXP_INT_TABLE_B[750 + intVal]>x	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.9595959595959597	0.9600175746924428	0.959933251673146	a>=0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.9537319947621127	0.9574934268185802	0.9567411404072867	relativeThreshold>0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.9541484716157206	0.9541484716157206	0.9541484716157205	absoluteThreshold>0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.8991769547325104	0.9250635055038102	0.9198861953495503	a>0	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.9161425576519917	0.9161425576519917	0.9161425576519917	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.8889340927583402	0.8922008983258474	0.8915475372123459	exp(x,0.0,null)>0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.8867694805194805	0.8838996763754046	0.8820596930618929	o instanceof Object[]	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.8750500600720865	0.875400641025641	0.87533052483493	(a <= b) ? a : b>0	_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.8198874296435272	0.8223560406473466	0.8218623184465828	Math.sqrt(a)!=0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.7674745345978223	0.7781339031339031	0.776002029426687	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x>0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.9990855052583447	0.0	0.1998171010516689		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.9977168949771689	0.0	0.19954337899543373		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.9977168949771689	0.0	0.19954337899543373		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.9977168949771689	0.0	0.19954337899543373		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#154	0.997261524418074	0.0	0.19945230488361476		_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.9968065693430658	0.0	0.1993613138686131		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.995897903372835	0.0	0.19917958067456695		_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.9954441913439636	0.0	0.19908883826879267		_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.9936334697589813	0.0	0.1987266939517962		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.9913793103448276	0.0	0.19827586206896547		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#152	0.9913793103448276	0.0	0.19827586206896547		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.9913793103448276	0.0	0.19827586206896547		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.9913793103448276	0.0	0.19827586206896547		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.9913793103448276	0.0	0.19827586206896547		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.9909297052154196	0.0	0.19818594104308387		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.9909297052154196	0.0	0.19818594104308387		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#53	0.9904805077062556	0.0	0.19809610154125107		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.9895833333333333	0.0	0.1979166666666666		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.9860108303249098	0.0	0.19720216606498192		_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.9715429079590929	0.0	0.19430858159181855		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#73	0.9711111111111111	0.0	0.19422222222222219		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.9693877551020407	0.0	0.1938775510204081		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.9693877551020407	0.0	0.1938775510204081		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.9693877551020407	0.0	0.1938775510204081		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.9689578713968959	0.0	0.19379157427937915		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.9689578713968959	0.0	0.19379157427937915		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.9680992467877715	0.0	0.19361984935755425		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.9680992467877715	0.0	0.19361984935755425		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.947939262472885	0.0	0.18958785249457694		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#62	0.947939262472885	0.0	0.18958785249457694		_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.914608622854751	0.0	0.18292172457095016		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.9130798161303803	0.0	0.182615963226076		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.8980682285244553	0.0	0.17961364570489102		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.8719074221867518	0.0	0.17438148443735033		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#68	0.8558558558558558	0.0	0.17117117117117112		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1130	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1071	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1909	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1729	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1810	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#988	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	0.0	0.0	0.0		_
