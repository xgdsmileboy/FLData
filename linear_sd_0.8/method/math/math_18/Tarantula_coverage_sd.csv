line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#751	0.9997105643994212	0.9997105643994212	0.9997105643994212	negcovMax<negminresidualvariance	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.9991321955452704	0.9994212962962963	0.9993634761460911	isMinimize ? penalty : -penalty>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.9991321955452704	0.9991321955452704	0.9991321955452704	!(i < x.length)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1015	0.9994212962962963	0.9991321955452704	0.9991321955452704	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#930	0.9991321955452704	0.9991321955452704	0.9991321955452704	i < x.length	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.9953890489913544	1.0	0.9990778097982709	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1243	0.9953890489913544	0.9997105643994212	0.9988462613178078	mat.getRowDimension()==n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#582	0.9997105643994212	0.9997105643994212	0.9988462613178078	lambda <= 0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.9953890489913544	0.9997105643994212	0.9988462613178078	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#540	0.9985544955189362	0.9997105643994212	0.9987855087047126	!(i < lB.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#969	0.9991321955452704	0.9991321955452704	0.9983835662344872	boundaries != null && isRepairMode	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#320	0.9928140270192585	0.9994212962962963	0.9980998424408887	checkFeasableCount==lambda	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.993956834532374	0.9991321955452704	0.9980971233426912	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.9942429476108232	0.9985544955189362	0.9976921859373136	getRowDimension()==column	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.9971131639722864	0.9974010973144674	0.9972284369975635	upper[i]>v	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.9877037460680583	0.9994212962962963	0.9970213137665968	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.988834812482107	0.9985544955189362	0.9966105589115704	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#798	0.9956759873162294	0.9956759873162294	0.9956759873162294	!(min(diagD) <= 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1339	0.9956759873162294	0.9956759873162294	0.9956759873162294	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.9956759873162294	0.9956759873162294	0.9956759873162294	indices[indices.length - i - 1]<i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1111	0.9956759873162294	0.9956759873162294	0.9956759873162294	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1154	0.9956759873162294	0.9956759873162294	0.9956759873162294	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1140	0.9956759873162294	0.9956759873162294	0.9956759873162294	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.9953890489913544	0.9956759873162294	0.9956185996512544	!(hsig)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1219	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(r < n)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1377	0.9953890489913544	0.9953890489913544	0.9953890489913544	c < popSize	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1172	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(i < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1316	0.9953890489913544	0.9953890489913544	0.9953890489913544	max!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.9953890489913544	0.9953890489913544	0.9953890489913544	step!=end	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1096	0.9953890489913544	0.9953890489913544	0.9953890489913544	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1079	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.9953890489913544	0.9953890489913544	0.9953890489913544	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1280	0.9953890489913544	0.9953890489913544	0.9953890489913544	max < e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1326	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1302	0.9953890489913544	0.9953890489913544	0.9953890489913544	min!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1125	0.9953890489913544	0.9953890489913544	0.9953890489913544	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.9948156682027649	0.9953890489913544	0.9952743728336365	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.9951022760011523	0.9951022760011523	0.9951022760011523	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.9942429476108232	0.9945292254534984	0.9944719698849633	getColumnDimension()==rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.9942429476108232	0.9942429476108232	0.9942429476108232	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.9751552795031055	0.9979774631609362	0.99341302642937	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.993385102099511	0.993385102099511	0.993385102099511	i < diagonal.length	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#103	0.9925287356321839	0.993385102099511	0.9932138288060456	2 * FastMath.PI * x<y	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.9930994824611846	0.9930994824611846	0.9930994824611846	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#527	0.9928140270192585	0.9928140270192585	0.9928140270192585	i < nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.9754306693024569	0.9968253968253967	0.9925464513208088	m.getColumnDimension()>nRows	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.9916738443870228	0.9916738443870228	0.9916738443870228	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.9846066134549601	0.9925287356321839	0.9909443111967391	FastMath.abs(p - c)>p	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.9902522935779815	0.9911047345767576	0.9909342463770023	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.9751552795031055	0.9948156682027649	0.9907185430248353	d[0].length>nRows	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.9899684723416451	0.9902522935779815	0.9901955293307143	maximalCount!=0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#247	0.9894013176740188	0.9896848137535816	0.9896281145376691	(mtNext & 0x80000000) | (mt[0] & 0x7fffffff)>=mtNext	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.9885518030910131	0.9885518030910131	0.9884386964773871	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.9885518030910131	0.9885518030910131	0.9884386964773871	!(i < rows)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.9594444444444444	0.9951022760011523	0.9879707096898107	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#411	0.959178006109414	0.9951022760011523	0.9879174220228046	getColumnDimension()>rows	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.9589117157134924	0.9942429476108232	0.987176701231357	walkInRowOrder(visitor)>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.9871391826236068	0.9871391826236068	0.9871391826236068	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.9868571428571429	0.9868571428571429	0.9868571428571429	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.9862935465448316	0.9862935465448316	0.9862935465448316	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.9862935465448316	0.9862935465448316	0.9862372351804842	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#535	0.985730593607306	0.985730593607306	0.985730593607306	getColumnDimension()>row	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.9793025233909839	0.9793025233909839	0.9793025233909839	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.9790249433106577	0.9793025233909839	0.9792470073749187	function.value(point)>0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.9762577727529678	0.9787475205440636	0.9782495709858444	relativeThreshold>=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.977086280056577	0.977086280056577	0.9770862800565772	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.976533785694091	0.976533785694091	0.976533785694091	absoluteThreshold>0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.9732318963088195	0.9732318963088195	0.9732318963088195	sinQ(xa,xb)!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.9699522606009547	0.9699522606009547	0.9699522606009547	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1800	0.9277464410421703	0.9793025233909839	0.9689913069212213	b + d<=cosEpsB	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.9685922602355581	0.9685922602355581	0.9685922602355581	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.9597110308419005	0.9597110308419005	0.9597110308419003	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.9578480310593456	0.9578480310593456	0.9578480310593456	0>=0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.9279957012358947	0.9602446483180427	0.9537948589016131	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.9166666666666667	0.9621169916434541	0.9530269266480966	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.9502063273727649	0.9502063273727649	0.9502063273727649	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.9478594950603731	0.9478594950603731	0.9478594950603731	!(i < nRows)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.9284946236559141	0.9525648097076668	0.9477507724973162	data[row][column]<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.938842076651264	0.9465607015620718	0.9450169765799104	finalRemB>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.9304956896551724	0.9463013698630137	0.9431402338214454	subMatrix[0].length==nRows	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.9220501868659905	0.9457831325301205	0.9410365433972945	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.911586170493534	0.946042180224596	0.9391509782783836	log(x,null)<0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.938842076651264	0.938842076651264	0.938842076651264	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.938842076651264	0.938842076651264	0.938842076651264	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.938842076651264	0.938842076651264	0.938842076651264	finalRemA>0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.9330091842247434	0.937059142702116	0.9362491510066415	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.9220501868659905	0.9375678610206298	0.934464326189702	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3523	0.9113456464379948	0.9378224273689926	0.9325270711827931	a!=0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.9198402130492676	0.920085242408098	0.9200362365363318	data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.9089473684210526	0.9089473684210526	0.9089473684210526	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.9087082346750854	0.9087082346750854	0.9087082346750854	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.8680573008293541	0.9144823934339422	0.9051973749130247	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.8630684657671165	0.9106248352227789	0.9011135613316464	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.7973222530009234	0.9215581643543224	0.8967109820836426	Math.sqrt(a)<=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.8948186528497408	0.8948186528497408	0.8948186528497408	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.8931988621670546	0.8931988621670546	0.8931988621670546	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.8929679420889348	0.8929679420889348	0.8929679420889348	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.870902672718104	0.8711223203026482	0.8710783907857393	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.868493839577571	0.8687122736418511	0.8686685868289952	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.8604882909815644	0.8604882909815644	0.8604882909815644	!(cb == null)	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.8351063829787234	0.8355104015481374	0.8354295978342545	!(o == null)	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.7469723183391003	0.8030690537084398	0.791849706634572	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#87	1.0	0.0	0.19999999999999996		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#246	0.9994212962962963	0.0	0.1998842592592592		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#253	0.9994212962962963	0.0	0.1998842592592592		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#942	0.9953890489913544	0.0	0.19907780979827083		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#369	0.9953890489913544	0.0	0.19907780979827083		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#917	0.9953890489913544	0.0	0.19907780979827083		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#1006	0.9953890489913544	0.0	0.19907780979827083		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1233	0.9953890489913544	0.0	0.19907780979827083		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#866	0.9953890489913544	0.0	0.19907780979827083		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.9951022760011523	0.0	0.19902045520023043		_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.9930994824611846	0.0	0.19861989649223688		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#288	0.9928140270192585	0.0	0.19856280540385166		_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.9919586444572086	0.0	0.1983917288914417		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.9894013176740188	0.0	0.19788026353480373		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.9894013176740188	0.0	0.19788026353480373		_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.9885518030910131	0.0	0.19771036061820257		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.9882689556509299	0.0	0.19765379113018594		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.9882689556509299	0.0	0.19765379113018594		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.9879862700228833	0.0	0.19759725400457662		_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#252	0.9862935465448316	0.0	0.19725870930896627		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.9829254410927717	0.0	0.1965850882185543		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.9806927881885292	0.0	0.1961385576377058		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.9790249433106577	0.0	0.1958049886621315		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.9779161947904869	0.0	0.19558323895809732		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.977086280056577	0.0	0.19541725601131538		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.9757062146892655	0.0	0.19514124293785307		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.9707700955593029	0.0	0.19415401911186053		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.9707700955593029	0.0	0.19415401911186053		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.9696799550814149	0.0	0.19393599101628295		_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.9637276785714286	0.0	0.19274553571428568		_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.9589117157134924	0.0	0.19178234314269843		_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.9525648097076668	0.0	0.1905129619415333		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#145	0.950729424717864	0.0	0.19014588494357276		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#254	0.9496838053340666	0.0	0.1899367610668133		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.948901098901099	0.0	0.18978021978021975		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.9481196815811144	0.0	0.18962393631622282		_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.9383319750067917	0.0	0.1876663950013583		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.9309973045822102	0.0	0.186199460916442		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#547	0.9304956896551724	0.0	0.18609913793103444		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#315	0.9304956896551724	0.0	0.18609913793103444		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.9284946236559141	0.0	0.18569892473118277		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.9008868022952531	0.0	0.18017736045905058		_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.8762049720953831	0.0	0.17524099441907656		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.8728834975991913	0.0	0.1745766995198382		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.8674033149171271	0.0	0.17348066298342538		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.8607027161724395	0.0	0.17214054323448788		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#110	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
