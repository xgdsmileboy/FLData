line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1776	0.0	1.9130434782608696	1.5304347826086957	1.0 / Math.sqrt(n2)<minG	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#956	0.0	1.8823529411764706	1.5058823529411764	work[i] <= TOLERANCE_2 * d	_
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1054	0.0	1.8823529411764706	1.5058823529411764	flipIfWarranted(deflatedEnd,1)	_
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1133	0.0	1.8823529411764706	1.5058823529411764	1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]	GT
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#879	0.0	1.8823529411764706	1.5058823529411764	Math.min(offDiagMin,work[i + 2])==diagMin	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1383	0.0	1.8823529411764706	1.5058823529411764	work[j4 - 2] == 0.0	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1476	0.0	1.8181818181818181	1.4545454545454546	0.25 * dMin>cnst3	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1811	0.0	0.5797101449275361	0.46376811594202894	d[nM1] + si>lambda	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1713	0.0	0.5797101449275361	0.46376811594202894	main[i] - eiM1 * ratio + mu<=eiM1	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1839	0.0	0.5797101449275361	0.46376811594202894	pi>lambda	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1317	0.0	0.38235294117647056	0.3058823529411765	dN>d	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#597	0.0	0.34444444444444444	0.27555555555555555	main[m - 1]<eCurrent	_
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#200	0.0	0.0823529411764706	0.06588235294117649	secondary[i]>=splitTolerance	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1255	0.0	0.0823529411764706	0.06588235294117649	Math.abs(di)<=lambda	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#661	0.0	0.06417112299465241	0.05133689839572193	!(chooseLeft)	_
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#907	0.0	0.04040404040404039	0.03232323232323231	a * a<a	_
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1187	0.0	0.036199095022624445	0.028959276018099556	0.5 * (left + right)>=range	_
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#699	0.0	0.019780219780219786	0.01582417582417583	Math.abs(main[i + 1])>absDPrevious	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1686	0.0	0.01568627450980392	0.012549019607843138	t - sigma<=shift	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#889	0.0	0.014354066985645923	0.01148325358851674	dot>0	_
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1231	0.0	0.00735294117647059	0.005882352941176472	main[index] - t>t	_
org.apache.commons.math.linear.ArrayRealVector#void#checkVectorDimensions#?,int#1287	0.0	6.988120195667372E-4	5.590496156533898E-4	!(data.length != n)	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	0.0	0.0	0.0	dotProduct((ArrayRealVector)v)!=0	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	0.0	0.0	0.0	dotProduct(v.data)!=0	_
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#97	0.0	0.0	0.0	!(d == null)	_
org.apache.commons.math.linear.EigenDecompositionImpl#RealVector#getEigenvector#?,int#336	0.0	0.0	0.0	eigenvectors == null	_
org.apache.commons.math.linear.ArrayRealVector#RealVector#subtract#?,double[]#285	0.0	0.0	0.0	!(i < data.length)	_
