line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#907	0.0	0.0	0.0	a * a<=a	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeShiftIncrement#?,int,int,int#1449	0.0	0.0	0.0	dMin == dN || dMin == dN1	_
org.apache.commons.math.linear.EigenDecompositionImpl#int#countEigenValues#?,double,int,int#1231	0.0	0.0	0.0	main[index] - t!=t	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,RealVector#870	0.0	0.0	0.0	dotProduct((ArrayRealVector)v)!=0	_
org.apache.commons.math.linear.EigenDecompositionImpl#ArrayRealVector#findEigenvector#?,double,double[],double[]#1776	0.0	0.0	0.0	1.0 / Math.sqrt(n2)!=n2	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,ArrayRealVector#900	0.0	0.0	0.0	dotProduct(v.data)!=0	_
org.apache.commons.math.linear.ArrayRealVector#void#checkVectorDimensions#?,int#1287	0.0	0.0	0.0	!(data.length != n)	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#updateSigma#?,double#1691	0.0	0.0	0.0	t<=shift	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#computeGershgorinCircles#?#599	0.0	0.0	0.0	lower<=eCurrent	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#initialSplits#?,int#957	0.0	0.0	0.0	-0.0<=d	_
org.apache.commons.math.linear.EigenDecompositionImpl#List<Integer>#computeSplits#?#700	0.0	0.0	0.0	splitTolerance * Math.sqrt(absDPrevious * absDCurrent)<absDPrevious	_
org.apache.commons.math.linear.EigenDecompositionImpl#double[]#eigenvaluesRange#?,int,int#1178	0.0	0.0	0.0	i < maxIter	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#stationaryQuotientDifferenceWithShift#?,double[],double[],double#1798	0.0	0.0	0.0	-lambda<=lambda	_
org.apache.commons.math.linear.EigenDecompositionImpl#int#goodStep#?,int,int#1030	0.0	0.0	0.0	work[k - 3] * work[k - 5] / (t * (1 + Math.sqrt(1 + s / t)))!=t	_
org.apache.commons.math.linear.EigenDecompositionImpl#?#EigenDecompositionImpl#?,double[],double[],double#200	0.0	0.0	0.0	secondary[i]<=splitTolerance	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenvalues#?#648	0.0	0.0	0.0	countEigenValues(threeFourth,begin,n)<=n	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#ldlTDecomposition#?,double,int,int#1254	0.0	0.0	0.0	main[index] - lambda!=lambda	_
org.apache.commons.math.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#97	0.0	0.0	0.0	!(d == null)	_
org.apache.commons.math.linear.EigenDecompositionImpl#RealVector#getEigenvector#?,int#336	0.0	0.0	0.0	eigenvectors == null	_
org.apache.commons.math.linear.EigenDecompositionImpl#boolean#flipIfWarranted#?,int,int#1133	0.0	0.0	0.0	!(1.5 * work[pingPong] < work[4 * (n - 1) + pingPong])	GT
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqds#?,int,int#1277	0.0	0.0	0.0	-work[4 * start + pingPong]<d	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#processGeneralBlock#?,int#878	0.0	0.0	0.0	Math.max(diagMax,work[i] + work[i + 2])>diagMin	_
org.apache.commons.math.linear.ArrayRealVector#double#dotProduct#?,double[]#886	0.0	0.0	0.0	i < data.length	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#dqd#?,int,int#1379	0.0	0.0	0.0	dMin==d	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#findEigenVectors#?#1719	0.0	0.0	0.0	!(i < m)	_
org.apache.commons.math.linear.ArrayRealVector#RealVector#subtract#?,double[]#285	0.0	0.0	0.0	!(i < data.length)	_
org.apache.commons.math.linear.EigenDecompositionImpl#void#progressiveQuotientDifferenceWithShift#?,double[],double[],double#1826	0.0	0.0	0.0	d[nM1] - lambda!=lambda	_
