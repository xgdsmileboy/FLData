line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.563799569594017	0.563799569594017	walkInRowOrder(visitor)>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	0.562999123546304	0.562999123546304	visitor.end()!=0	_
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer#double#computeObjectiveValue#?,double[]#116	0.0	0.5511196223185605	0.5511196223185605	function.value(params)<0	_
org.apache.commons.math3.optim.SimpleValueChecker#?#SimpleValueChecker#?,double,double#65	0.0	0.363366086329119	0.363366086329119	absoluteThreshold<relativeThreshold	_
org.apache.commons.math3.util.Incrementor#int#getCount#?#114	0.0	0.3066903460589344	0.3066903460589344	count==0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.0	0.2897812334471345	0.2897812334471345	rowDimension<columnDimension	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?,double,double#45	0.0	0.24389262793070957	0.24389262793070957	absoluteThreshold<relativeThreshold	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1223	0.0	0.21049574533970292	0.21049574533970292	ya + yb<0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#60	0.0	0.19654672372018195	0.19654672372018195	rowDimension<columnDimension	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,double[]#1250	0.0	0.1425201513500947	0.1425201513500947	max<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#value#?,double[]#910	0.0	0.1425201513500947	0.1425201513500947	isMinimize ? value : -value<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#971	0.0	0.1425201513500947	0.1425201513500947	isMinimize ? penalty : -penalty<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,double[]#1264	0.0	0.1425201513500947	0.1425201513500947	min<=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#67	0.0	0.13760078151341548	0.13760078151341548	rowDimension<columnDimension	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2570	0.0	0.12021728637521714	0.12021728637521714	result<0	_
org.apache.commons.math3.util.FastMath#double#atan#?,double#2423	0.0	0.08848597629116796	0.08848597629116796	atan(x,0.0,false)<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#?#CMAESOptimizer#?,int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#230	0.0	0.08693122022466639	0.08693122022466639	diagonalOnly<=checkFeasableCount	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	0.07307347992970595	0.07307347992970595	Math.sqrt(a)==0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3548	0.0	0.05695640014214852	0.05695640014214852	a!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.05505344850480234	0.05505344850480234	data[row][column]==0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.0	0.05218294167341662	0.05218294167341662	data[index]<0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#118	0.0	0.05170766655384948	0.05170766655384948	random<=0	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.04918399752659276	0.04918399752659276	(x < 0l) ? -x : x<=0	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1120	0.0	0.04916619670467925	0.04916619670467925	log(x,null)<0	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getRelativeThreshold#?#54	0.0	0.03543136749045015	0.03543136749045015	relativeThreshold>0	_
org.apache.commons.math3.optim.BaseOptimizer#int#getEvaluations#?#72	0.0	0.03319367005888747	0.03319367005888747	evaluations.getCount()>0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3862	0.0	0.030750274444652118	0.030750274444652118	finalRemB>=0	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	0.02069595648040657	0.02069595648040657	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x<=0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1688	0.0	0.019030493109824687	0.019030493109824687	p>0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#453	0.0	0.011414787766303985	0.011414787766303985	row>column	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#313	0.0	0.009566426079482609	0.009566426079482609	row>column	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3489	0.0	0.00754244827796326	0.00754244827796326	(a <= b) ? b : a>0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0	3.6528801711185844E-4	3.6528801711185844E-4	data.length>0	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	1.9215172319711263E-4	1.9215172319711263E-4	(a <= b) ? a : b!=0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#261	0.0	0.0	0.0	y >>> (32 - bits)>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double,ConvergenceChecker<PointValuePair>#121	0.0	0.0	0.0	abs<lineAbs	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getLo#?#229	0.0	0.0	0.0	lo<=0	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifyInterval#?,double,double#352	0.0	0.0	0.0	lower!=upper	_
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils#void#verifySequence#?,double,double,double#371	0.0	0.0	0.0	lower!=initial	_
org.apache.commons.math3.analysis.function.Sinc#double#value#?,double#94	0.0	0.0	0.0	FastMath.sin(scaledX) / scaledX!=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#?#UnivariatePointValuePair#?,double,double#45	0.0	0.0	0.0	value<=point	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getStartValue#?#94	0.0	0.0	0.0	start<0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer#double#findUpperBound#?,UnivariateFunction,double,double#336	0.0	0.0	0.0	b>0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#computeObjectiveValue#?,double#149	0.0	0.0	0.0	function.value(x)<0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getStartValue#?#122	0.0	0.0	0.0	start<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getDimension#?#183	0.0	0.0	0.0	dimension!=0	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2248	0.0	0.0	0.0	Double.NaN==0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#min#?,RealMatrix#1236	0.0	0.0	0.0	min!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getMid#?#261	0.0	0.0	0.0	mid<0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex#int#getSize#?#194	0.0	0.0	0.0	simplex.length!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#97	0.0	0.0	0.0	rows==columns	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getFunctionValueAccuracy#?#142	0.0	0.0	0.0	functionValueAccuracy>=0	_
org.apache.commons.math3.optim.BaseOptimizer#int#getMaxEvaluations#?#60	0.0	0.0	0.0	evaluations.getMaximalCount()>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex#?#NelderMeadSimplex#?,double[],double,double,double,double#138	0.0	0.0	0.0	sigma<khi	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#verifySequence#?,double,double,double#276	0.0	0.0	0.0	lower!=upper	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getStartValue#?#124	0.0	0.0	0.0	searchStart>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length!=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMin#?#128	0.0	0.0	0.0	min<=0	_
org.apache.commons.math3.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#148	0.0	0.0	0.0	rows<=columns	_
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker#?#SimpleUnivariateValueChecker#?,double,double#67	0.0	0.0	0.0	absoluteThreshold<relativeThreshold	_
org.apache.commons.math3.optim.BaseOptimizer#int#getIterations#?#93	0.0	0.0	0.0	iterations.getCount()<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1126	0.0	0.0	0.0	col2>col1	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2302	0.0	0.0	0.0	Double.NaN<=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMax#?#118	0.0	0.0	0.0	searchMax!=0	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#99	0.0	0.0	0.0	-1!=0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1706	0.0	0.0	0.0	p<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize#int#getPopulationSize#?#338	0.0	0.0	0.0	lambda>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#271	0.0	0.0	0.0	row==column	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMin#?#78	0.0	0.0	0.0	lower!=0	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#doSolve#?#109	0.0	0.0	0.0	brent(min,initial,yMin,yInitial)>0	_
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction#double#value#?,double#393	0.0	0.0	0.0	dotProduct<=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3850	0.0	0.0	0.0	finalK!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getColumnDimension#?#1257	0.0	0.0	0.0	columns>0	_
org.apache.commons.math3.optim.MaxEval#int#getMaxEval#?#49	0.0	0.0	0.0	maxEval!=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getValue#?#65	0.0	0.0	0.0	value!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#eval#?,UnivariateFunction,double#285	0.0	0.0	0.0	f.value(x)>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getMin#?#112	0.0	0.0	0.0	searchMin==0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#int#getEvaluations#?#106	0.0	0.0	0.0	evaluations.getCount()>=0	_
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair#double#getPoint#?#56	0.0	0.0	0.0	point<0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0>=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getAbsoluteAccuracy#?#130	0.0	0.0	0.0	absoluteAccuracy!=0	_
org.apache.commons.math3.optim.univariate.SearchInterval#?#SearchInterval#?,double,double,double#48	0.0	0.0	0.0	lo!=hi	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#solve#?,int,FUNC,double,double,double#191	0.0	0.0	0.0	max!=startValue	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockWidth#?,int#1580	0.0	0.0	0.0	(blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE>=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,double,double#167	0.0	0.0	0.0	abs<=lineRel	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double,ConvergenceChecker<PointValuePair>#100	0.0	0.0	0.0	rel!=abs	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer#?#PowellOptimizer#?,double,double#150	0.0	0.0	0.0	abs<rel	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#computeObjectiveValue#?,double#156	0.0	0.0	0.0	function.value(point)<=0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer#double#max#?,RealMatrix#1219	0.0	0.0	0.0	max!=0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#?#BaseAbstractUnivariateSolver#?,double,double,double#94	0.0	0.0	0.0	relativeAccuracy!=absoluteAccuracy	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.0	0.0	0.0	(high | low) * 0x1.0p-52d>0	_
org.apache.commons.math3.analysis.solvers.BrentSolver#double#brent#?,double,double,double,double#143	0.0	0.0	0.0	fHi!=lo	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3856	0.0	0.0	0.0	finalRemA>0	_
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#850	0.0	0.0	0.0	Double.compare(value,o.value)>0	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#void#setup#?,int,FUNC,double,double,double#175	0.0	0.0	0.0	min<startValue	_
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver#double#getRelativeAccuracy#?#136	0.0	0.0	0.0	relativeAccuracy!=0	_
org.apache.commons.math3.optim.univariate.UnivariateOptimizer#double#getMax#?#134	0.0	0.0	0.0	max>0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1830	0.0	0.0	0.0	result!=0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1848	0.0	0.0	0.0	sinQ(a,b)>0	_
org.apache.commons.math3.optim.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double,ConvergenceChecker<UnivariatePointValuePair>#80	0.0	0.0	0.0	rel!=abs	_
org.apache.commons.math3.optim.univariate.SearchInterval#double#getMax#?#86	0.0	0.0	0.0	upper!=0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#getRowDimension#?#1251	0.0	0.0	0.0	rows>=0	_
org.apache.commons.math3.optim.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#61	0.0	0.0	0.0	absoluteThreshold>0	_
org.apache.commons.math3.linear.BlockRealMatrix#int#blockHeight#?,int#1571	0.0	0.0	0.0	(blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE!=0	_
org.apache.commons.math3.optim.univariate.BracketFinder#double#getHi#?#245	0.0	0.0	0.0	hi>0	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.0	0.0	0.0	maximalCount>0	_
