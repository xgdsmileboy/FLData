line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.0	1.7142857142857144	1.7142857142857144	(double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize()<0	GT
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.0	1.6666666666666667	1.6666666666666667	inverseCumulativeProbability(random.nextDouble())<0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.0	0.9090909090909091	0.9090909090909091	upper<0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#142	0.0	0.9090909090909091	0.9090909090909091	solveInverseCumulativeProbability(p,lower,upper)<0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,int,int,int#62	0.0	0.8	0.8	numberOfSuccesses>sampleSize	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#83	0.0	0.48484848484848486	0.48484848484848486	numberOfSuccesses>sampleSize	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.0	0.2142857142857143	0.2142857142857143	(n * m * (N - n)* (N - m)) / (N * N * (N - 1))!=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#283	0.0	0.2142857142857143	0.2142857142857143	numericalVariance>0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.0	0.11428571428571434	0.11428571428571434	FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize())<=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.0	0.047619047619047616	0.047619047619047616	FastMath.min(getNumberOfSuccesses(),getSampleSize())!=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.0	0.02777777777777779	0.02777777777777779	numberOfSuccesses!=0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.0	0.008836307405316511	0.008836307405316511	(a <= b) ? b : a==0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	0.0	4.274152408002309E-5	4.274152408002309E-5	Math.sqrt(a)!=0	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.0	3.5603026257232007E-6	3.5603026257232007E-6	(a <= b) ? a : b>0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.0	0.0	0.0	sampleSize!=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.0	0.0	0.0	populationSize>=0	_
org.apache.commons.math3.random.Well19937c#int#next#?,int#111	0.0	0.0	0.0	z4 >>> (32 - bits)!=0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.0	0.0	0.0	(high | low) * 0x1.0p-52d>0	_
