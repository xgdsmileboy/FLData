line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.NormalDistribution#double#density#?,double#137	0.0	0.11428571428571434	0.11428571428571434	FastMath.exp(-0.5 * x1 * x1) / (standardDeviation * SQRT2PI)>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1352	0.0	0.09186541395647635	0.09186541395647635	a + b==0	_
org.apache.commons.math3.distribution.NormalDistribution#?#NormalDistribution#?,RandomGenerator,double,double,double#103	0.0	0.06285714285714285	0.06285714285714285	mean<sd	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#60	0.0	0.003572523094435445	0.003572523094435445	rowDimension==columnDimension	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.0	0.0031729548863505246	0.0031729548863505246	rowDimension==columnDimension	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2999	0.0	0.0016972724010049052	0.0016972724010049052	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#67	0.0	9.219585317644563E-4	9.219585317644563E-4	rowDimension==columnDimension	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3017	0.0	5.646805682291841E-4	5.646805682291841E-4	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#305	0.0	2.0897633744856002E-4	2.0897633744856002E-4	row==column	_
org.apache.commons.math3.util.FastMath#double#exp#?,double#831	0.0	1.9397163857541675E-4	1.9397163857541675E-4	exp(x,0.0,null)!=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#419	0.0	6.420133538777642E-5	6.420133538777642E-5	visitor.end()<=0	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	6.347997206881256E-5	6.347997206881256E-5	walkInRowOrder(visitor)==0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#454	0.0	5.593169621258493E-5	5.593169621258493E-5	row==column	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#379	0.0	5.135676977330718E-5	5.135676977330718E-5	Math.sqrt(a)!=0	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3421	0.0	4.726456339359565E-6	4.726456339359565E-6	(a <= b) ? a : b>0	_
org.apache.commons.math3.distribution.NormalDistribution#?#NormalDistribution#?,double,double,double#85	0.0	0.0	0.0	mean<inverseCumAccuracy	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,double#1510	0.0	0.0	0.0	-0.0>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.util.FastMath#double#pow#?,double,int#1666	0.0	0.0	0.0	resultHigh + resultLow!=0	_
org.apache.commons.math3.distribution.NormalDistribution#?#NormalDistribution#?,double,double#70	0.0	0.0	0.0	mean<sd	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#getExponentTerm#?,double[]#238	0.0	0.0	0.0	FastMath.exp(-0.5 * sum)!=0	_
org.apache.commons.math3.util.FastMath#double#exp#?,double,double,double[]#955	0.0	0.0	0.0	result>=0	_
org.apache.commons.math3.linear.EigenDecomposition#double#getDeterminant#?#361	0.0	0.0	0.0	determinant>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#313	0.0	0.0	0.0	row<=column	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#271	0.0	0.0	0.0	row==column	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#multiplyEntry#?,int,int,double#331	0.0	0.0	0.0	row>=column	_
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution#int#getDimension#?#53	0.0	0.0	0.0	dimension!=0	_
org.apache.commons.math3.distribution.MultivariateNormalDistribution#double#density#?,double[]#183	0.0	0.0	0.0	FastMath.pow(2 * FastMath.PI,-dim / 2) * FastMath.pow(covarianceMatrixDeterminant,-0.5) * getExponentTerm(vals)>=0	GT
