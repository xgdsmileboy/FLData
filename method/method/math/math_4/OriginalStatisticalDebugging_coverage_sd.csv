line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.geometry.euclidean.oned.Vector1D#double#getX#?#128	0.0	0.0038910505836575876	0.0038910505836575876	x>0	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1832	0.0	0.0	0.0	result>0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getNorm#?#243	0.0	0.0	0.0	FastMath.sqrt(x * x + y * y + z * z)>0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#getNormSq#?#249	0.0	0.0	0.0	x * x + y * y + z * z!=0	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2304	0.0	0.0	0.0	Double.NaN<=0	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1690	0.0	0.0	0.0	p!=0	_
org.apache.commons.math3.geometry.euclidean.threed.Line#double#getAbscissa#?,Vector3D#114	0.0	0.0	0.0	point.subtract(zero).dotProduct(direction)>=0	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1850	0.0	0.0	0.0	sinQ(a,b)!=0	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1708	0.0	0.0	0.0	p<0	_
org.apache.commons.math3.util.FastMath#double#hypot#?,double,double#3575	0.0	0.0	0.0	Double.POSITIVE_INFINITY>=0	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2246	0.0	0.0	0.0	0.0>0	_
org.apache.commons.math3.util.FastMath#int#getExponent#?,double#3685	0.0	0.0	0.0	(int)((Double.doubleToRawLongBits(d) >>> 52) & 0x7ff) - 1023==0	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#double#getY#?#158	0.0	0.0	0.0	y>=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	0.0	0.0	0.0	Math.sqrt(a)>=0	_
org.apache.commons.math3.util.FastMath#double#atan2#?,double,double#2614	0.0	0.0	0.0	Math.PI * F_1_4>0	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#double#dotProduct#?,Vector<Euclidean3D>#454	0.0	0.0	0.0	MathArrays.linearCombination(x,v3.x,y,v3.y,z,v3.z)<=0	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#double#getX#?#150	0.0	0.0	0.0	x>=0	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#3025	0.0	0.0	0.0	Double.longBitsToDouble(MASK_NON_SIGN_LONG & Double.doubleToRawLongBits(x))>0	_
org.apache.commons.math3.util.MathArrays#double#linearCombination#?,double,double,double,double#934	0.0	0.0	0.0	result>=0	_
org.apache.commons.math3.util.MathArrays#double#linearCombination#?,double,double,double,double,double,double#1031	0.0	0.0	0.0	result!=0	_
org.apache.commons.math3.geometry.euclidean.threed.Line#double#distance#?,Vector3D#166	0.0	0.0	0.0	n.getNorm()!=0	_
