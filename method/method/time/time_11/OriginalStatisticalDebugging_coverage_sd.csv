line	original_score	max_predicate_score	total	predicate	label
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getWallOffset#?#914	0.0	0.0	0.0	iWallOffset>0	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	0.0	0.0	0.0	instant<0	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	0.0	0.0	FieldUtils.safeAdd(instant,addition)!=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	0.0	0.0	0.0	iChronology.getDaysInMonthMaxForSet(instant,value)!=0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#getDifferenceAsLong#?,long,long#244	0.0	0.0	0.0	-getDifference(subtrahendInstant,minuendInstant)==0	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	0.0	0.0	0.0	(int)(instant % DateTimeConstants.MILLIS_PER_DAY)>=0	_
org.joda.time.field.PreciseDurationField#long#getDifferenceAsLong#?,long,long#115	0.0	0.0	0.0	difference / iUnitMillis>0	_
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	0.0	0.0	0.0	getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset!=0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#182	0.0	0.0	0.0	ImpreciseDateTimeField.this.add(instant,value)!=0	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	(1970L * MILLIS_PER_YEAR) / 2!=0	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	0.0	0.0	0.0	year>=0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	0.0	0.0	FieldUtils.safeAdd(instant,value)<0	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	0.0	0.0	0.0	iUnitMillis!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	iSaveMillis==0	_
org.joda.time.PeriodType#int#getIndexedField#?,ReadablePeriod,int#675	0.0	0.0	0.0	(realIndex == -1 ? 0 : period.getValue(realIndex))>0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getStandardOffset#?#918	0.0	0.0	0.0	iStandardOffset>0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#long#getMillis#?#906	0.0	0.0	0.0	iMillis<0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthMillis#?,int,int#373	0.0	0.0	0.0	millis<=0	_
org.joda.time.tz.DateTimeZoneBuilder$RuleSet#long#getUpperLimit#?,int#1134	0.0	0.0	0.0	iUpperOfYear.setInstant(iUpperYear,iStandardOffset,saveMillis)>=0	_
org.joda.time.DateTimeUtils$SystemMillisProvider#long#getMillis#?#515	0.0	0.0	0.0	System.currentTimeMillis()!=0	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	0.0	0.0	0.0	(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY>=0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	0.0	0.0	0.0	iRange - 1!=0	_
org.joda.time.Period#int#getMonths#?#713	0.0	0.0	0.0	getPeriodType().getIndexedField(this,PeriodType.MONTH_INDEX)>=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	0.0	0.0	0.0	next - offset!=0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#309	0.0	0.0	0.0	iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant)<=0	_
org.joda.time.tz.DateTimeZoneBuilder$Transition#int#getSaveMillis#?#922	0.0	0.0	0.0	iWallOffset - iStandardOffset!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getSaveMillis#?#839	0.0	0.0	0.0	iRecurrence.getSaveMillis()!=0	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	0.0	0.0	0.0	sum!=0	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	0.0	0.0	0.0	getYearInfo(year).iFirstDayMillis!=0	_
org.joda.time.base.BasePeriod#int#getValue#?,int#329	0.0	0.0	0.0	iValues[index]>0	_
org.joda.time.chrono.BasicYearDateTimeField#long#getDifferenceAsLong#?,long,long#91	0.0	0.0	0.0	iChronology.getYearDifference(minuendInstant,subtrahendInstant)>0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	0.0	0.0	0.0	instant!=0	_
org.joda.time.chrono.BasicGJChronology#long#getYearDifference#?,long,long#170	0.0	0.0	0.0	difference>0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#int#getToYear#?#827	0.0	0.0	0.0	iToYear!=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	0.0	0.0	0.0	(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1>=0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	0.0	0.0	0.0	millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY<=0	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	0.0	0.0	getDurationField().add(instant,value)!=0	_
org.joda.time.field.ImpreciseDateTimeField#int#getDifference#?,long,long#91	0.0	0.0	0.0	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))>=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	0.0	0.0	0.0	MIN_DAYS_PER_MONTH_ARRAY[month - 1]>0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#int#getDifference#?,long,long#190	0.0	0.0	0.0	ImpreciseDateTimeField.this.getDifference(minuendInstant,subtrahendInstant)>0	_
org.joda.time.PeriodType#int#size#?#617	0.0	0.0	0.0	iTypes.length>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Rule#long#next#?,long,int,int#873	0.0	0.0	0.0	next<=0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	MILLIS_PER_YEAR / 2!=0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addRecurringSavings#?,String,int,int,int,char,int,int,int,boolean,int#308	0.0	0.0	0.0	monthOfYear>=dayOfWeek	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#59	0.0	0.0	0.0	instant<=0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	0.0	0.0	0.0	iChronology.getDayOfWeek(instant)>0	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	0.0	0.0	0.0	iChronology.getYear(instant)!=0	_
org.joda.time.field.BaseDurationField#int#getDifference#?,long,long#141	0.0	0.0	0.0	FieldUtils.safeToInt(getDifferenceAsLong(minuendInstant,subtrahendInstant))>=0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	MAX_YEAR>0	_
org.joda.time.tz.DateTimeZoneBuilder#DateTimeZoneBuilder#addCutover#?,int,char,int,int,int,boolean,int#251	0.0	0.0	0.0	dayOfMonth==dayOfWeek	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	0.0	0.0	0.0	instant + (value - get(instant)) * iUnitMillis!=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28)!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.0	0.0	iOfYear.next(instant,standardOffset,saveMillis)!=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	0.0	0.0	0.0	iChronology.getDayOfMonth(instant)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	0.0	0.0	0.0	7 + (int)((daysSince19700101 + 4) % 7)!=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	0.0	0.0	0.0	getDayOfMonth(millis,year,month)>=0	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	0.0	0.0	0.0	(int)((instant / getUnitMillis()) % iRange)>=0	_
org.joda.time.base.AbstractPeriod#int#size#?#56	0.0	0.0	0.0	getPeriodType().size()!=0	_
org.joda.time.field.FieldUtils#long#safeSubtract#?,long,long#106	0.0	0.0	0.0	diff>=0	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	0.0	0.0	0.0	MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]<=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	0.0	0.0	0.0	getDayOfMonth(millis,year,month)!=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	0.0	0.0	0.0	instant + (value - get(instant)) * iUnitMillis!=0	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	0.0	0.0	0.0	sum>0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.0	0.0	next<0	_
org.joda.time.field.FieldUtils#int#safeToInt#?,long#188	0.0	0.0	0.0	(int)value==0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	0.0	0.0	0.0	(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1!=0	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	0.0	0.0	0.0	(isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12)))>=0	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	MIN_YEAR<0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	0.0	0.0	0.0	datePart + timePart!=0	_
org.joda.time.DateTimeUtils#long#currentTimeMillis#?#86	0.0	0.0	0.0	cMillisProvider.getMillis()>0	_
org.joda.time.Period#int#getYears#?#704	0.0	0.0	0.0	getPeriodType().getIndexedField(this,PeriodType.YEAR_INDEX)<=0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	0.0	0.0	0.0	iChronology.setYear(instant,year)<=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	0.0	0.0	0.0	instant!=0	_
