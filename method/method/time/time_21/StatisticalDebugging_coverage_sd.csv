line	original_score	max_predicate_score	total	predicate	label
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#205	0.0	0.16833699394601598	0.16833699394601598	w * 1000L>=0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1187	0.0	0.005389492299910185	0.005389492299910185	iStandardOffset + findMatchingRecurrence(instant).getSaveMillis()>0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1543	0.0	0.005389492299910185	0.005389492299910185	iTailZone.getOffset(instant)>0	_
org.joda.time.field.OffsetDateTimeField#int#getMinimumValue#?#174	0.0	0.0037536256611499755	0.0037536256611499755	iMin>0	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	0.0	0.0016177823085531924	0.0016177823085531924	(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY>0	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	0.0	0.0013686218570483114	0.0013686218570483114	MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]<=0	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#552	0.0	0.001103902974408627	0.001103902974408627	(int)(instant % DateTimeConstants.MILLIS_PER_DAY)!=0	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	0.0	6.527788200582594E-4	6.527788200582594E-4	instant>0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#84	0.0	6.094292038012943E-4	6.094292038012943E-4	iChronology.setYear(instant,year)>0	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#80	0.0	5.759290492942751E-4	5.759290492942751E-4	instant + (value - get(instant)) * iUnitMillis>0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#303	0.0	5.576071407522042E-4	5.576071407522042E-4	iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant)>0	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#360	0.0	5.449256121271809E-4	5.449256121271809E-4	getYearInfo(year).iFirstDayMillis>0	_
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#208	0.0	4.916007658790897E-4	4.916007658790897E-4	iOffset>0	_
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#111	0.0	4.916007658790897E-4	4.916007658790897E-4	getInfo(instant).getOffset(instant)>0	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#112	0.0	4.220512369626265E-4	4.220512369626265E-4	instant + (value - get(instant)) * iUnitMillis>0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#387	0.0	3.4446493104103875E-4	3.4446493104103875E-4	millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY>0	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	3.396048750009136E-4	3.396048750009136E-4	FieldUtils.safeAdd(instant,addition)>0	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	0.0	3.171250752177727E-4	3.171250752177727E-4	sum>0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#146	0.0	2.2658220693181692E-4	2.2658220693181692E-4	datePart + timePart>0	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#63	0.0	2.2036869836836566E-4	2.2036869836836566E-4	set(instant,newYear)>=0	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#80	0.0	2.0607642930316032E-4	2.0607642930316032E-4	(int)((instant / getUnitMillis()) % iRange)!=0	_
org.joda.time.tz.FixedDateTimeZone#int#hashCode#?#102	0.0	1.6064515092611983E-4	1.6064515092611983E-4	getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset>=0	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	0.0	1.245026726752615E-4	1.245026726752615E-4	sum>0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	8.54717656088075E-5	8.54717656088075E-5	FieldUtils.safeAdd(instant,value)>0	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	2.9251042731002583E-5	2.9251042731002583E-5	getDurationField().add(instant,value)>=0	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#54	0.0	2.701382216098905E-5	2.701382216098905E-5	iChronology.getYear(instant)>=0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1235	0.0	0.0	0.0	(start > end) ? end : start>=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#96	0.0	0.0	0.0	iChronology.getDaysInMonthMaxForSet(instant,value)>=0	_
org.joda.time.field.OffsetDateTimeField#int#getMaximumValue#?#183	0.0	0.0	0.0	iMax!=0	_
org.joda.time.field.RemainderDateTimeField#int#getMaximumValue#?#158	0.0	0.0	0.0	iDivisor - 1>0	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	(1970L * MILLIS_PER_YEAR) / 2>0	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#428	0.0	0.0	0.0	year>0	_
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	0.0	0.0	0.0	iUnitMillis>=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#154	0.0	0.0	0.0	iUnitMillis>0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	iSaveMillis>=0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#131	0.0	0.0	0.0	iRange - 1>=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	0.0	0.0	0.0	next - offset!=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	0.0	0.0	0.0	instant>0	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#486	0.0	0.0	0.0	(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1!=0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1574	0.0	0.0	0.0	transitions[i]>=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	0.0	0.0	0.0	MIN_DAYS_PER_MONTH_ARRAY[month - 1]>=0	_
org.joda.time.chrono.BasicYearDateTimeField#int#getMaximumValue#?#119	0.0	0.0	0.0	iChronology.getMaxYear()!=0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	MILLIS_PER_YEAR / 2!=0	_
org.joda.time.chrono.GJYearOfEraDateTimeField#int#getMaximumValue#?#97	0.0	0.0	0.0	getWrappedField().getMaximumValue()!=0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#56	0.0	0.0	0.0	iChronology.getDayOfWeek(instant)>=0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	MAX_YEAR>=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	(value > 28 ? getDaysInMonthMax(instant) : 28)>0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.0	0.0	iOfYear.next(instant,standardOffset,saveMillis)>0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#47	0.0	0.0	0.0	iChronology.getDayOfMonth(instant)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#540	0.0	0.0	0.0	7 + (int)((daysSince19700101 + 4) % 7)>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#459	0.0	0.0	0.0	getDayOfMonth(millis,year,month)>=0	_
org.joda.time.field.OffsetDateTimeField#?#OffsetDateTimeField#?,DateTimeField,DateTimeFieldType,int,int,int#72	0.0	0.0	0.0	maxValue!=offset	_
org.joda.time.chrono.ISOYearOfEraDateTimeField#int#getMaximumValue#?#91	0.0	0.0	0.0	getWrappedField().getMaximumValue()>=0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYear#?#229	0.0	0.0	0.0	MILLIS_PER_YEAR!=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#450	0.0	0.0	0.0	getDayOfMonth(millis,year,month)!=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.0	0.0	next>0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerMonth#?#237	0.0	0.0	0.0	MILLIS_PER_MONTH>0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#470	0.0	0.0	0.0	(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1>0	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	0.0	0.0	0.0	(isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12)))!=0	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	MIN_YEAR<0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	0.0	0.0	0.0	instant>0	_
