line	original_score	max_predicate_score	total	predicate	label
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,DateTimeZone#222	0.0	0.27276650841605526	0.27276650841605526	dayOfMonth==minuteOfHour	_
org.joda.time.MutableDateTime#?#MutableDateTime#?,int,int,int,int,int,int,int,DateTimeZone#350	0.0	0.22847100175746926	0.22847100175746926	minuteOfHour>secondOfMinute	_
org.joda.time.chrono.ZonedChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#117	0.0	0.21122622545229627	0.21122622545229627	dayOfMonth==minuteOfHour	_
org.joda.time.chrono.AssembledChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#129	0.0	0.19605452957071168	0.19605452957071168	dayOfMonth==minuteOfHour	_
org.joda.time.base.BaseDateTime#?#BaseDateTime#?,int,int,int,int,int,int,int,Chronology#251	0.0	0.19566051408840957	0.19566051408840957	dayOfMonth==minuteOfHour	_
org.joda.time.chrono.BasicChronology#long#getDateTimeMillis#?,int,int,int,int,int,int,int#165	0.0	0.19202363367799113	0.19202363367799113	dayOfMonth==minuteOfHour	_
org.joda.time.tz.CachedDateTimeZone$Info#int#getOffset#?,long#202	0.0	0.04035020936429386	0.04035020936429386	iNextInfo.getOffset(millis)>0	_
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetFromLocalToSubtract#?,long#357	0.0	0.028930743342976913	0.028930743342976913	offset>0	_
org.joda.time.chrono.ZonedChronology$ZonedDurationField#int#getOffsetToAdd#?,long#347	0.0	0.012944774356401992	0.012944774356401992	offset>0	_
org.joda.time.field.PreciseDurationDateTimeField#long#remainder#?,long#128	0.0	0.011474030444427444	0.011474030444427444	instant % iUnitMillis==0	_
org.joda.time.field.PreciseDateTimeField#int#get#?,long#81	0.0	0.007293915003561897	0.007293915003561897	(int)((instant / getUnitMillis()) % iRange)==0	_
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#add#?,long,int#317	0.0	0.0052677787532923615	0.0052677787532923615	instant - (iTimeField ? offset : getOffsetFromLocalToSubtract(instant))>0	_
org.joda.time.chrono.BasicYearDateTimeField#long#add#?,long,int#60	0.0	0.002556492318795664	0.002556492318795664	instant>0	_
org.joda.time.chrono.BasicChronology#int#getMillisOfDay#?,long#560	0.0	0.0024390666813087726	0.0024390666813087726	(int)(instant % DateTimeConstants.MILLIS_PER_DAY)!=0	_
org.joda.time.chrono.BasicChronology#long#getYearMillis#?,int#368	0.0	0.00132265276529218	0.00132265276529218	getYearInfo(year).iFirstDayMillis>0	_
org.joda.time.field.PreciseDurationDateTimeField#long#set#?,long,int#81	0.0	0.0013100947479237333	0.0013100947479237333	instant + (value - get(instant)) * iUnitMillis>0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#set#?,long,int#310	0.0	0.0012430565541984842	0.0012430565541984842	iChronology.getYearMonthDayMillis(thisYear,month,thisDom) + iChronology.getMillisOfDay(instant)>0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#add#?,long,int#183	0.0	0.001241299288343715	0.001241299288343715	ImpreciseDateTimeField.this.add(instant,value)>0	_
org.joda.time.chrono.BasicChronology#long#getDateMidnightMillis#?,int,int,int#614	0.0	0.0011026496601099982	0.0011026496601099982	getYearMonthDayMillis(year,monthOfYear,dayOfMonth)>0	_
org.joda.time.base.BaseDateTime#long#getMillis#?#295	0.0	0.0010380011684306353	0.0010380011684306353	iMillis>0	_
org.joda.time.tz.CachedDateTimeZone#int#getOffset#?,long#103	0.0	0.0010007766763776792	0.0010007766763776792	getInfo(instant).getOffset(instant)>0	_
org.joda.time.field.PreciseDateTimeField#long#set#?,long,int#113	0.0	9.880812696844321E-4	9.880812696844321E-4	instant + (value - get(instant)) * iUnitMillis>0	_
org.joda.time.tz.CachedDateTimeZone#long#previousTransition#?,long#119	0.0	9.560023804459262E-4	9.560023804459262E-4	iZone.previousTransition(instant)>=0	_
org.joda.time.chrono.BasicChronology#long#getYearMonthDayMillis#?,int,int,int#395	0.0	8.663588627455124E-4	8.663588627455124E-4	millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY>0	_
org.joda.time.field.PreciseDurationField#long#add#?,long,int#105	0.0	7.155142029569282E-4	7.155142029569282E-4	FieldUtils.safeAdd(instant,addition)>0	_
org.joda.time.field.FieldUtils#long#safeAdd#?,long,long#88	0.0	6.840820937602919E-4	6.840820937602919E-4	sum>0	_
org.joda.time.base.BaseDateTime#long#checkInstant#?,long,Chronology#284	0.0	5.230038960480108E-4	5.230038960480108E-4	instant>0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#long#add#?,long,int#147	0.0	4.6556741028128134E-4	4.6556741028128134E-4	datePart + timePart>=0	_
org.joda.time.chrono.BasicGJChronology#long#getTotalMillisByYearMonth#?,int,int#142	0.0	3.4974493211396195E-4	3.4974493211396195E-4	MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1]>0	_
org.joda.time.field.MillisDurationField#long#add#?,long,int#117	0.0	1.9129969009450197E-4	1.9129969009450197E-4	FieldUtils.safeAdd(instant,value)>0	_
org.joda.time.DateTimeUtils#long#getInstantMillis#?,ReadableInstant#181	0.0	1.7115625832858492E-4	1.7115625832858492E-4	instant.getMillis()>0	_
org.joda.time.field.BaseDateTimeField#long#add#?,long,int#253	0.0	7.957079513106284E-5	7.957079513106284E-5	getDurationField().add(instant,value)>=0	_
org.joda.time.chrono.ZonedChronology#long#localToUTC#?,long#144	0.0	7.846029516763089E-5	7.846029516763089E-5	localInstant>=0	_
org.joda.time.chrono.BasicYearDateTimeField#int#get#?,long#55	0.0	4.789157347764632E-5	4.789157347764632E-5	iChronology.getYear(instant)>=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfWeek#?,Chronology,long#731	0.0	2.1785970270864422E-5	2.1785970270864422E-5	instant>=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonth#?,Chronology,long#713	0.0	2.1721800215914772E-5	2.1721800215914772E-5	instant>0	_
org.joda.time.chrono.BasicChronology#int#getYear#?,long#436	0.0	1.662775080156189E-5	1.662775080156189E-5	year>=0	_
org.joda.time.chrono.BasicGJChronology#long#setYear#?,long,int#198	0.0	0.0	0.0	instant>=0	_
org.joda.time.tz.CachedDateTimeZone#int#hashCode#?#123	0.0	0.0	0.0	iZone.hashCode()>=0	_
org.joda.time.DateTimeZone#int#getOffsetFromLocal#?,long#922	0.0	0.0	0.0	offsetLocal<0	_
org.joda.time.chrono.BasicMonthOfYearDateTimeField#int#get#?,long#73	0.0	0.0	0.0	iChronology.getMonthOfYear(instant)!=0	_
org.joda.time.field.ScaledDurationField#long#getUnitMillis#?#109	0.0	0.0	0.0	getWrappedField().getUnitMillis() * iScalar>=0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#nextTransition#?,long#1238	0.0	0.0	0.0	(start > end) ? end : start!=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#previous#?,long,int,int#625	0.0	0.0	0.0	prev - offset>0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#getMaximumValueForSet#?,long,int#97	0.0	0.0	0.0	iChronology.getDaysInMonthMaxForSet(instant,value)>0	_
org.joda.time.chrono.GregorianChronology#long#getApproxMillisAtEpochDividedByTwo#?#241	0.0	0.0	0.0	(1970L * MILLIS_PER_YEAR) / 2!=0	_
org.joda.time.field.PreciseDurationField#long#getUnitMillis#?#63	0.0	0.0	0.0	iUnitMillis!=0	_
org.joda.time.field.PreciseDurationDateTimeField#long#getUnitMillis#?#155	0.0	0.0	0.0	iUnitMillis!=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#int#getSaveMillis#?#776	0.0	0.0	0.0	iSaveMillis>0	_
org.joda.time.tz.DateTimeZoneBuilder#long#readMillis#?,DataInput#188	0.0	0.0	0.0	v * (30 * 60000L)!=0	_
org.joda.time.DurationFieldType$StandardDurationFieldType#int#hashCode#?#278	0.0	0.0	0.0	(1 << iOrdinal)!=0	_
org.joda.time.chrono.GregorianChronology#long#calculateFirstDayOfYearMillis#?,int#217	0.0	0.0	0.0	(year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY!=0	_
org.joda.time.field.PreciseDateTimeField#int#getMaximumValue#?#132	0.0	0.0	0.0	iRange - 1>=0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#previous#?,long,int,int#768	0.0	0.0	0.0	iOfYear.previous(instant,standardOffset,saveMillis)>=0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#int#getOffset#?,long#1190	0.0	0.0	0.0	iStandardOffset + findMatchingRecurrence(instant).getSaveMillis()>0	_
org.joda.time.field.ScaledDurationField#int#hashCode#?#151	0.0	0.0	0.0	hash!=0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#next#?,long,int,int#583	0.0	0.0	0.0	next - offset>0	_
org.joda.time.field.PreciseDurationField#int#hashCode#?#145	0.0	0.0	0.0	hash>=0	_
org.joda.time.chrono.BasicChronology#int#getMaxMonth#?,int#690	0.0	0.0	0.0	getMaxMonth()>0	_
org.joda.time.DateTimeZone#int#hashCode#?#1273	0.0	0.0	0.0	57 + getID().hashCode()>=0	_
org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField#long#getUnitMillis#?#161	0.0	0.0	0.0	iUnitMillis>0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthPrevious#?,Chronology,long#702	0.0	0.0	0.0	prev>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfYear#?,long,int#494	0.0	0.0	0.0	(int)((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1>=0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#nextTransition#?,long#1577	0.0	0.0	0.0	transitions[i]>0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInYearMonth#?,int,int#123	0.0	0.0	0.0	MIN_DAYS_PER_MONTH_ARRAY[month - 1]>=0	_
org.joda.time.tz.DateTimeZoneBuilder$DSTZone#long#previousTransition#?,long#1282	0.0	0.0	0.0	((start > end) ? start : end) - 1>=0	_
org.joda.time.chrono.GregorianChronology#long#getAverageMillisPerYearDividedByTwo#?#233	0.0	0.0	0.0	MILLIS_PER_YEAR / 2>=0	_
org.joda.time.chrono.GJDayOfWeekDateTimeField#int#get#?,long#57	0.0	0.0	0.0	iChronology.getDayOfWeek(instant)>0	_
org.joda.time.chrono.GregorianChronology#int#getMaxYear#?#225	0.0	0.0	0.0	MAX_YEAR>=0	_
org.joda.time.chrono.BasicGJChronology#int#getDaysInMonthMaxForSet#?,long,int#134	0.0	0.0	0.0	((value > 28 || value < 1) ? getDaysInMonthMax(instant) : 28)!=0	_
org.joda.time.field.MillisDurationField#int#hashCode#?#155	0.0	0.0	0.0	(int)getUnitMillis()>0	_
org.joda.time.tz.DateTimeZoneBuilder$Recurrence#long#next#?,long,int,int#761	0.0	0.0	0.0	iOfYear.next(instant,standardOffset,saveMillis)>=0	_
org.joda.time.chrono.BasicDayOfMonthDateTimeField#int#get#?,long#48	0.0	0.0	0.0	iChronology.getDayOfMonth(instant)>0	_
org.joda.time.chrono.BasicChronology#int#getMonthOfYear#?,long#443	0.0	0.0	0.0	getMonthOfYear(millis,getYear(millis))>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfWeek#?,long#552	0.0	0.0	0.0	1 + (int)((daysSince19700101 + 3) % 7)>0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int#467	0.0	0.0	0.0	getDayOfMonth(millis,year,month)>=0	_
org.joda.time.format.DateTimeFormatterBuilder$Composite#int#estimatePrintedLength#?#2654	0.0	0.0	0.0	iPrintedLengthEstimate>=0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#int#getOffset#?,long#1546	0.0	0.0	0.0	iTailZone.getOffset(instant)!=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long#458	0.0	0.0	0.0	getDayOfMonth(millis,year,month)>0	_
org.joda.time.tz.DateTimeZoneBuilder$OfYear#long#setDayOfMonthNext#?,Chronology,long#683	0.0	0.0	0.0	next!=0	_
org.joda.time.field.FieldUtils#int#safeAdd#?,int,int#70	0.0	0.0	0.0	sum!=0	_
org.joda.time.chrono.BasicGJChronology#int#getMonthOfYear#?,long,int#93	0.0	0.0	0.0	(isLeapYear(year)) ? ((i < 182 * 84375) ? ((i < 91 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 60 * 84375) ? 2 : 3) : ((i < 121 * 84375) ? 4 : (i < 152 * 84375) ? 5 : 6)) : ((i < 274 * 84375) ? ((i < 213 * 84375) ? 7 : (i < 244 * 84375) ? 8 : 9) : ((i < 305 * 84375) ? 10 : (i < 335 * 84375) ? 11 : 12))) : ((i < 181 * 84375) ? ((i < 90 * 84375) ? ((i < 31 * 84375) ? 1 : (i < 59 * 84375) ? 2 : 3) : ((i < 120 * 84375) ? 4 : (i < 151 * 84375) ? 5 : 6)) : ((i < 273 * 84375) ? ((i < 212 * 84375) ? 7 : (i < 243 * 84375) ? 8 : 9) : ((i < 304 * 84375) ? 10 : (i < 334 * 84375) ? 11 : 12)))>=0	_
org.joda.time.chrono.BasicChronology#int#getDayOfMonth#?,long,int,int#478	0.0	0.0	0.0	(int)((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1>=0	_
org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone#long#previousTransition#?,long#1594	0.0	0.0	0.0	instant - 1>0	_
org.joda.time.chrono.GregorianChronology#int#getMinYear#?#221	0.0	0.0	0.0	MIN_YEAR<0	_
org.joda.time.chrono.BasicYearDateTimeField#long#set#?,long,int#85	0.0	0.0	0.0	iChronology.setYear(instant,year)>=0	_
org.joda.time.chrono.ZonedChronology$ZonedDurationField#long#getUnitMillis#?#295	0.0	0.0	0.0	iField.getUnitMillis()>=0	_
