line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#277	0.5773502691896258	0.5773502691896258	0.4618802153517007		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.5773502691896258	0.0	0.4618802153517007		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#183	0.5773502691896258	0.5773502691896258	0.4618802153517007		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.4082482904638631	0.4082482904638631	0.40824829046386313	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.4082482904638631	0.4082482904638631	0.40824829046386313	parameters == null	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#203	0.4082482904638631	0.4082482904638631	0.40824829046386313	maxYIdx!=0	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#132	0.3779644730092272	0.3779644730092272	0.3779644730092272	Gaussian.value(diff,param[0],i2s2)>0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#384	0.21320071635561041	1.0	0.36681153124565985	(actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5>=xNorm	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.4082482904638631	0.4082482904638631	0.36449237056739164	!(observations.length < 3)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.4082482904638631	0.0	0.3265986323710905		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.4082482904638631	0.0	0.3265986323710905		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.4082482904638631	0.0	0.3265986323710905		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#533	0.25	0.7071067811865475	0.3203067944372927	fp / (delta * sum2)>dxNorm	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#154	0.3779644730092272	0.0	0.30237157840738177		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#49	0.2182178902359924	0.5773502691896258	0.2900443660267191	x==weight	_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.35355339059327373	0.0	0.282842712474619		_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.2773500981126146	0.30151134457776363	0.2821823474056444	norm * FastMath.exp(-xMinusMean * xMinusMean * i2s2)!=0	_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.31622776601683794	0.0	0.2529822128134704		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.22360679774997896	0.35355339059327373	0.24959611631863793	x==0	_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.30151134457776363	0.0	0.24120907566221092		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#688	0.2182178902359924	0.2773500981126146	0.23004433181131684	sin * cotan>=dpj	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.22360679774997896	0.22941573387056174	0.22476858497409552	y>0	_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.22360679774997896	0.22360679774997896	0.22360679774997896	weight>0	_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.2581988897471611	0.0	0.2065591117977289		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.22360679774997896	0.0	0.17888543819998318		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#152	0.22360679774997896	0.0	0.17888543819998318		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.22360679774997896	0.0	0.17888543819998318		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.22360679774997896	0.0	0.17888543819998318		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#203	0.22360679774997896	0.0	0.17888543819998318		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.2182178902359924	0.0	0.17457431218879393		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.2182178902359924	0.0	0.17457431218879393		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#53	0.21320071635561041	0.0	0.17056057308448835		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#828	0.14907119849998599	0.2581988897471611	0.1671098317873574	gamma * weightedResidualJacobian[j][pk]>ak2	_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.20412414523193154	0.0	0.16329931618554525		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#212	0.1386750490563073	0.17407765595569785	0.14575557043618542	orthoTolerance==parRelativeTolerance	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#842	0.14285714285714285	0.1543033499620919	0.14514638427813267	permutation[k]<k	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.17677669529663687	0.0	0.1414213562373095		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#142	0.11952286093343936	0.16222142113076254	0.128062572972904	cols<i	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.125	0.125	0.12422778767136677	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#115	0.11952286093343936	0.1203858530857692	0.11969545936390533	-ji[j] * wi<wi	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#246	0.11867816581938533	0.11867816581938533	0.11867816581938534	point.length!=maxEval	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#120	0.11867816581938533	0.11867816581938533	0.11867816581938534	!(w == null)	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3831	0.10369516947304253	0.10425720702853739	0.1038075769841415	a>=0	_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.12403473458920847	0.0	0.09922778767136678		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#73	0.12309149097933272	0.0	0.09847319278346618		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.09667364890456635	0.10101525445522107	0.0975419700146973	relativeThreshold>0	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.09712858623572641	0.09712858623572641	0.09712858623572643	absoluteThreshold>0	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.11952286093343936	0.0	0.09561828874675149		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.11952286093343936	0.0	0.09561828874675149		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#47	0.11952286093343936	0.0	0.09561828874675149		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.11867816581938533	0.0	0.09494253265550827		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.11867816581938533	0.0	0.09494253265550827		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.11704114719613057	0.0	0.09363291775690447		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.11704114719613057	0.0	0.09363291775690447		_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#765	0.06726727939963124	0.18257418583505536	0.08543660012138879	EXP_INT_TABLE_B[750 + intVal]>x	_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.09090909090909091	0.0	0.07272727272727274		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#62	0.09090909090909091	0.0	0.07272727272727274		_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.07053456158585983	0.07053456158585983	0.07053456158585983	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3911	0.06375767130633382	0.07495316889958614	0.06599677082498429	a>0	_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.0604122093330177	0.06142951168339512	0.060615669803093186	exp(x,0.0,null)>0	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.05976143046671968	0.05892556509887897	0.05693172485842382	o instanceof Object[]	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.05652334189442215	0.05661385170722978	0.05654144385698368	(a <= b) ? a : b>0	_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.06984302957695782	0.0	0.05587442366156625		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.06917144638660747	0.0	0.055337157109285974		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.06337242505244779	0.0	0.05069794004195824		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.04559607525875532	0.045980048987170286	0.045672870004438315	Math.sqrt(a)!=0	_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.05572782125753528	0.0	0.04458225700602823		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#68	0.052057920629535355	0.0	0.041646336503628284		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.03883678186903087	0.04003203845127178	0.03907583318547905	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x>0	_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1130	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1798	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1071	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1909	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1047	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1729	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1061	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1810	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1096	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#988	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	0.0	0.0	0.0		_
