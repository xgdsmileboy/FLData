line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.0	0.0	0.0	absoluteThreshold>0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#242	0.0	0.0	0.0	mtNext!=y	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#150	0.0	0.0	0.0	i < nSum	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.0	0.0	0.0	isSymmetric(matrix,false)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#724	0.0	0.0	0.0	hsig ? 0 : ccov1 * cc * (2. - cc)>negccov	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#469	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#956	0.0	0.0	0.0	!(i < x.length)	GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1247	0.0	0.0	0.0	!(c < m * cd)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#345	0.0	0.0	0.0	((data == null) || (data[0] == null)) ? 0 : data[0].length>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#808	0.0	0.0	0.0	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#562	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1219	0.0	0.0	0.0	!(r < n)	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#337	0.0	0.0	0.0	!(yInt < 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.0	0.0	0.0	vals[i - 1]!=val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1377	0.0	0.0	0.0	c < popSize	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1656	0.0	0.0	0.0	p * x2 + -1.9841269659586505E-4>=x	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.0	0.0	0.0	!(i < nCols)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#1015	0.0	0.0	0.0	i < x.length	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2240	0.0	0.0	0.0	cw.getRemB()<xa	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#413	0.0	0.0	0.0	i < rows	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#319	0.0	0.0	0.0	diagonalOnly==checkFeasableCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.0	0.0	0.0	getColumnDimension()==nRows	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.0	0.0	0.0	remA > 0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.0	0.0	0.0	function.value(point)>=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.0	0.0	0.0	i < diagonal.length	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#339	0.0	0.0	0.0	(data == null) ? 0 : data.length>0	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.0	0.0	0.0	data[index]>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1339	0.0	0.0	0.0	i < indices.length	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#193	0.0	0.0	0.0	matrix.getColumnDimension()>=rows	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.0	0.0	!(!matrix.isSquare())	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.0	0.0	0.0	(x < 0l) ? -x : x>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1172	0.0	0.0	0.0	!(i < m.getRowDimension())	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#581	0.0	0.0	0.0	!(i < n)	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2291	0.0	0.0	0.0	xa > 1.5707963267948966	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#96	0.0	0.0	0.0	equals(x,y,eps)	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1681	0.0	0.0	0.0	p<0	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3520	0.0	0.0	0.0	!(bits == 0x8000000000000000L)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.0	0.0	0.0	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.0	0.0	0.0	relativeThreshold>=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.0	0.0	0.0	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0	0.0	0.0	data.length>0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0	0.0	0.0	Math.sqrt(a)>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#290	0.0	0.0	0.0	!(i < data.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1312	0.0	0.0	0.0	max < m[r]	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#623	0.0	0.0	0.0	2. / ((dimension + 1.3) * (dimension + 1.3) + mueff)<=sumwq	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#85	0.0	0.0	0.0	!(col < columnCount)	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.0	0.0	0.0	finalK>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#872	0.0	0.0	0.0	Double.compare(value,o.value)>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.0	0.0	0.0	step!=end	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1095	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.0	0.0	0.0	indices[indices.length - i - 1]<i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1111	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#95	0.0	0.0	0.0	startPoint.length<maxEval	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1080	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#102	0.0	0.0	0.0	!(copyArray)	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1273	0.0	0.0	0.0	-0.16624882440418567<epsilon	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.0	0.0	0.0	!(f == null)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.0	0.0	0.0	(a <= b) ? a : b!=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.0	0.0	0.0	0>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1050	0.0	0.0	0.0	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#102	0.0	0.0	0.0	nextDouble()<=x	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1206	0.0	0.0	0.0	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#667	0.0	0.0	0.0	!(hsig)	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#252	0.0	0.0	0.0	!(Precision.compareTo(imagEigenvalues[i],0.0,EPSILON) > 0)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#969	0.0	0.0	0.0	boundaries != null && isRepairMode	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#344	0.0	0.0	0.0	i < nRows	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.0	0.0	0.0	FastMath.abs(p - c)<c	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.0	0.0	0.0	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.0	0.0	0.0	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#129	0.0	0.0	0.0	!(row < rowCount)	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.0	0.0	0.0	finalRemA>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0	0.0	0.0	log(x,null)<0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1194	0.0	0.0	0.0	!(i < m1.getRowDimension())	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.0	0.0	0.0	cachedQt == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#101	0.0	0.0	0.0	row < rowCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1279	0.0	0.0	0.0	m.getEntry(r,c)>=max	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0	0.0	0.0	walkInRowOrder(visitor)>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#307	0.0	0.0	0.0	data[row][column]>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1330	0.0	0.0	0.0	min!=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1066	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#68	0.0	0.0	0.0	!(rowDimension < 1)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1156	0.0	0.0	0.0	!(r < m.getRowDimension())	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.0	0.0	0.0	getColumnDimension()<=rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#226	0.0	0.0	0.0	!(k < m)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#840	0.0	0.0	0.0	!(i < doubles.length)	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1750	0.0	0.0	0.0	b + d<=c	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.0	0.0	0.0	getRowDimension()>=column	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.0	0.0	0.0	!(++count > maximalCount)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1141	0.0	0.0	0.0	!(c < m.getColumnDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1295	0.0	0.0	0.0	c < m.getColumnDimension()	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1823	0.0	0.0	0.0	sinQ(a,b)>=0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	0.0	0.0	!(o == null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#930	0.0	0.0	0.0	i < x.length	GT
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.0	0.0	0.0	maximalCount>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1126	0.0	0.0	0.0	c < cols.length	_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.0	0.0	0.0	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.0	0.0	0.0	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1038	0.0	0.0	0.0	isMinimize ? penalty : -penalty<=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.0	0.0	0.0	finalRemB>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#531	0.0	0.0	0.0	!(i < nRows)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#559	0.0	0.0	0.0	!(inputSigma != null)	_
