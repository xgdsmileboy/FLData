line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.dfp.Dfp#Dfp#divide#?,Dfp#1706	0.0	1.923076923076923	0.3846153846153846	trial + minadj==nsqd	_
org.apache.commons.math.dfp.Dfp#double#toDouble#?#2375	0.0	1.9000000000000001	0.38000000000000006	mantissa | ((exponent + 1023L) << 52)<=mantissa	GT
org.apache.commons.math.dfp.Dfp#?#Dfp#?,DfpField,String#440	0.0	0.9545454545454545	0.19090909090909092	q == mant.length * rsize + offset + 1	_
org.apache.commons.math.dfp.Dfp#String#dfp2string#?#2060	0.0	0.4411764705882353	0.08823529411764706	exp==p	_
org.apache.commons.math.dfp.Dfp#int#align#?,int#709	0.0	0.3310344827586207	0.06620689655172414	adiff > (mant.length + 1)	_
org.apache.commons.math.dfp.Dfp#Dfp#divide#?,int#1841	0.0	0.24637681159420285	0.049275362318840575	r - rh * divisor>rh	_
org.apache.commons.math.dfp.Dfp#Dfp#add#?,Dfp#1279	0.0	0.1393939393939394	0.02787878787878788	!(i < mant.length)	_
org.apache.commons.math.dfp.Dfp#Dfp#sqrt#?#1925	0.0	0.09999999999999998	0.019999999999999997	!(x.unequal(px))	_
org.apache.commons.math.dfp.Dfp#int#log10#?#1105	0.0	0.08181818181818182	0.016363636363636365	exp * 4 - 4<0	_
org.apache.commons.math.dfp.Dfp#int#compare#?,Dfp,Dfp#860	0.0	0.06886657101865136	0.013773314203730272	a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE	_
org.apache.commons.math.dfp.Dfp#boolean#unequal#?,Dfp#845	0.0	0.06837606837606836	0.013675213675213672	!(isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits())	_
org.apache.commons.math.dfp.Dfp#Dfp#trunc#?,DfpField.RoundingMode#1000	0.0	0.05925925925925926	0.011851851851851853	!(changed)	_
org.apache.commons.math.dfp.Dfp#Dfp#multiply#?,Dfp#1492	0.0	0.05	0.010000000000000002	result.mant[mant.length - 1] == 0	_
org.apache.commons.math.dfp.Dfp#?#Dfp#?,DfpField,long#225	0.0	0.046218487394957986	0.009243697478991597	x < 0	_
org.apache.commons.math.dfp.Dfp#int#complement#?,int#1147	0.0	0.040747028862478774	0.008149405772495755	RADIX - mant[i] - 1==i	_
org.apache.commons.math.dfp.Dfp#int#round#?,int#1372	0.0	0.026272577996715923	0.005254515599343185	mant[i] + rh==rh	_
org.apache.commons.math.dfp.Dfp#void#shiftLeft#?#668	0.0	0.020289855072463767	0.004057971014492754	mant[i - 1]==i	_
org.apache.commons.math.dfp.DfpMath#Dfp#pow#?,Dfp,int#217	0.0	0.004761904761904773	9.523809523809545E-4	!(a == 0)	_
org.apache.commons.math.dfp.Dfp#void#shiftRight#?#680	0.0	0.0022988505747126436	4.5977011494252877E-4	mant[i + 1]>i	_
org.apache.commons.math.dfp.Dfp#int#getRadixDigits#?#640	0.0	0.0	0.0	field.getRadixDigits()!=0	_
org.apache.commons.math.dfp.DfpField#Dfp#computePi#?,Dfp,Dfp,Dfp#629	0.0	0.0	0.0	yk.equals(ykM1)	_
org.apache.commons.math.dfp.Dfp#Dfp#newInstance#?,Dfp#595	0.0	0.0	0.0	!(field.getRadixDigits() != d.field.getRadixDigits())	_
org.apache.commons.math.dfp.Dfp#String#toString#?#1955	0.0	0.0	0.0	!(nans != FINITE)	_
org.apache.commons.math.dfp.DfpField#Dfp#computeExp#?,Dfp,Dfp#656	0.0	0.0	0.0	y.equals(py)	_
org.apache.commons.math.dfp.Dfp#boolean#lessThan#?,Dfp#754	0.0	0.0	0.0	!(field.getRadixDigits() != x.field.getRadixDigits())	_
org.apache.commons.math.dfp.DfpField#Dfp#computeLn#?,Dfp,Dfp,Dfp#737	0.0	0.0	0.0	den + 2>=i	_
org.apache.commons.math.dfp.Dfp#boolean#greaterThan#?,Dfp#779	0.0	0.0	0.0	!(field.getRadixDigits() != x.field.getRadixDigits())	_
org.apache.commons.math.dfp.Dfp#boolean#equals#?,Object#818	0.0	0.0	0.0	other instanceof Dfp	_
org.apache.commons.math.dfp.DfpField#int#getRadixDigits#?#248	0.0	0.0	0.0	radixDigits>=0	_
org.apache.commons.math.dfp.DfpField#void#setIEEEFlagsBits#?,int#328	0.0	0.0	0.0	bits & (FLAG_INVALID | FLAG_DIV_ZERO | FLAG_OVERFLOW| FLAG_UNDERFLOW| FLAG_INEXACT)<=bits	_
org.apache.commons.math.dfp.DfpField#Dfp[]#split#?,String#536	0.0	0.0	0.0	buf[i] == '.'	_
org.apache.commons.math.dfp.DfpField#void#computeStringConstants#?,int#570	0.0	0.0	0.0	sqr2String == null || sqr2String.length() < highPrecisionDecimalDigits - 3	_
org.apache.commons.math.dfp.DfpField#?#DfpField#?,int,boolean#190	0.0	0.0	0.0	(decimalDigits < 13) ? 4 : (decimalDigits + 3) / 4!=decimalDigits	_
