line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#730	1.0	1.0	1.0	negcovMax<=negalphaold	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#240	1.0	0.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#247	1.0	0.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#562	1.0	1.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1014	0.33333333333333337	1.0	0.46666666666666673	isMinimize ? penalty : -penalty>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#995	0.5	0.5	0.4		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#934	0.33333333333333337	0.33333333333333337	0.33333333333333337	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#909	0.33333333333333337	0.33333333333333337	0.33333333333333337	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#949	0.33333333333333337	0.33333333333333337	0.2666666666666667		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1220	0.0625	1.0	0.25	mat.getColumnDimension()==m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#806	0.0625	1.0	0.25	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#851	0.0625	1.0	0.25	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#538	0.25	1.0	0.2421052631578948	!(inputSigma != null)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.04166666666666663	1.0	0.2333333333333333	lambda==diagonalOnly	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.050000000000000044	0.5	0.14000000000000004	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.023255813953488413	0.5	0.11818181818181817	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.11111111111111116	0.125	0.09772727272727275	upper[i]>v	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.050000000000000044	0.19999999999999996	0.08000000000000003	getRowDimension()<column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#787	0.06666666666666665	0.06666666666666665	0.06666666666666665	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1315	0.06666666666666665	0.06666666666666665	0.06666666666666665	!(i < indices.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1327	0.06666666666666665	0.06666666666666665	0.06666666666666665	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1086	0.06666666666666665	0.06666666666666665	0.06666666666666665	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1130	0.06666666666666665	0.06666666666666665	0.06666666666666665	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1117	0.06666666666666665	0.06666666666666665	0.06666666666666665	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.0625	0.0625	0.0625	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1353	0.0625	0.0625	0.0625	!(c < popSize)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.0625	0.0625	0.0625	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1288	0.0625	0.0625	0.0625	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1239	0.0625	0.0625	0.0625	start==step	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1071	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1056	0.0625	0.0625	0.0625	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.0625	0.0625	0.0625	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.0625	0.0625	0.0625	hsig	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.0625	0.0625	0.0625	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1253	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1302	0.0625	0.0625	0.0625	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1041	0.0625	0.0625	0.0625	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#819	0.0625	0.0625	0.0625	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1278	0.0625	0.0625	0.0625	min>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1101	0.0625	0.0625	0.0625	r < m.getRowDimension()	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.02564102564102566	0.19999999999999996	0.060512820512820524	getRowDimension()<column	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.05882352941176472	0.05882352941176472	0.05882352941176472	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.05555555555555558	0.0625	0.056944444444444464	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.052631578947368474	0.052631578947368474	0.05263157894736848	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.050000000000000044	0.052631578947368474	0.05052631578947373	getColumnDimension()>=rowCount	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#921	0.0625	0.0	0.05		GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#360	0.0625	0.0	0.05		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#896	0.0625	0.0	0.05		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#982	0.0625	0.0	0.05		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1209	0.0625	0.0	0.05		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#846	0.0625	0.0	0.05		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.05882352941176472	0.0	0.04705882352941178		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.045454545454545414	0.045454545454545414	0.045454545454545414	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.04347826086956519	0.04347826086956519	0.04347826086956519	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.04166666666666663	0.04166666666666663	0.04166666666666663	getRowDimension()>=column	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#106	0.038461538461538436	0.04166666666666663	0.039102564102564075	r * FastMath.sin(alpha)>alpha	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.0117647058823529	0.1428571428571429	0.0379831932773109	getColumnDimension()>rowCount	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.03448275862068961	0.03448275862068961	0.03448275862068961	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.04166666666666663	0.0	0.033333333333333305		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#282	0.04166666666666663	0.0	0.033333333333333305		_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.02941176470588236	0.032258064516129004	0.02998102466793169	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.03703703703703709	0.0	0.029629629629629672		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.011904761904761862	0.09999999999999998	0.029523809523809487	m.getColumnDimension()>nRows	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.02857142857142858	0.02941176470588236	0.028739495798319338	maximalCount!=0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#245	0.027027027027026973	0.027027027027026973	0.027027027027026976	mt[k + (M - N)] ^ (y >>> 1) ^ MAG01[y & 0x1]<=k	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.025000000000000022	0.025000000000000022	0.02451219512195124	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.025000000000000022	0.025000000000000022	0.02451219512195124	!(i < rows)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.022222222222222254	0.022222222222222254	0.022222222222222258	cachedQ == null	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.02777777777777779	0.0	0.022222222222222233		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.02777777777777779	0.0	0.022222222222222233		_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.01851851851851849	0.03703703703703709	0.022222222222222213	FastMath.abs(p - c)>p	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.021739130434782594	0.021739130434782594	0.021739130434782594	cachedQt == null	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.021276595744680882	0.021276595744680882	0.021276595744680882	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.02083333333333337	0.02083333333333337	0.020493197278911593	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.011627906976744207	0.05555555555555558	0.020099875156054957	d[0].length>nRows	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.020000000000000018	0.020000000000000018	0.020000000000000018	!(i < nCols)	_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.025000000000000022	0.0	0.020000000000000018		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.024390243902439046	0.0	0.019512195121951237		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.024390243902439046	0.0	0.019512195121951237		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.024390243902439046	0.0	0.019512195121951237		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.00694444444444442	0.05882352941176472	0.01732026143790848	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#407	0.006896551724137945	0.05882352941176472	0.0172819472616633	getColumnDimension()>rows	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.02083333333333337	0.0	0.016666666666666698		_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.006849315068493178	0.050000000000000044	0.015479452054794552	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.013698630136986356	0.013698630136986356	0.013698630136986358	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.013513513513513487	0.013698630136986356	0.013550536838208062	function.value(point)>0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.01666666666666672	0.0	0.013333333333333376		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.012499999999999956	0.012499999999999956	0.012499999999999957	!(f == null)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.011904761904761862	0.013333333333333308	0.012190476190476151	relativeThreshold>=0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.012048192771084376	0.012048192771084376	0.012048192771084378	absoluteThreshold>0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.014925373134328401	0.0	0.011940298507462721		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.013513513513513487	0.0	0.01081081081081079		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.010526315789473717	0.01041666666666663	0.010504385964912299	sinQ(xa,xb)!=0	_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.012820512820512775	0.0	0.01025641025641022		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.012499999999999956	0.0	0.009999999999999966		_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.009615384615384581	0.009615384615384581	0.009615384615384581	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.0117647058823529	0.0	0.009411764705882321		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.00917431192660545	0.00917431192660545	0.00917431192660545	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.009615384615384581	0.0	0.007692307692307665		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.009615384615384581	0.0	0.007692307692307665		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.009345794392523366	0.0	0.007476635514018693		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.006896551724137945	0.006849315068493178	0.006887104393008992	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.00666666666666671	0.00666666666666671	0.00666666666666671	0>=0	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.007692307692307665	0.0	0.006153846153846132		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.005617977528089901	0.005617977528089901	0.005617977528089901	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.006849315068493178	0.0	0.005479452054794543		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.005347593582887722	0.005347593582887722	0.005347593582887722	i < nRows	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1799	0.0037174721189591198	0.011235955056179803	0.005221168706403257	c<sinEpsA	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.005813953488372103	0.0	0.004651162790697683		_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.004444444444444473	0.005154639175257714	0.004586483390607122	finalRemB>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.005681818181818232	0.0	0.004545454545454586		_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.004444444444444473	0.004444444444444473	0.004444444444444473	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.004444444444444473	0.004444444444444473	0.004444444444444473	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.004444444444444473	0.004444444444444473	0.004444444444444473	finalRemA>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#252	0.005555555555555536	0.0	0.004444444444444429		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.003731343283582045	0.00694444444444442	0.0043739635157545205	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.005434782608695676	0.0	0.004347826086956541		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.005319148936170248	0.0	0.004255319148936199		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#304	0.0038022813688213253	0.00591715976331364	0.004225257047719789	data[row][column]<0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#283	0.0039215686274509665	0.005181347150259086	0.004173524332012591	subMatrix[0].length==nRows	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.004048582995951455	0.0043290043290042934	0.004104667262562023	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.0031847133757961776	0.007462686567164201	0.004040308014069782	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.003424657534246589	0.0050000000000000044	0.0037397260273972725	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.003424657534246589	0.0043290043290042934	0.0036055268931981304	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.004405286343612369	0.0	0.0035242290748898953		_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.0029850746268657025	0.005102040816326481	0.0034084678647578583	log(x,null)<0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.0033333333333332993	0.0033444816053511683	0.0033355629877368734	data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.0039525691699604515	0.0	0.003162055335968361		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#543	0.0039215686274509665	0.0	0.0031372549019607733		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#310	0.0039215686274509665	0.0	0.0031372549019607733		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.0038022813688213253	0.0	0.0030418250950570605		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.002915451895043719	0.002915451895043719	0.002915451895043719	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.0029069767441860517	0.0029069767441860517	0.0029069767441860517	((data == null) || (data[0] == null)) ? 0 : data[0].length>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.002481389578163795	0.002481389578163795	0.002481389578163795	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.0024390243902439046	0.0024390243902439046	0.0024390243902439046	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.0024330900243308973	0.0024330900243308973	0.0024330900243308973	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3508	0.0023529411764705577	0.00295857988165682	0.0023574123235992504	a>0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.0019120458891013214	0.003095975232198178	0.002148831757720693	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.0026525198938992522	0.0	0.002122015915119402		_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.001831501831501825	0.002949852507374673	0.0020551719666763945	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.001953125	0.00195694716242667	0.0019538894324853343	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.0019267822736031004	0.0019305019305019266	0.0019275262049828657	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0017889087656529634	0.0017889087656529634	0.0017889087656529636	!(cb == null)	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.002053388090349051	0.0	0.0016427104722792408		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.0011441647597254523	0.0034129692832765013	0.0015979256644356621	Math.sqrt(a)<=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.0019920318725099584	0.0	0.0015936254980079669		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.00189753320683117	0.0	0.0015180265654649362		_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0014727540500736325	0.001477104874446078	0.0014736242149481216	!(o == null)	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.0017921146953404632	0.0	0.0014336917562723706		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	8.554319931565191E-4	0.0011848341232227888	9.213124191697731E-4	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#107	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
