line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#730	1.0	1.0	1.0	negcovMax<=negalphaold	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?#240	1.0	0.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int#247	1.0	0.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#562	1.0	1.0	0.8		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#penalty#?,double[],double[]#1014	0.5773502691896258	1.0	0.6618802153517007	isMinimize ? penalty : -penalty>0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repair#?,double[]#994	0.7071067811865475	0.7071067811865475	0.6033015715890102	x[i] > 1.0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#decode#?,double[]#934	0.5773502691896258	0.5773502691896258	0.5773502691896258	i < x.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#encode#?,double[]#909	0.5773502691896258	0.5773502691896258	0.5773502691896258	!(i < x.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double#value#?,double[]#949	0.5773502691896258	0.5773502691896258	0.4618802153517007		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#checkParameters#?#523	0.5	1.0	0.4265986323710905	!(hasInfiniteBounds)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1220	0.25	1.0	0.4	mat.getColumnDimension()==m	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#806	0.25	1.0	0.4	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#int#compareTo#?,DoubleIndex#851	0.25	1.0	0.4	Double.compare(value,o.value)==0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#308	0.20412414523193154	1.0	0.36329931618554523	lambda==diagonalOnly	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarMultiply#?,double#127	0.22360679774997896	0.7071067811865475	0.3203067944372927	getColumnDimension()>rowCount	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#114	0.3333333333333333	0.35355339059327373	0.31191975378086567	upper[i]>v	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.22360679774997896	0.4472135954999579	0.2683281572999748	getRowDimension()<column	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.15249857033260467	0.7071067811865475	0.262025894068415	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateBD#?,double#787	0.2581988897471611	0.2581988897471611	0.2581988897471611	!(max(diagD) > 1e14 * min(diagD))	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#inverse#?,int[]#1315	0.2581988897471611	0.2581988897471611	0.2581988897471611	!(i < indices.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1327	0.2581988897471611	0.2581988897471611	0.2581988897471611	i < indices.length	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#divide#?,RealMatrix,RealMatrix#1086	0.2581988897471611	0.2581988897471611	0.2581988897471611	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sumRows#?,RealMatrix#1130	0.2581988897471611	0.2581988897471611	0.2581988897471611	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#triu#?,RealMatrix,int#1117	0.2581988897471611	0.2581988897471611	0.2581988897471611	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#eye#?,int,int#1195	0.25	0.25	0.25	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#randn1#?,int,int#1353	0.25	0.25	0.25	!(c < popSize)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#diag#?,RealMatrix#1148	0.25	0.25	0.25	i < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,double[]#1288	0.25	0.25	0.25	!(max < m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1239	0.25	0.25	0.25	start==step	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#times#?,RealMatrix,RealMatrix#1071	0.25	0.25	0.25	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1056	0.25	0.25	0.25	c < m.getColumnDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#log#?,RealMatrix#1026	0.25	0.25	0.25	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#ones#?,int,int#1182	0.25	0.25	0.25	r < n	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#boolean#updateEvolutionPaths#?,RealMatrix,RealMatrix#646	0.25	0.25	0.25	hsig	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#copyColumn#?,RealMatrix,int,RealMatrix,int#1170	0.25	0.25	0.25	!(i < m1.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1253	0.25	0.25	0.25	r < m.getRowDimension()	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,double[]#1302	0.25	0.25	0.25	!(min > m[r])	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sqrt#?,RealMatrix#1041	0.25	0.25	0.25	!(r < m.getRowDimension())	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#819	0.25	0.25	0.25	!(i < doubles.length)	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1278	0.25	0.25	0.25	min>=0	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#selectColumns#?,RealMatrix,int[]#1101	0.25	0.25	0.25	r < m.getRowDimension()	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createColumnRealMatrix#?,double[]#339	0.24253562503633297	0.24253562503633297	0.24253562503633297	!(columnData == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#scalarAdd#?,double#113	0.23570226039551587	0.25	0.23856180831641272	getColumnDimension()<rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getD#?#247	0.22941573387056174	0.22941573387056174	0.22941573387056174	cachedD == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#add#?,RealMatrix#82	0.22360679774997896	0.22941573387056174	0.22476858497409552	getColumnDimension()>=rowCount	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.16012815380508713	0.4472135954999579	0.2175452421440613	getRowDimension()<column	_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealDiagonalMatrix#?,double[]#217	0.21320071635561041	0.21320071635561041	0.21320071635561044	i < diagonal.length	_
org.apache.commons.math3.linear.EigenDecomposition#RealMatrix#getV#?#223	0.20851441405707477	0.20851441405707477	0.2085144140570748	cachedV == null	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.20412414523193154	0.20412414523193154	0.20412414523193156	getRowDimension()>=column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#double[]#repairAndDecode#?,double[]#921	0.25	0.0	0.2		GT
org.apache.commons.math3.optimization.direct.CMAESOptimizer#PointValuePair#doOptimize#?#360	0.25	0.0	0.2		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#?#FitnessFunction#?#896	0.25	0.0	0.2		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction#void#setValueRange#?,double#982	0.25	0.0	0.2		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#zeros#?,int,int#1209	0.25	0.0	0.2		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex#?#DoubleIndex#?,double,int#846	0.25	0.0	0.2		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextGaussian#?#106	0.19611613513818404	0.20412414523193154	0.19771773715693355	r * FastMath.sin(alpha)>alpha	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#getFrobeniusNorm#?#280	0.24253562503633297	0.0	0.19402850002906638		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#int#getMaxEvaluations#?#72	0.18569533817705186	0.18569533817705186	0.18569533817705186	evaluations.getMaximalCount()!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkAdditionCompatible#?,AnyMatrix,AnyMatrix#506	0.17149858514250882	0.1796053020267749	0.17311992851936203	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.util.Incrementor#int#getMaximalCount#?#105	0.1690308509457033	0.17149858514250882	0.16952439778506442	maximalCount!=0	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#245	0.1643989873053573	0.1643989873053573	0.1643989873053573	mt[k + (M - N)] ^ (y >>> 1) ^ MAG01[y & 0x1]<=k	_
org.apache.commons.math3.util.MathArrays#int[]#copyOf#?,int[],int#549	0.20412414523193154	0.0	0.16329931618554525		_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean#282	0.20412414523193154	0.0	0.16329931618554525		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#subtract#?,RealMatrix#99	0.10846522890932808	0.3779644730092272	0.16236507772930792	getColumnDimension()>rowCount	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#116	0.15811388300841897	0.15811388300841897	0.15656178611256866	isSymmetric(matrix,false)	_
org.apache.commons.math3.linear.EigenDecomposition#boolean#isSymmetric#?,RealMatrix,boolean#195	0.15811388300841897	0.15811388300841897	0.15656178611256866	!(i < rows)	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#65	0.19245008972987526	0.0	0.15396007178390023		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#multiply#?,RealMatrix#144	0.1091089451179962	0.31622776601683794	0.15053270929776458	m.getColumnDimension()>nRows	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.14907119849998599	0.14907119849998599	0.14907119849998599	cachedQ == null	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.14744195615489714	0.14744195615489714	0.14744195615489714	cachedQt == null	_
org.apache.commons.math3.optimization.SimpleValueChecker#boolean#converged#?,int,PointValuePair,PointValuePair#79	0.13608276348795434	0.19245008972987526	0.14735622873633852	FastMath.abs(p - c)>p	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#97	0.14586499149789456	0.14586499149789456	0.14586499149789456	0<=0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.14433756729740646	0.14433756729740646	0.14315322774519557	!(!matrix.isSquare())	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#537	0.1414213562373095	0.1414213562373095	0.1414213562373095	!(i < nCols)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getUpperBound#?#80	0.16666666666666666	0.0	0.13333333333333333		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#double[]#getLowerBound#?#73	0.16666666666666666	0.0	0.13333333333333333		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][],boolean#112	0.10783277320343841	0.23570226039551587	0.13194028247961198	d[0].length>nRows	_
org.apache.commons.math3.linear.EigenDecomposition#void#transformToTridiagonal#?,RealMatrix#555	0.15811388300841897	0.0	0.1264911064067352		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getSecondaryDiagonalRef#?#185	0.15617376188860607	0.0	0.12493900951088487		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#?#BaseAbstractMultivariateSimpleBoundsOptimizer#?,ConvergenceChecker<PointValuePair>#66	0.15617376188860607	0.0	0.12493900951088487		_
org.apache.commons.math3.linear.TriDiagonalTransformer#double[]#getMainDiagonalRef#?#175	0.15617376188860607	0.0	0.12493900951088487		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#87	0.11704114719613057	0.11704114719613057	0.11704114719613058	(high | low) * 0x1.0p-52d!=0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double#computeObjectiveValue#?,double[]#99	0.11624763874381928	0.11704114719613057	0.11640634043428155	function.value(point)>0	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#193	0.14433756729740646	0.0	0.11547005383792518		_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#transpose#?#599	0.08333333333333333	0.24253562503633297	0.11517379167393327	getColumnDimension()>nRows	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#walkInRowOrder#?,RealMatrixPreservingVisitor#407	0.08304547985373997	0.24253562503633297	0.11494350889025859	getColumnDimension()>rows	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimizeInternal#?,int,MultivariateFunction,GoalType,double[]#128	0.11180339887498948	0.11180339887498948	0.11180339887498948	!(f == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double#walkInOptimizedOrder#?,RealMatrixPreservingVisitor#873	0.0827605888602368	0.22360679774997896	0.11092983063818523	walkInRowOrder(visitor)!=0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#85	0.1091089451179962	0.11547005383792514	0.11038116686198199	relativeThreshold>=0	_
org.apache.commons.math3.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#92	0.10976425998969035	0.10976425998969035	0.10976425998969036	absoluteThreshold>0	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#ConvergenceChecker<PointValuePair>#getConvergenceChecker#?#82	0.12909944487358055	0.0	0.10327955589886445		_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2309	0.10259783520851541	0.10206207261596577	0.1024906826900055	sinQ(xa,xb)!=0	_
org.apache.commons.math3.linear.MatrixUtils#void#checkSubtractionCompatible#?,AnyMatrix,AnyMatrix#523	0.09805806756909202	0.09805806756909202	0.09805806756909202	!((left.getRowDimension() != right.getRowDimension()) || (left.getColumnDimension() != right.getColumnDimension()))	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[]#105	0.12216944435630522	0.0	0.09773555548504419		_
org.apache.commons.math3.linear.MatrixUtils#void#checkMultiplicationCompatible#?,AnyMatrix,AnyMatrix#541	0.09578262852211514	0.09578262852211514	0.09578262852211514	!(left.getColumnDimension() != right.getRowDimension())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#GoalType#getGoalType#?#155	0.11624763874381928	0.0	0.09299811099505544		_
org.apache.commons.math3.optimization.PointValuePair#double[]#getPoint#?#74	0.11322770341445956	0.0	0.09058216273156766		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#double[]#getStartPoint#?#162	0.11180339887498948	0.0	0.08944271909999159		_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer#?#BaseAbstractMultivariateOptimizer#?,ConvergenceChecker<PointValuePair>#67	0.10846522890932808	0.0	0.08677218312746247		_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2255	0.08304547985373997	0.0827605888602368	0.08298850165503935	-cosQ(xa,xb)<=0	_
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor#double#end#?#41	0.08164965809277261	0.08164965809277261	0.08164965809277261	0>=0	_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double#47	0.09805806756909202	0.0	0.07844645405527362		_
org.apache.commons.math3.optimization.PointValuePair#?#PointValuePair#?,double[],double,boolean#61	0.09805806756909202	0.0	0.07844645405527362		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,int,int#81	0.09667364890456635	0.0	0.0773389191236531		_
org.apache.commons.math3.linear.MatrixUtils#RealMatrix#createRealMatrix#?,double[][]#130	0.07495316889958614	0.07495316889958614	0.07495316889958614	!(data == null || data[0] == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#copyOut#?#527	0.07312724241271307	0.07312724241271307	0.07312724241271307	i < nRows	_
org.apache.commons.math3.util.Pair#V#getValue#?#74	0.08770580193070293	0.0	0.07016464154456235		_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1799	0.06097107608496923	0.105999788000636	0.0699768184681026	c<sinEpsA	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemB#?#3839	0.06666666666666667	0.07179581586177382	0.0676924965056881	finalRemB>0	_
org.apache.commons.math3.util.FastMath$CodyWaite#?#CodyWaite#?,double,double#3808	0.06666666666666667	0.06666666666666667	0.06666666666666667	remA > 0	_
org.apache.commons.math3.util.FastMath$CodyWaite#int#getK#?#3827	0.06666666666666667	0.06666666666666667	0.06666666666666667	finalK>=0	_
org.apache.commons.math3.util.FastMath$CodyWaite#double#getRemA#?#3833	0.06666666666666667	0.06666666666666667	0.06666666666666667	finalRemA>0	_
org.apache.commons.math3.linear.AbstractRealMatrix#boolean#isSquare#?#616	0.0827605888602368	0.0	0.06620847108818943		_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1820	0.06108472217815261	0.08333333333333333	0.06553444440918876	-(a - pi2a + xa)>pi2b	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double#getEntry#?,int,int#304	0.061662641597820735	0.07692307692307693	0.06471472866287198	data[row][column]<0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#283	0.06262242910851495	0.07198157507486945	0.06449425830178586	subMatrix[0].length==nRows	_
org.apache.commons.math3.linear.ArrayRealVector#double#getEntry#?,int#600	0.06362847629757777	0.0657951694959769	0.0640618149372576	data[index]>0	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1274	0.05643326479831003	0.08638684255813601	0.06242398035027523	lnza * epsilon + 0.19999954120254515>=x	_
org.apache.commons.math3.util.Pair#K#getKey#?#65	0.07624928516630233	0.0	0.06099942813304187		_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.058520573598065284	0.07071067811865475	0.06095859450218318	p * x2 + 0.041666666666621166<x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#RealMatrix#createMatrix#?,int,int#144	0.07537783614444091	0.0	0.06030226891555273		_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.058520573598065284	0.0657951694959769	0.05997549277764761	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#double[][]#getData#?#252	0.07453559924999299	0.0	0.0596284793999944		_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,double#272	0.07372097807744857	0.0	0.05897678246195886		_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[]#86	0.07293249574894728	0.0	0.058345996599157825		_
org.apache.commons.math3.util.FastMath#double#log#?,double#1096	0.05463583647081531	0.07142857142857142	0.05799438346236654	log(x,null)<0	_
org.apache.commons.math3.linear.ArrayRealVector#int#getDimension#?#610	0.05773502691896257	0.05783149319662402	0.05775432017449486	data.length>0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getRowDimension#?#335	0.05399492471560388	0.05399492471560388	0.05399492471560388	(data == null) ? 0 : data.length>=0	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#int#getColumnDimension#?#341	0.053916386601719206	0.053916386601719206	0.05391638660171921	((data == null) || (data[0] == null)) ? 0 : data[0].length>0	_
org.apache.commons.math3.util.Pair#?#Pair#?,K,V#46	0.0663723311599972	0.0	0.053097864927997764		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,double[][]#80	0.06286946134619315	0.0	0.05029556907695452		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#copyIn#?,double[][]#543	0.06262242910851495	0.0	0.05009794328681197		_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setEntry#?,int,int,double#310	0.06262242910851495	0.0	0.05009794328681197		_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#71	0.04981354813867179	0.04981354813867179	0.04981354813867179	!(columnDimension < 1)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#402	0.04938647983247948	0.04938647983247948	0.049386479832479485	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#?#Array2DRowRealMatrix#?,int,int#61	0.061662641597820735	0.0	0.04933011327825659		_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#418	0.049326362366699	0.049326362366699	0.049326362366699	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3508	0.048507125007266595	0.05439282932204212	0.04855310358238486	a>0	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.04372694694466261	0.055641488407465724	0.04610985523722323	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#long#abs#?,long#2974	0.04279604925109129	0.054312544659356844	0.045099348332744406	(x < 0l) ? -x : x==0	_
org.apache.commons.math3.util.Incrementor#void#incrementCount#?#155	0.044194173824159216	0.04423739552038088	0.04420281816340355	!(++count > maximalCount)	_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3396	0.04389512813061471	0.04393747751637468	0.043903598007766706	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.042295493443781355	0.042295493443781355	0.042295493443781355	!(cb == null)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkMatrixIndex#?,AnyMatrix,int,int#390	0.051502620262460476	0.0	0.041202096209968384		_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#375	0.03382550457458692	0.0584206237836986	0.038744528416409255	Math.sqrt(a)<=0	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.038376477822666816	0.03843312210120439	0.03838780667837433	!(o == null)	_
org.apache.commons.math3.util.Incrementor#void#setMaximalCount#?,int#96	0.04531432544294438	0.0	0.0362514603543555		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?#53	0.04463218426774518	0.0	0.035705747414196146		_
org.apache.commons.math3.util.Incrementor#void#resetCount#?#164	0.04356068418690321	0.0	0.03484854734952257		_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int#62	0.04233337566673017	0.0	0.033866700533384135		_
org.apache.commons.math3.util.FastMath#double#abs#?,double#2992	0.029247769028706173	0.034421419541075714	0.03028249913118008	(x < 0.0) ? -x : (x == 0.0) ? 0.0 : x==0	_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,NumberFormat#82	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,NumberFormat#99	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#?#MersenneTwister#?#108	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#NumberFormat#getFormat#?#207	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#165	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,long#216	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?,Locale#224	0.0	0.0	0.0		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#36	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?,Locale#54	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3464	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#?#RealVectorFormat#?,String,String,String,NumberFormat#107	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int#146	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String#115	0.0	0.0	0.0		_
org.apache.commons.math3.util.FastMathLiteralArrays#double[][]#loadLnMant#?#6174	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#?#RealMatrixFormat#?,String,String,String,String,String,String,NumberFormat#137	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?,Locale#171	0.0	0.0	0.0		_
org.apache.commons.math3.util.CompositeFormat#NumberFormat#getDefaultNumberFormat#?#43	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealVectorFormat#RealVectorFormat#getInstance#?#162	0.0	0.0	0.0		_
org.apache.commons.math3.linear.RealMatrixFormat#RealMatrixFormat#getInstance#?#215	0.0	0.0	0.0		_
org.apache.commons.math3.random.MersenneTwister#void#setSeed#?,int[]#203	0.0	0.0	0.0		_
