line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.util.MultidimensionalCounter#int#getCount#?,int#272	0.0	1.0	0.2	count + c[last]<=0	_
org.apache.commons.math.util.MultidimensionalCounter#int[]#getCounts#?,int#217	0.0	1.0	0.2	!(index < 0 || index >= totalSize)	GT
org.apache.commons.math.util.MultidimensionalCounter#?#MultidimensionalCounter#?,int#176	0.0	0.2666666666666666	0.05333333333333332	size[j]!=tS	_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.0	2.0220402386007807E-5	4.044080477201562E-6	(a <= b) ? a : b!=0	_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#997	0.0	0.0	0.0	as[1]==x	_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1850	0.0	0.0	0.0	i < 7	_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1213	0.0	0.0	0.0	result != null	_
org.apache.commons.math.util.MultidimensionalCounter$Iterator#Integer#next#?#106	0.0	0.0	0.0	i >= 0	_
org.apache.commons.math.util.MultidimensionalCounter$Iterator#int#getCount#?,int#147	0.0	0.0	0.0	counter[dim]>=0	_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1046	0.0	0.0	0.0	(c + z - c) * HEX_40000000<z	_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1730	0.0	0.0	0.0	y[0]!=xi	_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1171	0.0	0.0	0.0	result[1] - (tmp - result[0] - zs[0])<=tmp	_
org.apache.commons.math.util.MultidimensionalCounter#int#getDimension#?#205	0.0	0.0	0.0	dimension>=0	_
org.apache.commons.math.util.MultidimensionalCounter$Iterator#boolean#hasNext#?#94	0.0	0.0	0.0	counter[i] != size[i] - 1	_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1833	0.0	0.0	0.0	as[1]==x	_
org.apache.commons.math.util.MultidimensionalCounter#int#getSize#?#281	0.0	0.0	0.0	totalSize>=0	_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1021	0.0	0.0	0.0	d < 8e298 && d > -8e298	_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1784	0.0	0.0	0.0	(i & 2) != 0	_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1106	0.0	0.0	0.0	result[1] != result[1]	_
