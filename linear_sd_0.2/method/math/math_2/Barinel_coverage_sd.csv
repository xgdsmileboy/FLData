line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#sample#?#193	0.16666666666666663	1.0	0.3333333333333333	inverseCumulativeProbability(random.nextDouble())<0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalMean#?#268	0.1428571428571429	1.0	0.31428571428571433	(double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize()<0	GT
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#inverseCumulativeProbability#?,double#136	0.06666666666666665	1.0	0.25333333333333335	mu + k * sigma<=p	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,RandomGenerator,int,int,int#110	0.09999999999999998	0.5	0.18	sampleSize<numberOfSuccesses	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#calculateNumericalVariance#?#295	0.1428571428571429	0.25	0.1642857142857143	(n * m * (N - n)* (N - m)) / (N * N * (N - 1))>0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#double#getNumericalVariance#?#283	0.1428571428571429	0.25	0.1642857142857143	numericalVariance!=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportLowerBound#?#308	0.1428571428571429	0.19999999999999996	0.1542857142857143	FastMath.max(0,getSampleSize() + getNumberOfSuccesses() - getPopulationSize())==0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSupportUpperBound#?#321	0.1428571428571429	0.16666666666666663	0.14761904761904765	FastMath.min(getNumberOfSuccesses(),getSampleSize())>0	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#int#solveInverseCumulativeProbability#?,double,int,int#176	0.045454545454545414	0.5	0.13636363636363635	upper<0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getNumberOfSuccesses#?#161	0.11111111111111116	0.125	0.11388888888888893	numberOfSuccesses>0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getPopulationSize#?#170	0.11111111111111116	0.11111111111111116	0.11111111111111116	populationSize>=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#int#getSampleSize#?#179	0.11111111111111116	0.11111111111111116	0.11111111111111116	sampleSize!=0	_
org.apache.commons.math3.distribution.HypergeometricDistribution#?#HypergeometricDistribution#?,int,int,int#63	0.09999999999999998	0.0	0.07999999999999999		_
org.apache.commons.math3.random.Well19937c#int#next#?,int#96	0.01851851851851849	0.023809523809523836	0.01957671957671956	(vM2 >>> 9) ^ (vM3 ^ (vM3 >>> 1))<vM1	_
org.apache.commons.math3.distribution.AbstractIntegerDistribution#?#AbstractIntegerDistribution#?,RandomGenerator#72	0.020408163265306145	0.0	0.016326530612244917		_
org.apache.commons.math3.random.BitsStreamGenerator#double#nextDouble#?#92	0.006451612903225823	0.006451612903225823	0.006451612903225824	(high | low) * 0x1.0p-52d>=0	_
org.apache.commons.math3.util.FastMath#int#max#?,int,int#3497	0.003215434083601254	0.007633587786259555	0.004099064824132914	(a <= b) ? b : a==0	_
org.apache.commons.math3.random.RandomDataImpl#?#RandomDataImpl#?#115	0.005025125628140725	0.0	0.004020100502512581		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int#72	0.0049261083743842304	0.0	0.0039408866995073845		_
org.apache.commons.math3.random.Well19937c#?#Well19937c#?#57	0.0049261083743842304	0.0	0.0039408866995073845		_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,int[]#156	0.0049261083743842304	0.0049261083743842304	0.0039408866995073845		_
org.apache.commons.math3.random.AbstractWell#?#AbstractWell#?,int,int,int,int,int[]#112	0.0036900369003689537	0.004310344827586188	0.0038140984858124004	(j + r - 1) % r==w	_
org.apache.commons.math3.random.AbstractWell#void#setSeed#?,long#179	0.004587155963302725	0.0	0.00366972477064218		_
org.apache.commons.math3.random.BitsStreamGenerator#?#BitsStreamGenerator#?#41	0.0031250000000000444	0.0	0.0025000000000000356		_
org.apache.commons.math3.random.BitsStreamGenerator#void#clear#?#195	0.0031250000000000444	0.0	0.0025000000000000356		_
org.apache.commons.math3.util.FastMath#int#min#?,int,int#3429	0.0013333333333332975	0.001335113484646211	0.0013336893635958803	(a <= b) ? a : b!=0	_
org.apache.commons.math3.util.FastMath#double#sqrt#?,double#385	8.196721311475308E-4	8.41042893187538E-4	8.239462835555322E-4	Math.sqrt(a)>0	_
