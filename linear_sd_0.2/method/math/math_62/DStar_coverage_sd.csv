line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,FUNC,GoalType,double,double,double#176	1.0	1.0	1.0	!(optima[0] == null)	GT
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#?#MultiStartUnivariateRealOptimizer#?,BaseUnivariateRealOptimizer<FUNC>,int,RandomGenerator#73	1.0	0.0	0.8		_
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,FUNC,GoalType,double,double#146	1.0	0.0	0.8		GT
org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer#void#sortPairs#?,GoalType#191	1.0	0.0	0.8		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#int#getMaxEvaluations#?#60	0.5	0.5	0.5	evaluations.getMaximalCount()!=0	_
org.apache.commons.math.optimization.univariate.BrentOptimizer#UnivariateRealPointValuePair#doOptimize#?#164	0.16666666666666666	1.0	0.33333333333333337	tol1>=hi	_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#double#getValue#?#65	0.25	0.3333333333333333	0.26666666666666666	value<0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#int#getEvaluations#?#65	0.25	0.25	0.25	evaluations.getCount()>=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,UnivariateRealFunction,GoalType,double,double#144	0.2	0.0	0.16000000000000003		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getMax#?#84	0.1111111111111111	0.3333333333333333	0.15555555555555556	searchMax<=0	_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#double#getPoint#?#56	0.125	0.25	0.15000000000000002	point<0	_
org.apache.commons.math.util.Incrementor#int#getMaximalCount#?#53	0.14285714285714285	0.14285714285714285	0.14285714285714285	maximalCount>=0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getStartValue#?#90	0.1111111111111111	0.25	0.1388888888888889	searchStart<0	_
org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair#?#UnivariateRealPointValuePair#?,double,double#47	0.125	0.16666666666666666	0.13333333333333333	value>point	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#computeObjectiveValue#?,double#110	0.125	0.14285714285714285	0.1285714285714286	function.value(point)<0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#double#getMin#?#78	0.1111111111111111	0.16666666666666666	0.12222222222222223	searchMin<0	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#UnivariateRealPointValuePair#optimize#?,UnivariateRealFunction,GoalType,double,double,double#123	0.1111111111111111	0.1111111111111111	0.11111111111111112	!(goalType == null)	_
org.apache.commons.math.optimization.univariate.BrentOptimizer#?#BrentOptimizer#?,double,double#80	0.1111111111111111	0.1111111111111111	0.11111111111111112	!(abs <= 0)	_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#void#setMaxEvaluations#?,int#55	0.125	0.0	0.1		_
org.apache.commons.math.util.MathUtils#boolean#equals#?,double,double#417	0.1111111111111111	0.0	0.08888888888888889		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#ConvergenceChecker<UnivariateRealPointValuePair>#getConvergenceChecker#?#158	0.1111111111111111	0.0	0.08888888888888889		_
org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer#GoalType#getGoalType#?#72	0.1111111111111111	0.0	0.08888888888888889		_
org.apache.commons.math.util.MathUtils#boolean#equals#?,double,double,int#489	0.03571428571428571	0.1111111111111111	0.050793650793650794	SGN_MASK - yInt>xInt	_
org.apache.commons.math.util.Incrementor#int#getCount#?#62	0.043478260869565216	0.045454545454545456	0.04387351778656127	count>0	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3224	0.00546448087431694	0.16666666666666666	0.03770491803278689	(a <= b) ? a : (Double.isNaN(a + b) ? Double.NaN : b)<0	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3260	0.002336448598130841	0.07142857142857142	0.016154873164218958	(a <= b) ? b : (Double.isNaN(a + b) ? Double.NaN : a)<0	_
org.apache.commons.math.util.FastMath#long#abs#?,long#3016	0.008547008547008548	0.017543859649122806	0.0103463787674314	(x < 0l) ? -x : x!=0	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.008620689655172414	0.008695652173913044	0.00863568215892054	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#ulp#?,double#3044	0.008333333333333333	0.008333333333333333	0.008333333333333333	abs(x - Double.longBitsToDouble(Double.doubleToLongBits(x) ^ 1))>=0	_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.008849557522123894	0.0	0.007079646017699115		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1535	0.006944444444444444	0.006944444444444444	0.006944444444444445	result[1]!=x	_
org.apache.commons.math.util.FastMath#void#resplit#?,double#740	0.006944444444444444	0.006944444444444444	0.006944444444444445	c - a[0] + d<=d	_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1434	0.006944444444444444	0.006944444444444444	0.006944444444444445	a[1]<=xi	_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#864	0.006944444444444444	0.006944444444444444	0.006944444444444445	result[1] - (tmp - result[0] - zs[0])==tmp	_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1498	0.006944444444444444	0.006944444444444444	0.006944444444444445	as[0]>=x	_
org.apache.commons.math.util.FastMath#void#split#?,double,double#714	0.006944444444444444	0.006944444444444444	0.006944444444444445	d < 8e298 && d > -8e298	_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1478	0.006944444444444444	0.006944444444444444	0.006944444444444445	ys[0] + ys[1]==0	_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#806	0.006944444444444444	0.006944444444444444	0.006944444444444445	i < 2	_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#701	0.006944444444444444	0.006944444444444444	0.006944444444444445	ys[0]>=x	_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#913	0.006944444444444444	0.006944444444444444	0.006944444444444445	ys[0] + ys[1]!=0	_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.00847457627118644	0.0	0.006779661016949153		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#751	0.006944444444444444	0.0	0.005555555555555556		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#763	0.006944444444444444	0.0	0.005555555555555556		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#219	0.0019305019305019305	0.00196078431372549	0.0019365584071466427	Math.sqrt(a)!=0	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3034	0.001392757660167131	0.002008032128514056	0.001515812553836516	(x < 0.0) ? -x : x<=0	_
