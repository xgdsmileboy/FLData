line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#WeightedObservedPoint[]#getInterpolationPointsForY#?,WeightedObservedPoint[],int,int,double#262	0.9990855052583447	0.9990855052583447	1.9968024002355136	!((idxStep < 0) ? (i + idxStep >= 0) : (i + idxStep < points.length))	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double#interpolateXAtY#?,WeightedObservedPoint[],int,int,double#223	0.9977168949771689	0.9977168949771689	1.9954337899543377	!(idxStep == 0)	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#guess#?#156	0.9977168949771689	0.9977168949771689	1.9954337899543377	parameters == null	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#int#findMaxY#?,WeightedObservedPoint[]#199	0.9977168949771689	0.9977168949771689	1.9954337899543377	points[i].getY() > points[maxYIdx].getY()	_
org.apache.commons.math.analysis.function.Gaussian$Parametric#void#validateParameters#?,double[]#182	0.9990855052583447	0.9990855052583447	1.9949834086311797	param[2] <= 0	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#?#ParameterGuesser#?,WeightedObservedPoint[]#144	0.9977168949771689	0.9977168949771689	1.9945234643202348	!(observations.length < 3)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMParameter#?,double[],double,double[],double[],double[],double[]#615	0.993181818181818	0.993181818181818	1.9854611540208993	fp < 0	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#determineLMDirection#?,double[],double[],double[],double[]#685	0.9909297052154196	0.9909297052154196	1.9814102129216753	FastMath.abs(rkk) < FastMath.abs(lmDiag[k])	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#VectorialPointValuePair#doOptimize#?#386	0.9904805077062556	0.9936334697589813	1.9809614224786727	!((0.1 * cost >= previousCost) || (tmp < 0.1))	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qrDecomposition#?#797	0.9802602063705698	0.9815813117699911	1.9596475606509223	!(norm2 > ak2)	_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#void#qTy#?,double[]#841	0.9785042543663233	0.9785042543663233	1.9570085087326465	!(k < cols)	_
org.apache.commons.math.optimization.SimpleVectorialValueChecker#boolean#converged#?,int,VectorialPointValuePair,VectorialPointValuePair#83	0.9719750889679716	0.9719750889679716	1.9435179969270644	difference > size * getRelativeThreshold() && difference > getAbsoluteThreshold()	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateResidualsAndCost#?#138	0.9693877551020407	0.9693877551020407	1.9387755102040813	i < rows	_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#void#updateJacobian#?#104	0.9693877551020407	0.9693877551020407	1.9387755102040813	!(weightedResidualJacobian.length != rows)	_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#VectorialPointValuePair#optimize#?,int,FUNC,double[],double[],double[]#120	0.9689578713968959	0.9689578713968959	1.9379157427937919	!(w == null)	_
org.apache.commons.math.util.FastMath#double#min#?,double,double#3830	0.9595959595959597	0.9595959595959597	1.9191919191919193	a < b	_
org.apache.commons.math.util.Incrementor#void#incrementCount#?#84	0.9161425576519917	0.9161425576519917	1.8322851153039834	!(++count > maximalCount)	_
org.apache.commons.math.util.FastMath#double#exp#?,double,double,double[]#756	0.9085239085239086	0.9085239085239086	1.8155392675940623	!(intVal > 709)	_
org.apache.commons.math.util.FastMath#double#max#?,double,double#3908	0.8991769547325104	0.8991769547325104	1.7983539094650207	!(bits == 0x8000000000000000L)	_
org.apache.commons.math.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.8867694805194805	0.8838996763754046	1.7585994361832507	o instanceof Object[]	_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#double[]#basicGuess#?,WeightedObservedPoint[]#183	0.9990855052583447	0.0	0.9990855052583447		_
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#boolean#isBetween#?,double,double,double#291	0.9977168949771689	0.0	0.9977168949771689		_
org.apache.commons.math.optimization.fitting.GaussianFitter#double[]#fit#?#121	0.9977168949771689	0.0	0.9977168949771689		GT
org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser#Comparator<WeightedObservedPoint>#createWeightedObservedPointComparator#?#302	0.9977168949771689	0.0	0.9977168949771689		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double[]#gradient#?,double,double[]#153	0.997261524418074	0.0	0.997261524418074		_
org.apache.commons.math.analysis.function.Gaussian$Parametric#double#value#?,double,double[]#130	0.997261524418074	0.0	0.997261524418074		_
org.apache.commons.math.optimization.fitting.GaussianFitter#?#GaussianFitter#?,DifferentiableMultivariateVectorialOptimizer#68	0.9968065693430658	0.0	0.9968065693430658		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double#67	0.995897903372835	0.0	0.995897903372835		_
org.apache.commons.math.optimization.fitting.CurveFitter#WeightedObservedPoint[]#getObservations#?#100	0.9954441913439636	0.0	0.9954441913439636		_
org.apache.commons.math.analysis.function.Gaussian#double#value#?,double,double,double#197	0.9945380063723259	0.0	0.9945380063723259		_
org.apache.commons.math.exception.NotStrictlyPositiveException#?#NotStrictlyPositiveException#?,Number#38	0.9936334697589813	0.0	0.9936334697589813		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,ParametricUnivariateRealFunction,double[]#126	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.CurveFitter#double[]#fit#?,int,ParametricUnivariateRealFunction,double[]#151	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getY#?#71	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#MultivariateMatrixFunction#jacobian#?#183	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getWeight#?#57	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#double#getX#?#64	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#?#TheoreticalValuesFunction#?,ParametricUnivariateRealFunction#178	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction#double[]#value#?,double[]#200	0.9913793103448276	0.0	0.9913793103448276		_
org.apache.commons.math.optimization.fitting.CurveFitter#void#addObservedPoint#?,double,double,double#80	0.9909297052154196	0.0	0.9909297052154196		_
org.apache.commons.math.optimization.fitting.WeightedObservedPoint#?#WeightedObservedPoint#?,double,double,double#48	0.9909297052154196	0.0	0.9909297052154196		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Number,Number,Number#46	0.9909297052154196	0.0	0.9909297052154196		_
org.apache.commons.math.optimization.fitting.CurveFitter#?#CurveFitter#?,DifferentiableMultivariateVectorialOptimizer#52	0.9904805077062556	0.0	0.9904805077062556		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Number,Number,boolean#52	0.9895833333333333	0.0	0.9895833333333333		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?#152	0.9860108303249098	0.0	0.9860108303249098		_
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer#?#LevenbergMarquardtOptimizer#?,double,double,double,double,double#209	0.9771914132379249	0.0	0.9771914132379249		_
org.apache.commons.math.optimization.VectorialPointValuePair#double[]#getValueRef#?#97	0.9715429079590929	0.0	0.9715429079590929		_
org.apache.commons.math.exception.NumberIsTooSmallException#?#NumberIsTooSmallException#?,Localizable,Number,Number,boolean#73	0.9711111111111111	0.0	0.9711111111111111		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getTargetRef#?#165	0.9693877551020407	0.0	0.9693877551020407		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#getWeightRef#?#171	0.9693877551020407	0.0	0.9693877551020407		_
org.apache.commons.math.optimization.VectorialPointValuePair#?#VectorialPointValuePair#?,double[],double[]#48	0.9693877551020407	0.0	0.9693877551020407		_
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer#VectorialPointValuePair#optimize#?,int,DifferentiableMultivariateVectorialFunction,double[],double[],double[]#237	0.9689578713968959	0.0	0.9689578713968959		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#ConvergenceChecker<VectorialPointValuePair>#getConvergenceChecker#?#88	0.9689578713968959	0.0	0.9689578713968959		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#double[]#computeObjectiveValue#?,double[]#107	0.9689578713968959	0.0	0.9689578713968959		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?#62	0.9680992467877715	0.0	0.9680992467877715		_
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer#?#BaseAbstractVectorialOptimizer#?,ConvergenceChecker<VectorialPointValuePair>#68	0.9680992467877715	0.0	0.9680992467877715		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getAbsoluteThreshold#?#80	0.9541484716157206	0.0	0.9541484716157206		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#double#getRelativeThreshold#?#73	0.9537319947621127	0.0	0.9537319947621127		_
org.apache.commons.math.optimization.AbstractConvergenceChecker#?#AbstractConvergenceChecker#?#54	0.947939262472885	0.0	0.947939262472885		_
org.apache.commons.math.exception.OutOfRangeException#?#OutOfRangeException#?,Localizable,Number,Number,Number#64	0.947939262472885	0.0	0.947939262472885		_
org.apache.commons.math.util.Incrementor#void#resetCount#?#93	0.914608622854751	0.0	0.914608622854751		_
org.apache.commons.math.util.Incrementor#void#setMaximalCount#?,int#44	0.9130798161303803	0.0	0.9130798161303803		_
org.apache.commons.math.exception.MathIllegalNumberException#?#MathIllegalNumberException#?,Localizable,Localizable,Number,Object#51	0.8980682285244553	0.0	0.8980682285244553		_
org.apache.commons.math.util.FastMath#double#exp#?,double#697	0.8889340927583402	0.0	0.8889340927583402		_
org.apache.commons.math.util.FastMath#int#min#?,int,int#3784	0.8750500600720865	0.0	0.8750500600720865		_
org.apache.commons.math.exception.MathIllegalArgumentException#?#MathIllegalArgumentException#?,Localizable,Localizable,Object#44	0.8719074221867518	0.0	0.8719074221867518		_
org.apache.commons.math.exception.MathRuntimeException#?#MathRuntimeException#?,Throwable,Localizable,Localizable,Object#65	0.8558558558558558	0.0	0.8558558558558558		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#277	0.8198874296435272	0.0	0.8198874296435272		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3380	0.7674745345978223	0.0	0.7674745345978223		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1172	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1024	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1766	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1073	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1866	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1037	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1754	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1058	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1809	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#989	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1220	0.0	0.0	0.0		_
