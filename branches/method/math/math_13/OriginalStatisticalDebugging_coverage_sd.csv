line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.linear.DiagonalMatrix#double[][]#getData#?#206	0.0	0.0	0.0	!(i < dim)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#468	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.util.Incrementor#?#Incrementor#?,int,MaxCountExceededCallback#81	0.0	0.0	0.0	!(cb == null)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQT#?#98	0.0	0.0	0.0	cachedQt == null	_
org.apache.commons.math3.linear.EigenDecomposition#?#EigenDecomposition#?,RealMatrix#121	0.0	0.0	0.0	isSymmetric	_
org.apache.commons.math3.linear.TriDiagonalTransformer#RealMatrix#getQ#?#86	0.0	0.0	0.0	cachedQ == null	_
org.apache.commons.math3.util.FastMath#double#max#?,double,double#3545	0.0	0.0	0.0	!(bits == 0x8000000000000000L)	_
org.apache.commons.math3.linear.MatrixUtils#boolean#isSymmetricInternal#?,RealMatrix,double,boolean#392	0.0	0.0	0.0	!(rows != matrix.getColumnDimension())	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#264	0.0	0.0	0.0	!(o == null)	_
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#double#evaluate#?,double[],double#132	0.0	0.0	0.0	!(n == 0)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#void#transform#?#207	0.0	0.0	0.0	!(a != 0.0)	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer#void#parseOptimizationData#?,OptimizationData#347	0.0	0.0	0.0	data instanceof Weight	_
org.apache.commons.math3.optimization.fitting.CurveFitter#double[]#fit#?,int,T,double[]#187	0.0	0.0	0.0	optimizer == null	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer#void#setUp#?#323	0.0	0.0	0.0	!(i < dim)	_
org.apache.commons.math3.linear.TriDiagonalTransformer#?#TriDiagonalTransformer#?,RealMatrix#63	0.0	0.0	0.0	!(!matrix.isSquare())	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer#void#checkParameters#?#365	0.0	0.0	0.0	!(target.length != weightMatrix.getColumnDimension())	_
org.apache.commons.math3.analysis.polynomials.PolynomialFunction#?#PolynomialFunction#?,double#72	0.0	0.0	0.0	!(n == 0)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#484	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
