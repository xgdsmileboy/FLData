line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer#void#incrementIterationsCounter#?#127	0.0	1.9166666666666667	1.9166666666666667	++iterations > maxIterations	_
org.apache.commons.math3.optimization.linear.SimplexSolver#Integer#getPivotRow#?,SimplexTableau,int#120	0.0	0.1333333333333333	0.1333333333333333	!(i < tableau.getNumArtificialVariables())	GT
org.apache.commons.math3.optimization.linear.SimplexTableau#void#initializeColumnLabels#?#166	0.0	0.07619047619047618	0.07619047619047618	!(!restrictToNonNegative)	_
org.apache.commons.math3.optimization.linear.SimplexTableau#RealMatrix#createTableau#?,boolean#219	0.0	0.07619047619047618	0.07619047619047618	!(!restrictToNonNegative)	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,int#116	0.0	0.056410256410256404	0.056410256410256404	x < y	_
org.apache.commons.math3.optimization.linear.SimplexSolver#PointValuePair#doOptimize#?#226	0.0	0.03804347826086957	0.03804347826086957	!tableau.isOptimal()	_
org.apache.commons.math3.optimization.linear.SimplexTableau#void#dropPhase1Objective#?#333	0.0	0.016666666666666677	0.016666666666666677	!(getNumObjectiveFunctions() == 1)	_
org.apache.commons.math3.util.Precision#int#compareTo#?,double,double,double#88	0.0	0.015567765567765568	0.015567765567765568	!(equals(x,y,eps))	_
org.apache.commons.math3.optimization.linear.SimplexSolver#void#solvePhase1#?,SimplexTableau#206	0.0	0.014354066985645923	0.014354066985645923	!(!Precision.equals(tableau.getEntry(0,tableau.getRhsOffset()),0d,epsilon))	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#304	0.0	0.008438296503427284	0.008438296503427284	xInt < 0	_
org.apache.commons.math3.optimization.linear.SimplexTableau#Integer#getBasicRow#?,int#317	0.0	0.007575757575757582	0.007575757575757582	!(i < getHeight())	_
org.apache.commons.math3.optimization.linear.SimplexTableau#boolean#isOptimal#?#391	0.0	0.0064102564102564005	0.0064102564102564005	Precision.compareTo(entry,0d,epsilon) < 0	_
org.apache.commons.math3.optimization.linear.SimplexTableau#LinearConstraint#normalize#?,LinearConstraint#265	0.0	0.004761904761904759	0.004761904761904759	!(constraint.getValue() < 0)	_
org.apache.commons.math3.linear.ArrayRealVector#void#checkVectorDimensions#?,int#743	0.0	0.0012626262626262638	0.0012626262626262638	!(data.length != n)	_
org.apache.commons.math3.exception.util.ArgUtils#Object[]#flatten#?,Object[]#45	0.0	5.201593463753772E-4	5.201593463753772E-4	o instanceof Object[]	_
org.apache.commons.math3.linear.ArrayRealVector#ArrayRealVector#subtract#?,RealVector#317	0.0	3.508771929824593E-4	3.508771929824593E-4	v instanceof ArrayRealVector	_
org.apache.commons.math3.linear.AbstractRealMatrix#?#AbstractRealMatrix#?,int,int#62	0.0	1.2657747174157734E-5	1.2657747174157734E-5	!(rowDimension < 1)	_
org.apache.commons.math3.util.MathUtils#void#checkNotNull#?,Object#257	0.0	9.238664735785468E-6	9.238664735785468E-6	!(o == null)	_
org.apache.commons.math3.optimization.linear.SimplexTableau#int#getConstraintTypeCounts#?,Relationship#290	0.0	0.0	0.0	constraint.getRelationship() == relationship	_
org.apache.commons.math3.linear.MatrixUtils#void#checkRowIndex#?,AnyMatrix,int#391	0.0	0.0	0.0	!(row < 0 || row >= m.getRowDimension())	_
org.apache.commons.math3.optimization.linear.SimplexSolver#Integer#getPivotColumn#?,SimplexTableau#72	0.0	0.0	0.0	i < tableau.getWidth() - 1	_
org.apache.commons.math3.optimization.linear.SimplexTableau#void#divideRow#?,int,double#446	0.0	0.0	0.0	!(j < getWidth())	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setRowVector#?,int,RealVector#493	0.0	0.0	0.0	!(vector.getDimension() != nCols)	_
org.apache.commons.math3.linear.MatrixUtils#void#checkColumnIndex#?,AnyMatrix,int#406	0.0	0.0	0.0	!(column < 0 || column >= m.getColumnDimension())	_
org.apache.commons.math3.optimization.linear.SimplexSolver#void#doIteration#?,SimplexTableau#169	0.0	0.0	0.0	!(pivotRow == null)	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#525	0.0	0.0	0.0	!(i < nCols)	_
org.apache.commons.math3.linear.ArrayRealVector#?#ArrayRealVector#?,double[],boolean#104	0.0	0.0	0.0	!(d == null)	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#262	0.0	0.0	0.0	data == null	_
org.apache.commons.math3.optimization.linear.SimplexTableau#void#subtractRow#?,int,int,double#463	0.0	0.0	0.0	i < getWidth()	_
