line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.OpenMapRealVector#void#setEntry#?,int,double#666	0.5	Infinity	Infinity	!(entries.containsKey(index))	_
org.apache.commons.math.linear.OpenMapRealVector#OpenMapRealVector#ebeMultiply#?,RealVector#371	1.0	1.0	2.0	iter.hasNext()	GT
org.apache.commons.math.linear.AbstractRealVector#void#checkVectorDimensions#?,int#64	0.5	1.0	1.5	!(d != n)	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#void#advance#?#563	1.0	1.0	1.0588235294117647	referenceCount != count	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int#216	0.3333333333333333	0.3333333333333333	0.5833333333333333	states[index] == FREE	_
org.apache.commons.math.MathRuntimeException#ConcurrentModificationException#createConcurrentModificationException#?,Localizable,Object#373	0.5	0.0	0.5		_
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,OpenMapRealVector#180	0.25	0.0	0.25		_
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,int,double#77	0.25	0.0	0.25		_
org.apache.commons.math.linear.AbstractRealVector#void#checkIndex#?,int#76	0.1111111111111111	0.1111111111111111	0.2222222222222222	!(index < 0 || index >= getDimension())	_
org.apache.commons.math.linear.OpenMapRealVector#OpenIntToDoubleHashMap#getEntries#?#208	0.16666666666666666	0.0	0.16666666666666666		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#int#key#?#529	0.06666666666666667	0.06666666666666667	0.13333333333333333	!(referenceCount != count)	_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#double#value#?#546	0.0625	0.0625	0.125	!(referenceCount != count)	_
org.apache.commons.math.linear.OpenMapRealVector#double#getEntry#?,int#479	0.125	0.0	0.125		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#remove#?,int#356	0.07142857142857142	0.07142857142857142	0.10591133004926108	containsKey(key,index)	_
org.apache.commons.math.linear.OpenMapRealVector#int#getDimension#?#422	0.08333333333333333	0.0	0.08333333333333333		_
org.apache.commons.math.linear.OpenMapRealVector#boolean#isDefaultValue#?,double#220	0.08333333333333333	0.0	0.08333333333333333		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#get#?,int#186	0.047619047619047616	0.047619047619047616	0.07886904761904762	states[index] == FREE	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#doRemove#?,int#398	0.07142857142857142	0.0	0.07142857142857142		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,OpenIntToDoubleHashMap#141	0.07142857142857142	0.0	0.07142857142857142		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#boolean#hasNext#?#518	0.0625	0.0	0.0625		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#Iterator#iterator#?#241	0.058823529411764705	0.0	0.058823529411764705		_
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator#?#Iterator#?#501	0.058823529411764705	0.0	0.058823529411764705		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#put#?,int,double#423	0.018518518518518517	0.018518518518518517	0.037037037037037035	!(shouldGrowTable())	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int[],byte[],int,int#274	0.018518518518518517	0.018518518518518517	0.037037037037037035	states[index] == FREE	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#158	0.018518518518518517	0.018518518518518517	0.0367003367003367	powerOfTwo == capacity	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,double#103	0.02564102564102564	0.0	0.02564102564102564		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#containsKey#?,int,int#385	0.019230769230769232	0.0	0.019230769230769232		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int#259	0.018518518518518517	0.0	0.018518518518518517		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#boolean#shouldGrowTable#?#469	0.018518518518518517	0.0	0.018518518518518517		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#hashOf#?,int#479	0.017857142857142856	0.0	0.017857142857142856		_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#122	0.017857142857142856	0.0	0.017857142857142856		_
org.apache.commons.math.util.FastMath#double#ceil#?,double#3756	0.006024096385542169	0.006024096385542169	0.01190644932671864	y == x	_
org.apache.commons.math.util.FastMath#double#floor#?,double#3737	0.0033333333333333335	0.0033444816053511705	0.006234655015755795	!(y == 0)	_
org.apache.commons.math.util.FastMath#double#abs#?,double#3410	0.0012165450121654502	0.0	0.0012165450121654502		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1941	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1071	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1781	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1199	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1086	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1860	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1047	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1796	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1143	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1021	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1211	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1096	0.0	0.0	0.0		_
