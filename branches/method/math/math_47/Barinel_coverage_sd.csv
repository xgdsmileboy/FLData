line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.complex.Complex#String#toString#?#1179	1.0	0.0	1.0		_
org.apache.commons.math.complex.Complex#Complex#divide#?,Complex#256	0.5	0.5	0.6333333333333333	divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0	GT
org.apache.commons.math.complex.Complex#Complex#atan#?#579	0.33333333333333337	0.33333333333333337	0.5833333333333334	!(isNaN)	_
org.apache.commons.math.util.FastMath#double#atan2#?,double,double#2991	0.25	0.25	0.2844827586206896	!(y < 0.0 || invy < 0.0)	_
org.apache.commons.math.complex.Complex#Complex#log#?#746	0.1428571428571429	0.1428571428571429	0.19047619047619058	isNaN	_
org.apache.commons.math.complex.Complex#double#abs#?#129	0.0625	0.0625	0.12132352941176472	!(real == 0.0)	_
org.apache.commons.math.complex.Complex#Complex#multiply#?,Complex#418	0.08333333333333337	0.08333333333333337	0.11190476190476195	isNaN || factor.isNaN	_
org.apache.commons.math.complex.Complex#Complex#add#?,Complex#158	0.052631578947368474	0.052631578947368474	0.09610983981693366	!(isNaN || addend.isNaN)	_
org.apache.commons.math.complex.Complex#Complex#subtract#?,Complex#489	0.045454545454545414	0.045454545454545414	0.08545454545454545	!(isNaN || subtrahend.isNaN)	_
org.apache.commons.math.complex.Complex#boolean#equals#?,Object#324	0.02564102564102566	0.02564102564102566	0.0494505494505495	!(c.isNaN)	_
org.apache.commons.math.complex.Complex#boolean#isInfinite#?#388	0.022727272727272707	0.0	0.022727272727272707		_
org.apache.commons.math.complex.Complex#double#getReal#?#364	0.017699115044247815	0.0	0.017699115044247815		_
org.apache.commons.math.complex.Complex#double#getImaginary#?#355	0.01754385964912286	0.0	0.01754385964912286		_
org.apache.commons.math.complex.Complex#Complex#createComplex#?,double,double#1127	0.012499999999999956	0.0	0.012499999999999956		_
org.apache.commons.math.complex.Complex#?#Complex#?,double,double#99	0.012048192771084376	0.0	0.012048192771084376		GT
org.apache.commons.math.util.FastMath#double#log#?,double,double[]#1315	0.004149377593360981	0.004854368932038833	0.008544405832407787	!(x < 1.01 && x > 0.99 && hiPrec == null)	_
org.apache.commons.math.util.MathUtils#void#checkNotNull#?,Object#2334	0.0040567951318458695	0.004073319755600768	0.008130114887446638	!(o == null)	_
org.apache.commons.math.util.FastMath#double#log#?,double#1256	0.0039215686274509665	0.0	0.0039215686274509665		_
org.apache.commons.math.util.FastMath#double#sqrt#?,double#302	0.0016286644951140072	0.0	0.0016286644951140072		_
org.apache.commons.math.util.FastMath#double#abs#?,double#3410	0.0011723329425556983	0.0	0.0011723329425556983		_
org.apache.commons.math.util.FastMath#void#buildSinCosTables#?#1930	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#resplit#?,double#1062	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double[]#slowLog#?,double#1743	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#quadMult#?,double,double,double#1155	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitMult#?,double,double,double#1086	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowCos#?,double,double#1848	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#split#?,double,double#1049	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowSin#?,double,double#1793	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitReciprocal#?,double,double#1120	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#slowexp#?,double,double#1024	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#double#expint#?,int,double#1233	0.0	0.0	0.0		_
org.apache.commons.math.util.FastMath#void#splitAdd#?,double,double,double#1098	0.0	0.0	0.0		_
