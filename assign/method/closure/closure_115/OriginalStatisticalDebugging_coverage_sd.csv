line	original_score	max_predicate_score	total	predicate	label
com.google.javascript.jscomp.FunctionInjector#int#inlineCostDelta#?,Node,Set<String>,InliningMode#925	0.0	0.32123562263439087	0.32123562263439087	(returnCount > 0) ? returnCount - 1 : 0>commaCount	_
com.google.javascript.jscomp.FunctionInjector#boolean#doesLowerCost#?,Node,int,int,int,int,int,boolean#848	0.0	0.2313143207643175	0.2313143207643175	(directInlines * costDeltaDirect) + (blockInlines * costDeltaBlock)>=costDeltaBlock	_
com.google.javascript.jscomp.FunctionInjector#boolean#inliningLowersCost#?,JSModule,Node,Collection<? extends Reference>,Set<String>,boolean,boolean#794	0.0	0.031240696844280446	0.031240696844280446	referenceCount - referencesUsingBlockInlining<referencesUsingBlockInlining	_
com.google.javascript.jscomp.CodeConsumer#void#addOp#?,String,boolean#215	0.0	0.008002487243266873	0.008002487243266873	getLastChar()<first	_
com.google.javascript.jscomp.CodeGenerator#void#add#?,Node,Context#124	0.0	0.004461249871906225	0.004461249871906225	NodeUtil.precedence(type)>=childCount	_
com.google.javascript.jscomp.CodeConsumer#void#addNumber#?,double#265	0.0	2.3784123197839118E-5	2.3784123197839118E-5	Math.abs(value)==mantissa	_
com.google.javascript.jscomp.parsing.IRFactory#void#setSourceInfo#?,Node,AstNode#447	0.0	1.719475905328814E-5	1.719475905328814E-5	position2charno(node.getAbsolutePosition())>lineno	_
com.google.javascript.rhino.Node#boolean#isEquivalentTo#?,Node,boolean,boolean,boolean#1542	0.0	5.542248298165219E-7	5.542248298165219E-7	node.getIntProp(SLASH_V)==slashV1	_
com.google.javascript.rhino.Node#?#Node#?,int,Node#375	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.rhino.Node#void#toString#?,StringBuilder,boolean,boolean,boolean#980	0.0	0.0	0.0	keys[i]!=i	_
com.google.javascript.jscomp.NodeUtil#int#precedence#?,int#1191	0.0	0.0	0.0	precedenceWithDefault(type)<=type	_
com.google.javascript.rhino.jstype.UnionTypeBuilder#UnionTypeBuilder#addAlternate#?,JSType#271	0.0	0.0	0.0	alternates.size()>=currentIndex	_
com.google.javascript.rhino.Node#?#Node#?,int#361	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.jscomp.FunctionInjector#int#estimateCallCost#?,Node,boolean#866	0.0	0.0	0.0	(numArgs * NAME_COST_ESTIMATE) + ((numArgs - 1) * COMMA_COST)!=numArgs	_
com.google.javascript.rhino.Node#void#setLineno#?,int#1167	0.0	0.0	0.0	mergeLineCharNo(lineno,charno)>=lineno	_
com.google.javascript.rhino.Node#void#setCharno#?,int#1171	0.0	0.0	0.0	mergeLineCharNo(getLineno(),charno)>charno	_
com.google.javascript.rhino.Node#int[]#getSortedPropTypes#?#879	0.0	0.0	0.0	x.getType()>count	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node#395	0.0	0.0	0.0	-1<=nodeType	_
com.google.javascript.jscomp.parsing.IRFactory#int#position2charno#?,int#516	0.0	0.0	0.0	sourceString.lastIndexOf('\n',position)!=position	_
