line	original_score	max_predicate_score	total	predicate	label
com.google.javascript.jscomp.parsing.IRFactory#void#setSourceInfo#?,Node,AstNode#459	0.0	0.0	0.0	position2charno(node.getAbsolutePosition())>lineno	_
com.google.javascript.jscomp.AbstractCommandLineRunner#void#run#?#372	0.0	0.0	0.0	doRun()>runs	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#boolean#matchChar#?,int#259	0.0	0.0	0.0	getCharIgnoreLineEnd()!=test	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#int#getChar#?#363	0.0	0.0	0.0	-1!=c	_
com.google.javascript.jscomp.JSError#?#JSError#?,String,Node,int,int,DiagnosticType,CheckLevel,String#159	0.0	0.0	0.0	charno==lineno	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,int,int#450	0.0	0.0	0.0	mergeLineCharNo(lineno,charno)>=charno	_
com.google.javascript.rhino.jstype.UnionTypeBuilder#UnionTypeBuilder#addAlternate#?,JSType#271	0.0	0.0	0.0	alternates.size()>=currentIndex	_
com.google.javascript.rhino.Node#void#setLineno#?,int#1171	0.0	0.0	0.0	mergeLineCharNo(lineno,charno)>lineno	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#void#recordTypeNode#?,int,int,Node,boolean#180	0.0	0.0	0.0	stream.getLineno()<=startCharno	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#?#JsDocTokenStream#?,String,int,int#46	0.0	0.0	0.0	lineno<=initCharno	_
com.google.javascript.rhino.Node#void#setCharno#?,int#1175	0.0	0.0	0.0	mergeLineCharNo(getLineno(),charno)>=charno	_
com.google.javascript.jscomp.deps.JsFileLineParser#void#doParse#?,String,Reader#155	0.0	0.0	0.0	revisedLine.indexOf("*/",startOfMultilineComment + 2)>startOfLineComment	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node#395	0.0	0.0	0.0	-1<=nodeType	_
com.google.javascript.jscomp.parsing.IRFactory#int#position2charno#?,int#529	0.0	0.0	0.0	-1<=position	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#Node#parseTypeName#?,JsDocToken#1958	0.0	0.0	0.0	stream.getCharno()>=lineno	_
com.google.javascript.jscomp.graph.FixedPointGraphTraversal#void#computeFixedPoint#?,DiGraph<N,E>,Set<N>#94	0.0	0.0	0.0	graph.getNodes().size()>cycleCount	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#ExtractionInfo#extractMultilineTextualBlock#?,JsDocToken,WhitespaceOption#1530	0.0	0.0	0.0	-1<=startLineno	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#JsDocToken#parseAnnotation#?,JsDocToken,List<ExtendedTypeInfo>#703	0.0	0.0	0.0	stream.getLineno()>=charno	_
com.google.javascript.jscomp.parsing.IRFactory#JsDocInfoParser#createJsDocInfoParser#?,Comment,Node#479	0.0	0.0	0.0	node.getAbsolutePosition()>=lineno	_
com.google.javascript.rhino.Node#?#Node#?,int,Node#375	0.0	0.0	0.0	-1!=nodeType	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#Node#parseAndRecordParamTypeNode#?,JsDocToken#1305	0.0	0.0	0.0	stream.getCharno()<lineno	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#void#addToString#?,int#241	0.0	0.0	0.0	stringBufferTop<c	_
com.google.javascript.rhino.Node#?#Node#?,int,int,int#445	0.0	0.0	0.0	mergeLineCharNo(lineno,charno)>=charno	_
com.google.javascript.rhino.Node#?#Node#?,int#361	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.rhino.JSDocInfo#void#setType#?,JSTypeExpression,int#1087	0.0	0.0	0.0	(bitset & MASK_FLAGS) | mask>=mask	_
com.google.javascript.jscomp.SourceFile#String#getLine#?,int#225	0.0	0.0	0.0	lineOffsets[lineNumber - 1]!=lineNumber	_
