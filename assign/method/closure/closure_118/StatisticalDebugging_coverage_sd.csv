line	original_score	max_predicate_score	total	predicate	label
com.google.javascript.jscomp.parsing.JsDocTokenStream#?#JsDocTokenStream#?,String,int,int#51	0.0	0.0014484351871492708	0.0014484351871492708	initCharno==lineno	_
com.google.javascript.jscomp.TypeCheck#void#visitParameterList#?,NodeTraversal,Node,FunctionType#1854	0.0	5.820123060374716E-4	5.820123060374716E-4	functionType.getMaxArguments()==minArgs	_
com.google.javascript.jscomp.parsing.IRFactory#JsDocInfoParser#createJsDocInfoParser#?,Comment,Node#467	0.0	3.495601390086627E-4	3.495601390086627E-4	node.getAbsolutePosition()<lineno	_
com.google.javascript.jscomp.CodeGenerator#void#add#?,Node,Context#124	0.0	3.297909723478734E-4	3.297909723478734E-4	NodeUtil.precedence(type)<childCount	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#JsDocToken#parseAnnotation#?,JsDocToken,List<ExtendedTypeInfo>#886	0.0	1.7943110234899153E-4	1.7943110234899153E-4	stream.getLineno()<charno	_
com.google.javascript.rhino.Node#?#Node#?,int,int,int#445	0.0	1.0752596120778581E-4	1.0752596120778581E-4	mergeLineCharNo(lineno,charno)>charno	_
com.google.javascript.jscomp.CodeConsumer#void#addOp#?,String,boolean#213	0.0	7.446735160202193E-5	7.446735160202193E-5	getLastChar()>first	_
com.google.javascript.jscomp.CodeGenerator#String#strEscape#?,String,char,String,String,String,CharsetEncoder,boolean,boolean#1063	0.0	2.862200873250718E-5	2.862200873250718E-5	s.charAt(i)>=quote	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#Node#parseAndRecordTypeNode#?,JsDocToken,int,int,boolean,boolean#1300	0.0	2.1356969934928093E-5	2.1356969934928093E-5	stream.getLineno()<startCharno	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#boolean#matchChar#?,int#261	0.0	1.8168496230433697E-5	1.8168496230433697E-5	cursor<c	_
com.google.javascript.jscomp.CodeConsumer#void#addNumber#?,double#263	0.0	9.565844878590132E-6	9.565844878590132E-6	Math.abs(value)<=mantissa	_
com.google.javascript.rhino.JSDocInfo#void#setType#?,JSTypeExpression,int#1079	0.0	8.498244017867635E-6	8.498244017867635E-6	(bitset & MASK_FLAGS) | mask<=mask	_
com.google.javascript.jscomp.parsing.IRFactory#void#setSourceInfo#?,Node,AstNode#447	0.0	4.929460392245647E-6	4.929460392245647E-6	position2charno(node.getAbsolutePosition())>lineno	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#Node#parseTypeName#?,JsDocToken#1913	0.0	2.3898289903033156E-6	2.3898289903033156E-6	stream.getCharno()>lineno	_
com.google.javascript.rhino.Node#boolean#isEquivalentTo#?,Node,boolean,boolean,boolean#1542	0.0	5.567090829205622E-7	5.567090829205622E-7	node.getIntProp(SLASH_V)>=slashV1	_
com.google.javascript.rhino.Node#void#toString#?,StringBuilder,boolean,boolean,boolean#980	0.0	0.0	0.0	keys[i]>i	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#int#getChar#?#384	0.0	0.0	0.0	getOffset()<c	_
com.google.javascript.rhino.jstype.UnionTypeBuilder#UnionTypeBuilder#addAlternate#?,JSType#271	0.0	0.0	0.0	alternates.size()>=currentIndex	_
com.google.javascript.rhino.Node#void#setLineno#?,int#1167	0.0	0.0	0.0	mergeLineCharNo(lineno,charno)!=lineno	_
com.google.javascript.rhino.Node#void#setCharno#?,int#1171	0.0	0.0	0.0	mergeLineCharNo(getLineno(),charno)>charno	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node#395	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.jscomp.parsing.IRFactory#int#position2charno#?,int#516	0.0	0.0	0.0	sourceString.lastIndexOf('\n',position)<position	_
com.google.javascript.jscomp.TypeInference#void#updateTypeOfParameters#?,Node,FunctionType#1000	0.0	0.0	0.0	n.getChildCount()>i	_
com.google.javascript.rhino.Node#?#Node#?,int,Node#375	0.0	0.0	0.0	-1!=nodeType	_
com.google.javascript.jscomp.NodeUtil#int#precedence#?,int#1191	0.0	0.0	0.0	precedenceWithDefault(type)<type	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#void#addToString#?,int#241	0.0	0.0	0.0	stringBufferTop<=c	_
com.google.javascript.rhino.Node#?#Node#?,int#361	0.0	0.0	0.0	-1<=nodeType	_
com.google.javascript.rhino.Node#int[]#getSortedPropTypes#?#879	0.0	0.0	0.0	x.getType()>count	_
