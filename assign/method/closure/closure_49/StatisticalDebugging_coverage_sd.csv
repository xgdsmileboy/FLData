line	original_score	max_predicate_score	total	predicate	label
com.google.javascript.jscomp.FunctionInjector#int#inlineCostDelta#?,Node,Set<String>,InliningMode#891	0.0	0.6694313884105091	0.6694313884105091	(returnCount > 0) ? returnCount - 1 : 0<aliasCount	_
com.google.javascript.jscomp.FunctionInjector#boolean#doesLowerCost#?,Node,int,int,int,int,int,boolean#814	0.0	0.4905602905603428	0.4905602905603428	(directInlines * costDeltaDirect) + (blockInlines * costDeltaBlock)>costDeltaDirect	_
com.google.javascript.jscomp.FunctionInjector#boolean#inliningLowersCost#?,JSModule,Node,Collection<? extends Reference>,Set<String>,boolean,boolean#760	0.0	0.28308962404469806	0.28308962404469806	referenceCount - referencesUsingBlockInlining!=referenceCount	_
com.google.javascript.jscomp.CodeConsumer#void#addOp#?,String,boolean#207	0.0	0.18583253028272087	0.18583253028272087	getLastChar()<first	_
com.google.javascript.jscomp.CodeGenerator#int#getNonEmptyChildCount#?,Node,int#1108	0.0	0.147662566695507	0.147662566695507	getNonEmptyChildCount(c,maxCount - i)==maxCount	_
com.google.javascript.jscomp.CodeGenerator#void#add#?,Node,Context#496	0.0	0.053243050027333906	0.053243050027333906	n.getIntProp(Node.INCRDECR_PROP)<childCount	_
com.google.javascript.rhino.Node#void#setLineno#?,int#1302	0.0	0.013854518713991244	0.013854518713991244	getCharno()>lineno	_
com.google.javascript.jscomp.parsing.IRFactory#void#setSourceInfo#?,Node,AstNode#317	0.0	0.010640842872518695	0.010640842872518695	position2charno(node.getAbsolutePosition())==lineno	_
com.google.javascript.jscomp.CodeGenerator#String#strEscape#?,String,char,String,String,String,CharsetEncoder#1013	0.0	4.6133062644464255E-5	4.6133062644464255E-5	s.charAt(i)>=quote	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,int,int#548	0.0	4.551742237426419E-5	4.551742237426419E-5	mergeLineCharNo(lineno,charno)>charno	_
com.google.javascript.jscomp.NodeUtil#boolean#isLatin#?,String#2517	0.0	1.216903030461473E-5	1.216903030461473E-5	s.charAt(index)<LARGEST_BASIC_LATIN	_
com.google.javascript.rhino.Node#?#Node#?,int,Node#473	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.rhino.Node#void#toString#?,StringBuilder,boolean,boolean,boolean#1087	0.0	0.0	0.0	keys[i]>=i	_
com.google.javascript.rhino.jstype.UnionTypeBuilder#UnionTypeBuilder#addAlternate#?,JSType#202	0.0	0.0	0.0	alternates.size()==currentIndex	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node,Node#513	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.rhino.Node#?#Node#?,int#459	0.0	0.0	0.0	-1<=nodeType	_
com.google.javascript.jscomp.FunctionInjector#int#estimateCallCost#?,Node,boolean#830	0.0	0.0	0.0	NAME_COST_ESTIMATE + PAREN_COST>numArgs	_
com.google.javascript.rhino.Node#boolean#isEquivalentTo#?,Node,boolean,boolean#1822	0.0	0.0	0.0	node.getIntProp(QUOTED_PROP)>=quoted1	_
com.google.javascript.rhino.Node#void#setCharno#?,int#1310	0.0	0.0	0.0	mergeLineCharNo(getLineno(),charno)!=charno	_
com.google.javascript.rhino.Node#int[]#getSortedPropTypes#?#970	0.0	0.0	0.0	x.getType()!=count	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node#493	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.jscomp.parsing.IRFactory#int#position2charno#?,int#364	0.0	0.0	0.0	sourceString.lastIndexOf('\n',position)<position	_
