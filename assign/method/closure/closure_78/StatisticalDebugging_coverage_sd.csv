line	original_score	max_predicate_score	total	predicate	label
com.google.javascript.jscomp.PeepholeFoldConstants#Node#performArithmeticOp#?,int,Node,Node#721	0.0	0.33333333333333337	0.33333333333333337	lval / rval<rval	GT
com.google.javascript.jscomp.CodeGenerator#void#add#?,Node,Context#99	0.0	0.0030040484762168503	0.0030040484762168503	NodeUtil.precedence(type)>=childCount	_
com.google.javascript.jscomp.JSError#?#JSError#?,String,Node,int,int,DiagnosticType,CheckLevel,String#145	0.0	1.949991835009557E-4	1.949991835009557E-4	lineno<charno	_
com.google.javascript.jscomp.CodeConsumer#void#addOp#?,String,boolean#207	0.0	4.0983479791278075E-5	4.0983479791278075E-5	getLastChar()>first	_
com.google.javascript.jscomp.parsing.IRFactory#void#setSourceInfo#?,Node,AstNode#268	0.0	4.560238907218848E-6	4.560238907218848E-6	position2charno(node.getAbsolutePosition())<lineno	_
com.google.javascript.rhino.Node#void#setCharno#?,int#1137	0.0	4.560238907218848E-6	4.560238907218848E-6	mergeLineCharNo(getLineno(),charno)>charno	_
com.google.javascript.rhino.Node#void#setLineno#?,int#1133	0.0	4.558638334729414E-6	4.558638334729414E-6	mergeLineCharNo(lineno,charno)>charno	_
com.google.javascript.rhino.Node#void#toString#?,StringBuilder,boolean,boolean,boolean#974	0.0	0.0	0.0	keys[i]>=i	_
com.google.javascript.jscomp.NodeUtil#boolean#isLatin#?,String#2405	0.0	0.0	0.0	s.charAt(index)<LARGEST_BASIC_LATIN	_
com.google.javascript.rhino.Node#?#Node#?,int#371	0.0	0.0	0.0	-1!=nodeType	_
com.google.javascript.rhino.Node#int[]#getSortedPropTypes#?#851	0.0	0.0	0.0	x.type>count	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node#405	0.0	0.0	0.0	-1<=nodeType	_
com.google.javascript.jscomp.parsing.IRFactory#int#position2charno#?,int#307	0.0	0.0	0.0	sourceString.lastIndexOf('\n',position)<position	_
