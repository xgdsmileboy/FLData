line	original_score	max_predicate_score	total	predicate	label
com.google.javascript.jscomp.parsing.JsDocTokenStream#boolean#matchChar#?,int#261	0.0	0.0	0.0	getCharIgnoreLineEnd()<=test	_
com.google.javascript.rhino.Node#?#Node#?,int,Node#385	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#Node#parseAndRecordParamTypeNode#?,JsDocToken#1053	0.0	0.0	0.0	stream.getCharno()!=startCharno	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#int#getChar#?#386	0.0	0.0	0.0	getOffset()<=c	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,int,int#460	0.0	0.0	0.0	mergeLineCharNo(lineno,charno)>=nodeType	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#void#addToString#?,int#250	0.0	0.0	0.0	N + 1<=c	_
com.google.javascript.rhino.Node#?#Node#?,int,int,int#453	0.0	0.0	0.0	nodeType>=charno	_
com.google.javascript.jscomp.parsing.IRFactory#JsDocInfoParser#createJsDocInfoParser#?,Comment#244	0.0	0.0	0.0	node.getAbsolutePosition()<lineno	_
com.google.javascript.rhino.Node#?#Node#?,int#371	0.0	0.0	0.0	-1<nodeType	_
com.google.javascript.rhino.Node#void#setLineno#?,int#1129	0.0	0.0	0.0	getCharno()<lineno	_
com.google.javascript.jscomp.parsing.IRFactory#Node#transform#?,AstNode#224	0.0	0.0	0.0	position2charno(node.getAbsolutePosition())>=lineno	_
com.google.javascript.jscomp.parsing.JsDocTokenStream#?#JsDocTokenStream#?,String,int,int#53	0.0	0.0	0.0	initCharno>lineno	_
com.google.javascript.rhino.Node#void#setCharno#?,int#1137	0.0	0.0	0.0	mergeLineCharNo(getLineno(),charno)>charno	_
com.google.javascript.jscomp.parsing.JsDocInfoParser#Node#parseAndRecordTypeNode#?,JsDocToken,int,int,boolean,boolean#1089	0.0	0.0	0.0	stream.getCharno()!=startCharno	_
com.google.javascript.rhino.Node#?#Node#?,int,Node,Node#405	0.0	0.0	0.0	-1!=nodeType	_
com.google.javascript.jscomp.parsing.IRFactory#int#position2charno#?,int#264	0.0	0.0	0.0	sourceString.lastIndexOf('\n',position)==position	_
com.google.javascript.rhino.JSDocInfo#void#setType#?,JSTypeExpression,int#887	0.0	0.0	0.0	(bitset & MASK_FLAGS) | mask==mask	_
