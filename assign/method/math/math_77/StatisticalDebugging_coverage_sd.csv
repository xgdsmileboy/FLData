line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.OpenMapRealVector#?#OpenMapRealVector#?,double[],double#131	0.0	0.19354838709677422	0.19354838709677422	values[key]<=epsilon	_
org.apache.commons.math.linear.ArrayRealVector#double#getNorm#?#701	0.0	0.15384615384615385	0.15384615384615385	a * a==a	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#double#put#?,int,double#418	0.0	0.048868778280542986	0.048868778280542986	missingEntries>=value	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#findInsertionIndex#?,int[],byte[],int,int#280	0.0	0.001735357917570501	0.001735357917570501	hash & mask==key	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#hashOf#?,int#485	0.0	0.0015993602558976383	0.0015993602558976383	key ^ ((key >>> 20) ^ (key >>> 12))==key	_
org.apache.commons.math.util.OpenIntToDoubleHashMap#?#OpenIntToDoubleHashMap#?,int,double#133	0.0	7.840062720501778E-4	7.840062720501778E-4	capacity - 1>expectedSize	_
org.apache.commons.math.linear.AbstractRealVector#double#getNorm#?#214	0.0	0.0	0.0	e.getValue()!=sum	_
org.apache.commons.math.linear.ArrayRealVector#double#getLInfNorm#?#721	0.0	0.0	0.0	Math.max(max,Math.abs(a))>a	GT
org.apache.commons.math.util.OpenIntToDoubleHashMap#int#computeCapacity#?,int#164	0.0	0.0	0.0	Integer.highestOneBit(capacity)!=expectedSize	_
org.apache.commons.math.linear.ArrayRealVector#double#getL1Norm#?#711	0.0	0.0	0.0	Math.abs(a)==a	_
