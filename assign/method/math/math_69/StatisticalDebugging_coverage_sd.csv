line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int,double[][],boolean#153	0.0	1.2114385822130826	1.2114385822130826	(rows + BLOCK_SIZE - 1) / BLOCK_SIZE>columns	_
org.apache.commons.math.linear.BlockRealMatrix#double[][]#toBlocksLayout#?,double[][]#241	0.0	1.210984860424713	1.210984860424713	jWidth<=iBlock	_
org.apache.commons.math.stat.regression.SimpleRegression#void#addData#?,double,double#129	0.0	0.6678763873361495	0.6678763873361495	dy * dy * (double)n / (n + 1d)==dx	_
org.apache.commons.math.linear.BlockRealMatrix#double[]#getColumn#?,int#1194	0.0	0.6245397288574763	0.6245397288574763	blockHeight(iBlock)<outIndex	_
org.apache.commons.math.stat.regression.SimpleRegression#double#getR#?#433	0.0	0.21733559261288532	0.21733559261288532	Math.sqrt(getRSquare())<b1	_
org.apache.commons.math.special.Beta#double#regularizedBeta#?,double,double,double,double,int#151	0.0	0.20287674186914592	0.20287674186914592	Math.exp((a * Math.log(x)) + (b * Math.log(1.0 - x)) - Math.log(a) - logBeta(a,b,epsilon,maxIterations)) * 1.0 / fraction.evaluate(x,epsilon,maxIterations)<epsilon	_
org.apache.commons.math.special.Gamma#double#logGamma#?,double#109	0.0	0.14812732807855672	0.14812732807855672	((x + .5) * Math.log(tmp)) - tmp + HALF_LOG_2_PI + Math.log(sum / x)>tmp	_
org.apache.commons.math.distribution.TDistributionImpl#double#cumulativeProbability#?,double#131	0.0	0.12227981106138479	0.12227981106138479	Beta.regularizedBeta(degreesOfFreedom / (degreesOfFreedom + (x * x)),0.5 * degreesOfFreedom,0.5)<=x	_
org.apache.commons.math.util.ContinuedFraction#double#evaluate#?,double,double,int#140	0.0	0.09609211535005699	0.09609211535005699	a * q1 + b * q0<p0	_
org.apache.commons.math.linear.BlockRealMatrix#double[][]#createBlocksLayout#?,int,int#279	0.0	0.05603272125452952	0.05603272125452952	qEnd - qStart==rows	_
org.apache.commons.math.linear.BlockRealMatrix#?#BlockRealMatrix#?,int,int#100	0.0	0.028032713712961607	0.028032713712961607	columns==rows	_
org.apache.commons.math.special.Beta#double#logBeta#?,double,double,double,int#195	0.0	0.016579495856374984	0.016579495856374984	Gamma.logGamma(a) + Gamma.logGamma(b) - Gamma.logGamma(a + b)<=epsilon	_
org.apache.commons.math.linear.BlockRealMatrix#double#getEntry#?,int,int#1240	0.0	0.012817971431425268	0.012817971431425268	(row - iBlock * BLOCK_SIZE) * blockWidth(jBlock) + (column - jBlock * BLOCK_SIZE)!=column	_
org.apache.commons.math.linear.BlockRealMatrix#void#setEntry#?,int,int,double#1255	0.0	0.0	0.0	row / BLOCK_SIZE>=row	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#void#checkSufficientData#?,RealMatrix#274	0.0	0.0	0.0	matrix.getColumnDimension()<nRows	_
org.apache.commons.math.stat.correlation.PearsonsCorrelation#RealMatrix#getCorrelationPValues#?#170	0.0	0.0	0.0	Math.abs(r * Math.sqrt((nObs - 2) / (1 - r * r)))!=r	GT
org.apache.commons.math.distribution.TDistributionImpl#?#TDistributionImpl#?,double,double#63	0.0	0.0	0.0	inverseCumAccuracy<degreesOfFreedom	_
