line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#repmat#?,RealMatrix,int,int#1244	0.0	0.8823529411764706	0.8823529411764706	mat.getColumnDimension()==rd	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#push#?,double[],double#827	0.0	0.8823529411764706	0.8823529411764706	vals[i - 1]==val	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#initializeCMA#?,double[]#612	0.0	0.8823529411764706	0.8823529411764706	sumw * sumw / sumwq>sumw	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#void#updateCovariance#?,boolean,RealMatrix,RealMatrix,int[],RealMatrix#748	0.0	0.875	0.875	(1. - negminresidualvariance) / square(arnormsInv).multiply(weights).getEntry(0,0)<=negccov	_
org.apache.commons.math3.linear.EigenDecomposition#void#findEigenVectors#?,double[][]#674	0.0	0.6222222222222222	0.6222222222222222	realEigenvalues[i]==maxAbsoluteValue	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#?#CMAESOptimizer#?,int,double[],int,double,boolean,int,int,RandomGenerator,boolean,ConvergenceChecker<PointValuePair>#319	0.0	0.5897435897435896	0.5897435897435896	diagonalOnly>=lambda	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getColumn#?,int#560	0.0	0.2833333333333333	0.2833333333333333	getRowDimension()<column	_
org.apache.commons.math3.linear.AbstractRealMatrix#RealMatrix#getColumnMatrix#?,int#467	0.0	0.23809523809523808	0.23809523809523808	getRowDimension()==column	_
org.apache.commons.math3.util.FastMath#double#log#?,double,double[]#1163	0.0	0.03162393162393162	0.03162393162393162	xa + tmp - tmp<xa	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1743	0.0	0.01744579945799458	0.01744579945799458	c<sinEpsB	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1821	0.0	0.0038644907903303723	0.0038644907903303723	pi2b - xb<=xb	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1677	0.0	0.003124310189666004	0.003124310189666004	p * x2 + 0.041666666666621166<=x	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#331	0.0	0.0023705581373515464	0.0023705581373515464	Double.doubleToLongBits(y)==xInt	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1657	0.0	0.0017947510886195126	0.0017947510886195126	p * x2 + 0.008333333333329196<=x	_
org.apache.commons.math3.random.MersenneTwister#int#next#?,int#248	0.0	0.001422475106685639	0.001422475106685639	mt[M - 1] ^ (y >>> 1) ^ MAG01[y & 0x1]<=y	_
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer#PointValuePair#optimize#?,int,FUNC,GoalType,double[],double[],double[]#95	0.0	0.0011074197120708729	0.0011074197120708729	startPoint.length<maxEval	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2294	0.0	3.9129371484470515E-4	3.9129371484470515E-4	cw.getRemA()<x	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2207	0.0	2.3213226380542143E-4	2.3213226380542143E-4	x>xb	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#reverse#?,int[]#1352	0.0	0.0	0.0	indices[indices.length - i - 1]<i	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#max#?,RealMatrix#1279	0.0	0.0	0.0	m.getEntry(r,c)>=max	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#square#?,RealMatrix#1082	0.0	0.0	0.0	e * e<=e	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#int[]#sortedIndices#?,double[]#846	0.0	0.0	0.0	dis[i].index>=i	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setColumnVector#?,int,RealVector#522	0.0	0.0	0.0	getRowDimension()>column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#double#min#?,RealMatrix#1296	0.0	0.0	0.0	m.getEntry(r,c)<min	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#535	0.0	0.0	0.0	getColumnDimension()>row	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#285	0.0	0.0	0.0	subMatrix[0].length>column	_
org.apache.commons.math3.optimization.direct.CMAESOptimizer#RealMatrix#sequence#?,double,double,double#1266	0.0	0.0	0.0	step<=start	_
