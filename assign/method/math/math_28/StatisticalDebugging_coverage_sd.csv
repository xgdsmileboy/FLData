line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.optimization.linear.SimplexTableau#?#SimplexTableau#?,LinearObjectiveFunction,Collection<LinearConstraint>,GoalType,boolean,double,int#145	0.0	0.6	0.6	f.getCoefficients().getDimension() + (restrictToNonNegative ? 0 : 1)>=maxUlps	_
org.apache.commons.math3.optimization.linear.SimplexSolver#Integer#getPivotRow#?,SimplexTableau,int#145	0.0	0.5	0.5	i<col	GT
org.apache.commons.math3.optimization.linear.SimplexSolver#void#doIteration#?,SimplexTableau#180	0.0	0.08333333333333333	0.08333333333333333	tableau.getEntry(i,pivotCol)>pivotVal	_
org.apache.commons.math3.optimization.linear.SimplexSolver#Integer#getPivotColumn#?,SimplexTableau#73	0.0	0.021929824561403508	0.021929824561403508	tableau.getEntry(0,i)==minValue	_
org.apache.commons.math3.optimization.linear.SimplexTableau#void#subtractRow#?,int,int,double#464	0.0	0.011904761904761904	0.011904761904761904	tableau.getEntry(minuendRow,i) - tableau.getEntry(subtrahendRow,i) * multiple<multiple	_
org.apache.commons.math3.util.Precision#boolean#equals#?,double,double,int#301	0.0	0.0032101808592966265	0.0032101808592966265	Double.doubleToLongBits(y)>xInt	_
org.apache.commons.math3.linear.Array2DRowRealMatrix#void#setSubMatrix#?,double[][],int,int#275	0.0	0.0	0.0	subMatrix[0].length>column	_
org.apache.commons.math3.linear.AbstractRealMatrix#void#setRowVector#?,int,RealVector#492	0.0	0.0	0.0	getColumnDimension()>=row	_
org.apache.commons.math3.optimization.linear.SimplexTableau#void#dropPhase1Objective#?#350	0.0	0.0	0.0	i + getArtificialVariableOffset()!=i	_
org.apache.commons.math3.linear.AbstractRealMatrix#double[]#getRow#?,int#523	0.0	0.0	0.0	getColumnDimension()>row	_
org.apache.commons.math3.optimization.linear.SimplexTableau#RealMatrix#createTableau#?,boolean#213	0.0	0.0	0.0	getNumObjectiveFunctions() + i!=i	_
