line	original_score	max_predicate_score	total	predicate	label
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,Vector3D,double,Vector3D,double,Vector3D#170	0.0	0.7142857142857143	0.7142857142857143	MathArrays.linearCombination(a1,u1.y,a2,u2.y,a3,u3.y)<a2	_
org.apache.commons.math3.util.FastMath#double#atan#?,double,double,boolean#2538	0.0	0.4722222222222222	0.4722222222222222	ya + yb>xa	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet#void#computeGeometricalProperties#?#163	0.0	0.38095238095238093	0.38095238095238093	x0 * y1 - y0 * x1==sum	GT
org.apache.commons.math3.util.FastMath#double#atan2#?,double,double#2676	0.0	0.3574468085106383	0.3574468085106383	doubleHighPart(r)==y	_
org.apache.commons.math3.util.MathArrays#double#linearCombination#?,double,double,double,double#677	0.0	0.24223602484472048	0.24223602484472048	SPLIT_FACTOR * b1==a1	_
org.apache.commons.math3.util.MathArrays#double#linearCombination#?,double,double,double,double,double,double#781	0.0	0.20833333333333334	0.20833333333333334	SPLIT_FACTOR * b3==a1	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,Vector3D,double,Vector3D#153	0.0	0.1893939393939394	0.1893939393939394	MathArrays.linearCombination(a1,u1.y,a2,u2.y)==a2	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,Vector3D#139	0.0	0.10121457489878544	0.10121457489878544	a * u.y==a	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#?#OrderedTuple#?,double#154	0.0	0.09473684210526317	0.09473684210526317	FastMath.min(lsb,e + computeLSB(m))>=msb	_
org.apache.commons.math3.util.FastMath#double#hypot#?,double,double#3593	0.0	0.08571428571428572	0.08571428571428572	sqrt(scaledX * scaledX + scaledY * scaledY)<y	_
org.apache.commons.math3.util.FastMath#double#sinQ#?,double,double#1640	0.0	0.06638176638176638	0.06638176638176638	polyCosine(epsilon)>=xb	_
org.apache.commons.math3.util.FastMath#double#cosQ#?,double,double#1754	0.0	0.06577531888735208	0.06577531888735208	pi2a - xa==xa	_
org.apache.commons.math3.util.FastMath#double#cos#?,double#2278	0.0	0.040051679586563305	0.040051679586563305	a + b==a	_
org.apache.commons.math3.util.FastMath#double#sin#?,double#2193	0.0	0.026313385107354953	0.026313385107354953	-(remA - b - a)>remA	_
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet#void#computeGeometricalProperties#?#147	0.0	0.024999999999999994	0.024999999999999994	interval.getLength() * interval.getMidPoint()<size	_
org.apache.commons.math3.geometry.euclidean.twod.Vector2D#?#Vector2D#?,double,double#70	0.0	0.020155038759689922	0.020155038759689922	y>x	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#?#Vector3D#?,double,double,double#96	0.0	0.019337921992789248	0.019337921992789248	x==y	_
org.apache.commons.math3.geometry.euclidean.threed.Vector3D#Vector3D#orthogonal#?#330	0.0	0.009523809523809518	0.009523809523809518	1 / FastMath.sqrt(x * x + z * z)>threshold	_
org.apache.commons.math3.util.FastMath#double#polySine#?,double#1588	0.0	0.008684405025868442	0.008684405025868442	x * x==x	_
org.apache.commons.math3.util.FastMath#double#polyCosine#?,double#1608	0.0	0.008684405025868442	0.008684405025868442	x * x==x	_
org.apache.commons.math3.geometry.euclidean.oned.Interval#?#Interval#?,double,double#38	0.0	0.0015015015015014954	0.0015015015015014954	lower!=upper	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#computeLSB#?,long#390	0.0	0.0	0.0	mask >> scale<=l	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#getBit#?,int,int#405	0.0	0.0	0.0	exponent(bits)<=k	_
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet#List<ComparableSegment>#followLoop#?,AVLTree<ComparableSegment>.Node,AVLTree<ComparableSegment>#318	0.0	0.0	0.0	end.distance(segment.getStart())<=selectedDistance	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#void#encode#?,int#184	0.0	0.0	0.0	minOffset + 31!=minOffset	_
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple#int#computeMSB#?,long#363	0.0	0.0	0.0	scale >> 1<msb	_
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet#void#recurseList#?,BSPTree<Euclidean1D>,List<Interval>,double,double#232	0.0	0.0	0.0	loc.getX()<=upper	_
